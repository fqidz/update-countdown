<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2022" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2005.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2005.00"> </text><svg id="frames" x="10" width="1180" total_samples="162735792218"><g><title>axum_core::body::try_downcast (23,669,297 samples, 0.01%)</title><rect x="0.0031%" y="1861" width="0.0145%" height="15" fill="rgb(227,0,7)" fg:x="5071554" fg:w="23669297"/><text x="0.2531%" y="1871.50"></text></g><g><title>__memmove_avx_unaligned_erms (49,064,159 samples, 0.03%)</title><rect x="0.0217%" y="1797" width="0.0301%" height="15" fill="rgb(217,0,24)" fg:x="35329716" fg:w="49064159"/><text x="0.2717%" y="1807.50"></text></g><g><title>axum_core::body::try_downcast (65,028,846 samples, 0.04%)</title><rect x="0.0177%" y="1813" width="0.0400%" height="15" fill="rgb(221,193,54)" fg:x="28740851" fg:w="65028846"/><text x="0.2677%" y="1823.50"></text></g><g><title>http_body_util::BodyExt::boxed_unsync (36,199,212 samples, 0.02%)</title><rect x="0.0606%" y="1781" width="0.0222%" height="15" fill="rgb(248,212,6)" fg:x="98567720" fg:w="36199212"/><text x="0.3106%" y="1791.50"></text></g><g><title>http_body_util::combinators::box_body::UnsyncBoxBody&lt;D,E&gt;::new (36,199,212 samples, 0.02%)</title><rect x="0.0606%" y="1765" width="0.0222%" height="15" fill="rgb(208,68,35)" fg:x="98567720" fg:w="36199212"/><text x="0.3106%" y="1775.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (34,327,703 samples, 0.02%)</title><rect x="0.0617%" y="1749" width="0.0211%" height="15" fill="rgb(232,128,0)" fg:x="100439229" fg:w="34327703"/><text x="0.3117%" y="1759.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (34,327,703 samples, 0.02%)</title><rect x="0.0617%" y="1733" width="0.0211%" height="15" fill="rgb(207,160,47)" fg:x="100439229" fg:w="34327703"/><text x="0.3117%" y="1743.50"></text></g><g><title>alloc::alloc::exchange_malloc (20,514,438 samples, 0.01%)</title><rect x="0.0702%" y="1717" width="0.0126%" height="15" fill="rgb(228,23,34)" fg:x="114252494" fg:w="20514438"/><text x="0.3202%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18,700,685 samples, 0.01%)</title><rect x="0.0713%" y="1701" width="0.0115%" height="15" fill="rgb(218,30,26)" fg:x="116066247" fg:w="18700685"/><text x="0.3213%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18,700,685 samples, 0.01%)</title><rect x="0.0713%" y="1685" width="0.0115%" height="15" fill="rgb(220,122,19)" fg:x="116066247" fg:w="18700685"/><text x="0.3213%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (18,700,685 samples, 0.01%)</title><rect x="0.0713%" y="1669" width="0.0115%" height="15" fill="rgb(250,228,42)" fg:x="116066247" fg:w="18700685"/><text x="0.3213%" y="1679.50"></text></g><g><title>&lt;http::response::Response&lt;B&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response (131,620,089 samples, 0.08%)</title><rect x="0.0031%" y="1925" width="0.0809%" height="15" fill="rgb(240,193,28)" fg:x="5071554" fg:w="131620089"/><text x="0.2531%" y="1935.50"></text></g><g><title>http::response::Response&lt;T&gt;::map (131,620,089 samples, 0.08%)</title><rect x="0.0031%" y="1909" width="0.0809%" height="15" fill="rgb(216,20,37)" fg:x="5071554" fg:w="131620089"/><text x="0.2531%" y="1919.50"></text></g><g><title>core::ops::function::FnOnce::call_once (131,620,089 samples, 0.08%)</title><rect x="0.0031%" y="1893" width="0.0809%" height="15" fill="rgb(206,188,39)" fg:x="5071554" fg:w="131620089"/><text x="0.2531%" y="1903.50"></text></g><g><title>axum_core::body::Body::new (131,620,089 samples, 0.08%)</title><rect x="0.0031%" y="1877" width="0.0809%" height="15" fill="rgb(217,207,13)" fg:x="5071554" fg:w="131620089"/><text x="0.2531%" y="1887.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (107,950,792 samples, 0.07%)</title><rect x="0.0177%" y="1861" width="0.0663%" height="15" fill="rgb(231,73,38)" fg:x="28740851" fg:w="107950792"/><text x="0.2677%" y="1871.50"></text></g><g><title>axum_core::body::Body::new::_{{closure}} (107,950,792 samples, 0.07%)</title><rect x="0.0177%" y="1845" width="0.0663%" height="15" fill="rgb(225,20,46)" fg:x="28740851" fg:w="107950792"/><text x="0.2677%" y="1855.50"></text></g><g><title>axum_core::body::boxed (107,950,792 samples, 0.07%)</title><rect x="0.0177%" y="1829" width="0.0663%" height="15" fill="rgb(210,31,41)" fg:x="28740851" fg:w="107950792"/><text x="0.2677%" y="1839.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (42,921,946 samples, 0.03%)</title><rect x="0.0576%" y="1813" width="0.0264%" height="15" fill="rgb(221,200,47)" fg:x="93769697" fg:w="42921946"/><text x="0.3076%" y="1823.50"></text></g><g><title>axum_core::body::boxed::_{{closure}} (38,123,923 samples, 0.02%)</title><rect x="0.0606%" y="1797" width="0.0234%" height="15" fill="rgb(226,26,5)" fg:x="98567720" fg:w="38123923"/><text x="0.3106%" y="1807.50"></text></g><g><title>&lt;futures_util::fns::MapErrFn&lt;F&gt; as futures_util::fns::FnOnce1&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::call_once (49,494,537 samples, 0.03%)</title><rect x="0.0858%" y="1861" width="0.0304%" height="15" fill="rgb(249,33,26)" fg:x="139637061" fg:w="49494537"/><text x="0.3358%" y="1871.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (49,494,537 samples, 0.03%)</title><rect x="0.0858%" y="1845" width="0.0304%" height="15" fill="rgb(235,183,28)" fg:x="139637061" fg:w="49494537"/><text x="0.3358%" y="1855.50"></text></g><g><title>__memmove_avx_unaligned_erms (39,501,023 samples, 0.02%)</title><rect x="0.0919%" y="1829" width="0.0243%" height="15" fill="rgb(221,5,38)" fg:x="149630575" fg:w="39501023"/><text x="0.3419%" y="1839.50"></text></g><g><title>__memmove_avx_unaligned_erms (79,705,953 samples, 0.05%)</title><rect x="0.1241%" y="1861" width="0.0490%" height="15" fill="rgb(247,18,42)" fg:x="202003685" fg:w="79705953"/><text x="0.3741%" y="1871.50"></text></g><g><title>&lt;axum::util::MapIntoResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (315,075,132 samples, 0.19%)</title><rect x="0.0031%" y="1941" width="0.1936%" height="15" fill="rgb(241,131,45)" fg:x="5071554" fg:w="315075132"/><text x="0.2531%" y="1951.50"></text></g><g><title>&lt;tower::util::map_err::MapErrFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (183,455,043 samples, 0.11%)</title><rect x="0.0840%" y="1925" width="0.1127%" height="15" fill="rgb(249,31,29)" fg:x="136691643" fg:w="183455043"/><text x="0.3340%" y="1935.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (183,455,043 samples, 0.11%)</title><rect x="0.0840%" y="1909" width="0.1127%" height="15" fill="rgb(225,111,53)" fg:x="136691643" fg:w="183455043"/><text x="0.3340%" y="1919.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (183,455,043 samples, 0.11%)</title><rect x="0.0840%" y="1893" width="0.1127%" height="15" fill="rgb(238,160,17)" fg:x="136691643" fg:w="183455043"/><text x="0.3340%" y="1903.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (183,455,043 samples, 0.11%)</title><rect x="0.0840%" y="1877" width="0.1127%" height="15" fill="rgb(214,148,48)" fg:x="136691643" fg:w="183455043"/><text x="0.3340%" y="1887.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (26,428,838 samples, 0.02%)</title><rect x="0.1805%" y="1861" width="0.0162%" height="15" fill="rgb(232,36,49)" fg:x="293717848" fg:w="26428838"/><text x="0.4305%" y="1871.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1941" width="0.0321%" height="15" fill="rgb(209,103,24)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1951.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1925" width="0.0321%" height="15" fill="rgb(229,88,8)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1935.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1909" width="0.0321%" height="15" fill="rgb(213,181,19)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1919.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1893" width="0.0321%" height="15" fill="rgb(254,191,54)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1903.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1877" width="0.0321%" height="15" fill="rgb(241,83,37)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1887.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1861" width="0.0321%" height="15" fill="rgb(233,36,39)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1871.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1845" width="0.0321%" height="15" fill="rgb(226,3,54)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1855.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1829" width="0.0321%" height="15" fill="rgb(245,192,40)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1839.50"></text></g><g><title>&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;S,R&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1813" width="0.0321%" height="15" fill="rgb(238,167,29)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1823.50"></text></g><g><title>&lt;hyper_util::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1797" width="0.0321%" height="15" fill="rgb(232,182,51)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1807.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1781" width="0.0321%" height="15" fill="rgb(231,60,39)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1791.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1765" width="0.0321%" height="15" fill="rgb(208,69,12)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1775.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1749" width="0.0321%" height="15" fill="rgb(235,93,37)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1759.50"></text></g><g><title>&lt;axum::util::MapIntoResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1733" width="0.0321%" height="15" fill="rgb(213,116,39)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1743.50"></text></g><g><title>&lt;tower::util::map_err::MapErrFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1717" width="0.0321%" height="15" fill="rgb(222,207,29)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1727.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1701" width="0.0321%" height="15" fill="rgb(206,96,30)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1711.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1685" width="0.0321%" height="15" fill="rgb(218,138,4)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1695.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1669" width="0.0321%" height="15" fill="rgb(250,191,14)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1679.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1653" width="0.0321%" height="15" fill="rgb(239,60,40)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1663.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1637" width="0.0321%" height="15" fill="rgb(206,27,48)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1647.50"></text></g><g><title>&lt;tower_http::timeout::service::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1621" width="0.0321%" height="15" fill="rgb(225,35,8)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1631.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1605" width="0.0321%" height="15" fill="rgb(250,213,24)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1615.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1589" width="0.0321%" height="15" fill="rgb(247,123,22)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1599.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1573" width="0.0321%" height="15" fill="rgb(231,138,38)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1583.50"></text></g><g><title>&lt;axum::util::MapIntoResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (52,276,928 samples, 0.03%)</title><rect x="0.1998%" y="1557" width="0.0321%" height="15" fill="rgb(231,145,46)" fg:x="325075464" fg:w="52276928"/><text x="0.4498%" y="1567.50"></text></g><g><title>__memmove_avx_unaligned_erms (42,070,513 samples, 0.03%)</title><rect x="0.2060%" y="1541" width="0.0259%" height="15" fill="rgb(251,118,11)" fg:x="335281879" fg:w="42070513"/><text x="0.4560%" y="1551.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt; as core::ops::try_trait::Try&gt;::branch (23,340,314 samples, 0.01%)</title><rect x="0.2418%" y="1717" width="0.0143%" height="15" fill="rgb(217,147,25)" fg:x="393452258" fg:w="23340314"/><text x="0.4918%" y="1727.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (32,999,112 samples, 0.02%)</title><rect x="0.2390%" y="1941" width="0.0203%" height="15" fill="rgb(247,81,37)" fg:x="389011179" fg:w="32999112"/><text x="0.4890%" y="1951.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (32,999,112 samples, 0.02%)</title><rect x="0.2390%" y="1925" width="0.0203%" height="15" fill="rgb(209,12,38)" fg:x="389011179" fg:w="32999112"/><text x="0.4890%" y="1935.50"></text></g><g><title>&lt;axum::util::MapIntoResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (32,999,112 samples, 0.02%)</title><rect x="0.2390%" y="1909" width="0.0203%" height="15" fill="rgb(227,1,9)" fg:x="389011179" fg:w="32999112"/><text x="0.4890%" y="1919.50"></text></g><g><title>&lt;tower::util::map_err::MapErrFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (28,558,033 samples, 0.02%)</title><rect x="0.2418%" y="1893" width="0.0175%" height="15" fill="rgb(248,47,43)" fg:x="393452258" fg:w="28558033"/><text x="0.4918%" y="1903.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (28,558,033 samples, 0.02%)</title><rect x="0.2418%" y="1877" width="0.0175%" height="15" fill="rgb(221,10,30)" fg:x="393452258" fg:w="28558033"/><text x="0.4918%" y="1887.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (28,558,033 samples, 0.02%)</title><rect x="0.2418%" y="1861" width="0.0175%" height="15" fill="rgb(210,229,1)" fg:x="393452258" fg:w="28558033"/><text x="0.4918%" y="1871.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (28,558,033 samples, 0.02%)</title><rect x="0.2418%" y="1845" width="0.0175%" height="15" fill="rgb(222,148,37)" fg:x="393452258" fg:w="28558033"/><text x="0.4918%" y="1855.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (28,558,033 samples, 0.02%)</title><rect x="0.2418%" y="1829" width="0.0175%" height="15" fill="rgb(234,67,33)" fg:x="393452258" fg:w="28558033"/><text x="0.4918%" y="1839.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (28,558,033 samples, 0.02%)</title><rect x="0.2418%" y="1813" width="0.0175%" height="15" fill="rgb(247,98,35)" fg:x="393452258" fg:w="28558033"/><text x="0.4918%" y="1823.50"></text></g><g><title>&lt;tower_http::timeout::service::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (28,558,033 samples, 0.02%)</title><rect x="0.2418%" y="1797" width="0.0175%" height="15" fill="rgb(247,138,52)" fg:x="393452258" fg:w="28558033"/><text x="0.4918%" y="1807.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (28,558,033 samples, 0.02%)</title><rect x="0.2418%" y="1781" width="0.0175%" height="15" fill="rgb(213,79,30)" fg:x="393452258" fg:w="28558033"/><text x="0.4918%" y="1791.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (28,558,033 samples, 0.02%)</title><rect x="0.2418%" y="1765" width="0.0175%" height="15" fill="rgb(246,177,23)" fg:x="393452258" fg:w="28558033"/><text x="0.4918%" y="1775.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (28,558,033 samples, 0.02%)</title><rect x="0.2418%" y="1749" width="0.0175%" height="15" fill="rgb(230,62,27)" fg:x="393452258" fg:w="28558033"/><text x="0.4918%" y="1759.50"></text></g><g><title>&lt;axum::util::MapIntoResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (28,558,033 samples, 0.02%)</title><rect x="0.2418%" y="1733" width="0.0175%" height="15" fill="rgb(216,154,8)" fg:x="393452258" fg:w="28558033"/><text x="0.4918%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,016,888 samples, 0.01%)</title><rect x="0.3434%" y="1509" width="0.0111%" height="15" fill="rgb(244,35,45)" fg:x="558816709" fg:w="18016888"/><text x="0.5934%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::sync::Arc&lt;str&gt;,axum::util::PercentDecodedStr)]&gt; (18,016,888 samples, 0.01%)</title><rect x="0.3434%" y="1493" width="0.0111%" height="15" fill="rgb(251,115,12)" fg:x="558816709" fg:w="18016888"/><text x="0.5934%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::sync::Arc&lt;str&gt;,axum::util::PercentDecodedStr)&gt; (18,016,888 samples, 0.01%)</title><rect x="0.3434%" y="1477" width="0.0111%" height="15" fill="rgb(240,54,50)" fg:x="558816709" fg:w="18016888"/><text x="0.5934%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;str&gt;&gt; (18,016,888 samples, 0.01%)</title><rect x="0.3434%" y="1461" width="0.0111%" height="15" fill="rgb(233,84,52)" fg:x="558816709" fg:w="18016888"/><text x="0.5934%" y="1471.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,016,888 samples, 0.01%)</title><rect x="0.3434%" y="1445" width="0.0111%" height="15" fill="rgb(207,117,47)" fg:x="558816709" fg:w="18016888"/><text x="0.5934%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (48,594,054 samples, 0.03%)</title><rect x="0.3274%" y="1621" width="0.0299%" height="15" fill="rgb(249,43,39)" fg:x="532862271" fg:w="48594054"/><text x="0.5774%" y="1631.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (45,032,028 samples, 0.03%)</title><rect x="0.3296%" y="1605" width="0.0277%" height="15" fill="rgb(209,38,44)" fg:x="536424297" fg:w="45032028"/><text x="0.5796%" y="1615.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (45,032,028 samples, 0.03%)</title><rect x="0.3296%" y="1589" width="0.0277%" height="15" fill="rgb(236,212,23)" fg:x="536424297" fg:w="45032028"/><text x="0.5796%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;)&gt; (45,032,028 samples, 0.03%)</title><rect x="0.3296%" y="1573" width="0.0277%" height="15" fill="rgb(242,79,21)" fg:x="536424297" fg:w="45032028"/><text x="0.5796%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;&gt; (45,032,028 samples, 0.03%)</title><rect x="0.3296%" y="1557" width="0.0277%" height="15" fill="rgb(211,96,35)" fg:x="536424297" fg:w="45032028"/><text x="0.5796%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::url_params::UrlParams&gt; (28,141,833 samples, 0.02%)</title><rect x="0.3400%" y="1541" width="0.0173%" height="15" fill="rgb(253,215,40)" fg:x="553314492" fg:w="28141833"/><text x="0.5900%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::sync::Arc&lt;str&gt;,axum::util::PercentDecodedStr)&gt;&gt; (24,097,112 samples, 0.01%)</title><rect x="0.3425%" y="1525" width="0.0148%" height="15" fill="rgb(211,81,21)" fg:x="557359213" fg:w="24097112"/><text x="0.5925%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::extensions::Extensions&gt; (67,814,859 samples, 0.04%)</title><rect x="0.3165%" y="1749" width="0.0417%" height="15" fill="rgb(208,190,38)" fg:x="515063554" fg:w="67814859"/><text x="0.5665%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt;&gt; (65,256,716 samples, 0.04%)</title><rect x="0.3181%" y="1733" width="0.0401%" height="15" fill="rgb(235,213,38)" fg:x="517621697" fg:w="65256716"/><text x="0.5681%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt; (61,775,430 samples, 0.04%)</title><rect x="0.3202%" y="1717" width="0.0380%" height="15" fill="rgb(237,122,38)" fg:x="521102983" fg:w="61775430"/><text x="0.5702%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (57,327,152 samples, 0.04%)</title><rect x="0.3229%" y="1701" width="0.0352%" height="15" fill="rgb(244,218,35)" fg:x="525551261" fg:w="57327152"/><text x="0.5729%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (55,306,638 samples, 0.03%)</title><rect x="0.3242%" y="1685" width="0.0340%" height="15" fill="rgb(240,68,47)" fg:x="527571775" fg:w="55306638"/><text x="0.5742%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;)&gt;&gt; (55,306,638 samples, 0.03%)</title><rect x="0.3242%" y="1669" width="0.0340%" height="15" fill="rgb(210,16,53)" fg:x="527571775" fg:w="55306638"/><text x="0.5742%" y="1679.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55,306,638 samples, 0.03%)</title><rect x="0.3242%" y="1653" width="0.0340%" height="15" fill="rgb(235,124,12)" fg:x="527571775" fg:w="55306638"/><text x="0.5742%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (52,439,848 samples, 0.03%)</title><rect x="0.3260%" y="1637" width="0.0322%" height="15" fill="rgb(224,169,11)" fg:x="530438565" fg:w="52439848"/><text x="0.5760%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,827,980 samples, 0.01%)</title><rect x="0.3615%" y="1717" width="0.0103%" height="15" fill="rgb(250,166,2)" fg:x="588327779" fg:w="16827980"/><text x="0.6115%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;]&gt; (16,827,980 samples, 0.01%)</title><rect x="0.3615%" y="1701" width="0.0103%" height="15" fill="rgb(242,216,29)" fg:x="588327779" fg:w="16827980"/><text x="0.6115%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt; (16,827,980 samples, 0.01%)</title><rect x="0.3615%" y="1685" width="0.0103%" height="15" fill="rgb(230,116,27)" fg:x="588327779" fg:w="16827980"/><text x="0.6115%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (20,557,034 samples, 0.01%)</title><rect x="0.3615%" y="1733" width="0.0126%" height="15" fill="rgb(228,99,48)" fg:x="588327779" fg:w="20557034"/><text x="0.6115%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (33,387,887 samples, 0.02%)</title><rect x="0.3582%" y="1749" width="0.0205%" height="15" fill="rgb(253,11,6)" fg:x="582878413" fg:w="33387887"/><text x="0.6082%" y="1759.50"></text></g><g><title>&lt;T as axum_core::extract::FromRequest&lt;S,axum_core::extract::private::ViaParts&gt;&gt;::from_request::_{{closure}} (129,971,192 samples, 0.08%)</title><rect x="0.3093%" y="1781" width="0.0799%" height="15" fill="rgb(247,143,39)" fg:x="503276652" fg:w="129971192"/><text x="0.5593%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::request::Parts&gt; (123,759,367 samples, 0.08%)</title><rect x="0.3131%" y="1765" width="0.0760%" height="15" fill="rgb(236,97,10)" fg:x="509488477" fg:w="123759367"/><text x="0.5631%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (16,981,544 samples, 0.01%)</title><rect x="0.3787%" y="1749" width="0.0104%" height="15" fill="rgb(233,208,19)" fg:x="616266300" fg:w="16981544"/><text x="0.6287%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum_core::body::Body&gt; (17,142,841 samples, 0.01%)</title><rect x="0.3905%" y="1765" width="0.0105%" height="15" fill="rgb(216,164,2)" fg:x="635481296" fg:w="17142841"/><text x="0.6405%" y="1775.50"></text></g><g><title>&lt;T as axum_core::extract::FromRequest&lt;S,axum_core::extract::private::ViaParts&gt;&gt;::from_request (24,004,732 samples, 0.01%)</title><rect x="0.3891%" y="1781" width="0.0148%" height="15" fill="rgb(220,129,5)" fg:x="633247844" fg:w="24004732"/><text x="0.6391%" y="1791.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get (43,574,371 samples, 0.03%)</title><rect x="0.4445%" y="1749" width="0.0268%" height="15" fill="rgb(242,17,10)" fg:x="723291604" fg:w="43574371"/><text x="0.6945%" y="1759.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get2 (43,574,371 samples, 0.03%)</title><rect x="0.4445%" y="1733" width="0.0268%" height="15" fill="rgb(242,107,0)" fg:x="723291604" fg:w="43574371"/><text x="0.6945%" y="1743.50"></text></g><g><title>&lt;&amp;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (41,073,338 samples, 0.03%)</title><rect x="0.4460%" y="1717" width="0.0252%" height="15" fill="rgb(251,28,31)" fg:x="725792637" fg:w="41073338"/><text x="0.6960%" y="1727.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (36,848,470 samples, 0.02%)</title><rect x="0.4486%" y="1701" width="0.0226%" height="15" fill="rgb(233,223,10)" fg:x="730017505" fg:w="36848470"/><text x="0.6986%" y="1711.50"></text></g><g><title>axum::extract::ws::header_contains (74,174,483 samples, 0.05%)</title><rect x="0.4271%" y="1765" width="0.0456%" height="15" fill="rgb(215,21,27)" fg:x="695107928" fg:w="74174483"/><text x="0.6771%" y="1775.50"></text></g><g><title>axum::extract::ws::header_eq (17,720,523 samples, 0.01%)</title><rect x="0.4727%" y="1765" width="0.0109%" height="15" fill="rgb(232,23,21)" fg:x="769282411" fg:w="17720523"/><text x="0.7227%" y="1775.50"></text></g><g><title>http::extensions::Extensions::remove (51,444,268 samples, 0.03%)</title><rect x="0.4961%" y="1765" width="0.0316%" height="15" fill="rgb(244,5,23)" fg:x="807338154" fg:w="51444268"/><text x="0.7461%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (49,472,483 samples, 0.03%)</title><rect x="0.4973%" y="1749" width="0.0304%" height="15" fill="rgb(226,81,46)" fg:x="809309939" fg:w="49472483"/><text x="0.7473%" y="1759.50"></text></g><g><title>http::extensions::Extensions::remove::_{{closure}} (45,165,967 samples, 0.03%)</title><rect x="0.5000%" y="1733" width="0.0278%" height="15" fill="rgb(247,70,30)" fg:x="813616455" fg:w="45165967"/><text x="0.7500%" y="1743.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (26,040,218 samples, 0.02%)</title><rect x="0.5117%" y="1717" width="0.0160%" height="15" fill="rgb(212,68,19)" fg:x="832742204" fg:w="26040218"/><text x="0.7617%" y="1727.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (26,040,218 samples, 0.02%)</title><rect x="0.5117%" y="1701" width="0.0160%" height="15" fill="rgb(240,187,13)" fg:x="832742204" fg:w="26040218"/><text x="0.7617%" y="1711.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (26,040,218 samples, 0.02%)</title><rect x="0.5117%" y="1685" width="0.0160%" height="15" fill="rgb(223,113,26)" fg:x="832742204" fg:w="26040218"/><text x="0.7617%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (18,663,906 samples, 0.01%)</title><rect x="0.5162%" y="1669" width="0.0115%" height="15" fill="rgb(206,192,2)" fg:x="840118516" fg:w="18663906"/><text x="0.7662%" y="1679.50"></text></g><g><title>&lt;axum::extract::ws::WebSocketUpgrade as axum_core::extract::FromRequestParts&lt;S&gt;&gt;::from_request_parts::_{{closure}} (228,019,065 samples, 0.14%)</title><rect x="0.4054%" y="1781" width="0.1401%" height="15" fill="rgb(241,108,4)" fg:x="659707723" fg:w="228019065"/><text x="0.6554%" y="1791.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get (28,944,366 samples, 0.02%)</title><rect x="0.5277%" y="1765" width="0.0178%" height="15" fill="rgb(247,173,49)" fg:x="858782422" fg:w="28944366"/><text x="0.7777%" y="1775.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get2 (24,654,877 samples, 0.02%)</title><rect x="0.5304%" y="1749" width="0.0152%" height="15" fill="rgb(224,114,35)" fg:x="863071911" fg:w="24654877"/><text x="0.7804%" y="1759.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (20,906,804 samples, 0.01%)</title><rect x="0.5327%" y="1733" width="0.0128%" height="15" fill="rgb(245,159,27)" fg:x="866819984" fg:w="20906804"/><text x="0.7827%" y="1743.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (20,906,804 samples, 0.01%)</title><rect x="0.5327%" y="1717" width="0.0128%" height="15" fill="rgb(245,172,44)" fg:x="866819984" fg:w="20906804"/><text x="0.7827%" y="1727.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (24,676,426 samples, 0.02%)</title><rect x="0.6587%" y="1573" width="0.0152%" height="15" fill="rgb(236,23,11)" fg:x="1071900661" fg:w="24676426"/><text x="0.9087%" y="1583.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19,963,897 samples, 0.01%)</title><rect x="0.6616%" y="1557" width="0.0123%" height="15" fill="rgb(205,117,38)" fg:x="1076613190" fg:w="19963897"/><text x="0.9116%" y="1567.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping::precondition_check (19,963,897 samples, 0.01%)</title><rect x="0.6616%" y="1541" width="0.0123%" height="15" fill="rgb(237,72,25)" fg:x="1076613190" fg:w="19963897"/><text x="0.9116%" y="1551.50"></text></g><g><title>sha1::compress::x86::digest_blocks (118,089,980 samples, 0.07%)</title><rect x="0.6151%" y="1589" width="0.0726%" height="15" fill="rgb(244,70,9)" fg:x="1000977110" fg:w="118089980"/><text x="0.8651%" y="1599.50"></text></g><g><title>&lt;sha1::Sha1Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core::_{{closure}} (138,528,796 samples, 0.09%)</title><rect x="0.6087%" y="1637" width="0.0851%" height="15" fill="rgb(217,125,39)" fg:x="990601466" fg:w="138528796"/><text x="0.8587%" y="1647.50"></text></g><g><title>sha1::compress::compress (135,359,656 samples, 0.08%)</title><rect x="0.6107%" y="1621" width="0.0832%" height="15" fill="rgb(235,36,10)" fg:x="993770606" fg:w="135359656"/><text x="0.8607%" y="1631.50"></text></g><g><title>sha1::compress::x86::compress (132,569,817 samples, 0.08%)</title><rect x="0.6124%" y="1605" width="0.0815%" height="15" fill="rgb(251,123,47)" fg:x="996560445" fg:w="132569817"/><text x="0.8624%" y="1615.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,block_buffer::Eager&gt;::len64_padding_be (165,645,960 samples, 0.10%)</title><rect x="0.5970%" y="1669" width="0.1018%" height="15" fill="rgb(221,13,13)" fg:x="971543846" fg:w="165645960"/><text x="0.8470%" y="1679.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,block_buffer::Eager&gt;::digest_pad (159,779,912 samples, 0.10%)</title><rect x="0.6006%" y="1653" width="0.0982%" height="15" fill="rgb(238,131,9)" fg:x="977409894" fg:w="159779912"/><text x="0.8506%" y="1663.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (210,337,294 samples, 0.13%)</title><rect x="0.5855%" y="1701" width="0.1293%" height="15" fill="rgb(211,50,8)" fg:x="952828357" fg:w="210337294"/><text x="0.8355%" y="1711.50"></text></g><g><title>&lt;sha1::Sha1Core as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (210,337,294 samples, 0.13%)</title><rect x="0.5855%" y="1685" width="0.1293%" height="15" fill="rgb(245,182,24)" fg:x="952828357" fg:w="210337294"/><text x="0.8355%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (22,236,562 samples, 0.01%)</title><rect x="0.7158%" y="1669" width="0.0137%" height="15" fill="rgb(242,14,37)" fg:x="1164837697" fg:w="22236562"/><text x="0.9658%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22,236,562 samples, 0.01%)</title><rect x="0.7158%" y="1653" width="0.0137%" height="15" fill="rgb(246,228,12)" fg:x="1164837697" fg:w="22236562"/><text x="0.9658%" y="1663.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18,280,379 samples, 0.01%)</title><rect x="0.7182%" y="1637" width="0.0112%" height="15" fill="rgb(213,55,15)" fg:x="1168793880" fg:w="18280379"/><text x="0.9682%" y="1647.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (247,668,147 samples, 0.15%)</title><rect x="0.5805%" y="1733" width="0.1522%" height="15" fill="rgb(209,9,3)" fg:x="944752761" fg:w="247668147"/><text x="0.8305%" y="1743.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (247,668,147 samples, 0.15%)</title><rect x="0.5805%" y="1717" width="0.1522%" height="15" fill="rgb(230,59,30)" fg:x="944752761" fg:w="247668147"/><text x="0.8305%" y="1727.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (29,255,257 samples, 0.02%)</title><rect x="0.7148%" y="1701" width="0.0180%" height="15" fill="rgb(209,121,21)" fg:x="1163165651" fg:w="29255257"/><text x="0.9648%" y="1711.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (29,255,257 samples, 0.02%)</title><rect x="0.7148%" y="1685" width="0.0180%" height="15" fill="rgb(220,109,13)" fg:x="1163165651" fg:w="29255257"/><text x="0.9648%" y="1695.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::update (34,416,011 samples, 0.02%)</title><rect x="0.7327%" y="1733" width="0.0211%" height="15" fill="rgb(232,18,1)" fg:x="1192420908" fg:w="34416011"/><text x="0.9827%" y="1743.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update (31,275,208 samples, 0.02%)</title><rect x="0.7347%" y="1717" width="0.0192%" height="15" fill="rgb(215,41,42)" fg:x="1195561711" fg:w="31275208"/><text x="0.9847%" y="1727.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (31,275,208 samples, 0.02%)</title><rect x="0.7347%" y="1701" width="0.0192%" height="15" fill="rgb(224,123,36)" fg:x="1195561711" fg:w="31275208"/><text x="0.9847%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (24,815,162 samples, 0.02%)</title><rect x="0.7724%" y="1621" width="0.0152%" height="15" fill="rgb(240,125,3)" fg:x="1256932167" fg:w="24815162"/><text x="1.0224%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (24,815,162 samples, 0.02%)</title><rect x="0.7724%" y="1605" width="0.0152%" height="15" fill="rgb(205,98,50)" fg:x="1256932167" fg:w="24815162"/><text x="1.0224%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (36,702,515 samples, 0.02%)</title><rect x="0.7664%" y="1669" width="0.0226%" height="15" fill="rgb(205,185,37)" fg:x="1247204263" fg:w="36702515"/><text x="1.0164%" y="1679.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36,702,515 samples, 0.02%)</title><rect x="0.7664%" y="1653" width="0.0226%" height="15" fill="rgb(238,207,15)" fg:x="1247204263" fg:w="36702515"/><text x="1.0164%" y="1663.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36,702,515 samples, 0.02%)</title><rect x="0.7664%" y="1637" width="0.0226%" height="15" fill="rgb(213,199,42)" fg:x="1247204263" fg:w="36702515"/><text x="1.0164%" y="1647.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as core::default::Default&gt;::default (69,428,761 samples, 0.04%)</title><rect x="0.7579%" y="1733" width="0.0427%" height="15" fill="rgb(235,201,11)" fg:x="1233451315" fg:w="69428761"/><text x="1.0079%" y="1743.50"></text></g><g><title>&lt;block_buffer::BlockBuffer&lt;BlockSize,Kind&gt; as core::default::Default&gt;::default (66,001,999 samples, 0.04%)</title><rect x="0.7601%" y="1717" width="0.0406%" height="15" fill="rgb(207,46,11)" fg:x="1236878077" fg:w="66001999"/><text x="1.0101%" y="1727.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (63,847,765 samples, 0.04%)</title><rect x="0.7614%" y="1701" width="0.0392%" height="15" fill="rgb(241,35,35)" fg:x="1239032311" fg:w="63847765"/><text x="1.0114%" y="1711.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (63,847,765 samples, 0.04%)</title><rect x="0.7614%" y="1685" width="0.0392%" height="15" fill="rgb(243,32,47)" fg:x="1239032311" fg:w="63847765"/><text x="1.0114%" y="1695.50"></text></g><g><title>&lt;base64::engine::general_purpose::GeneralPurpose as base64::engine::Engine&gt;::internal_encode (32,481,444 samples, 0.02%)</title><rect x="0.8190%" y="1685" width="0.0200%" height="15" fill="rgb(247,202,23)" fg:x="1332864494" fg:w="32481444"/><text x="1.0690%" y="1695.50"></text></g><g><title>base64::encode::encode_with_padding (39,488,359 samples, 0.02%)</title><rect x="0.8190%" y="1701" width="0.0243%" height="15" fill="rgb(219,102,11)" fg:x="1332864494" fg:w="39488359"/><text x="1.0690%" y="1711.50"></text></g><g><title>base64::engine::Engine::encode (82,566,465 samples, 0.05%)</title><rect x="0.8006%" y="1733" width="0.0507%" height="15" fill="rgb(243,110,44)" fg:x="1302880076" fg:w="82566465"/><text x="1.0506%" y="1743.50"></text></g><g><title>base64::engine::Engine::encode::inner (82,566,465 samples, 0.05%)</title><rect x="0.8006%" y="1717" width="0.0507%" height="15" fill="rgb(222,74,54)" fg:x="1302880076" fg:w="82566465"/><text x="1.0506%" y="1727.50"></text></g><g><title>axum::extract::ws::sign (475,484,442 samples, 0.29%)</title><rect x="0.5783%" y="1749" width="0.2922%" height="15" fill="rgb(216,99,12)" fg:x="941119329" fg:w="475484442"/><text x="0.8283%" y="1759.50"></text></g><g><title>http::header::value::HeaderValue::from_maybe_shared (31,157,230 samples, 0.02%)</title><rect x="0.8513%" y="1733" width="0.0191%" height="15" fill="rgb(226,22,26)" fg:x="1385446541" fg:w="31157230"/><text x="1.1013%" y="1743.50"></text></g><g><title>http::header::value::HeaderValue::from_shared (21,468,901 samples, 0.01%)</title><rect x="0.8573%" y="1717" width="0.0132%" height="15" fill="rgb(217,163,10)" fg:x="1395134870" fg:w="21468901"/><text x="1.1073%" y="1727.50"></text></g><g><title>http::header::value::HeaderValue::try_from_generic (21,468,901 samples, 0.01%)</title><rect x="0.8573%" y="1701" width="0.0132%" height="15" fill="rgb(213,25,53)" fg:x="1395134870" fg:w="21468901"/><text x="1.1073%" y="1711.50"></text></g><g><title>axum_core::body::Body::empty (26,815,913 samples, 0.02%)</title><rect x="0.8705%" y="1749" width="0.0165%" height="15" fill="rgb(252,105,26)" fg:x="1416603771" fg:w="26815913"/><text x="1.1205%" y="1759.50"></text></g><g><title>axum_core::body::Body::new (23,766,879 samples, 0.01%)</title><rect x="0.8724%" y="1733" width="0.0146%" height="15" fill="rgb(220,39,43)" fg:x="1419652805" fg:w="23766879"/><text x="1.1224%" y="1743.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (30,641,667 samples, 0.02%)</title><rect x="0.9226%" y="1685" width="0.0188%" height="15" fill="rgb(229,68,48)" fg:x="1501339414" fg:w="30641667"/><text x="1.1726%" y="1695.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (19,019,980 samples, 0.01%)</title><rect x="0.9414%" y="1685" width="0.0117%" height="15" fill="rgb(252,8,32)" fg:x="1531981081" fg:w="19019980"/><text x="1.1914%" y="1695.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (22,251,312 samples, 0.01%)</title><rect x="0.9751%" y="1637" width="0.0137%" height="15" fill="rgb(223,20,43)" fg:x="1586823353" fg:w="22251312"/><text x="1.2251%" y="1647.50"></text></g><g><title>http::response::Builder::header (149,212,901 samples, 0.09%)</title><rect x="0.9096%" y="1749" width="0.0917%" height="15" fill="rgb(229,81,49)" fg:x="1480209331" fg:w="149212901"/><text x="1.1596%" y="1759.50"></text></g><g><title>http::response::Builder::and_then (147,042,291 samples, 0.09%)</title><rect x="0.9109%" y="1733" width="0.0904%" height="15" fill="rgb(236,28,36)" fg:x="1482379941" fg:w="147042291"/><text x="1.1609%" y="1743.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (137,331,941 samples, 0.08%)</title><rect x="0.9169%" y="1717" width="0.0844%" height="15" fill="rgb(249,185,26)" fg:x="1492090291" fg:w="137331941"/><text x="1.1669%" y="1727.50"></text></g><g><title>http::response::Builder::header::_{{closure}} (132,551,918 samples, 0.08%)</title><rect x="0.9198%" y="1701" width="0.0815%" height="15" fill="rgb(249,174,33)" fg:x="1496870314" fg:w="132551918"/><text x="1.1698%" y="1711.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append (67,641,384 samples, 0.04%)</title><rect x="0.9597%" y="1685" width="0.0416%" height="15" fill="rgb(233,201,37)" fg:x="1561780848" fg:w="67641384"/><text x="1.2097%" y="1695.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_append (67,641,384 samples, 0.04%)</title><rect x="0.9597%" y="1669" width="0.0416%" height="15" fill="rgb(221,78,26)" fg:x="1561780848" fg:w="67641384"/><text x="1.2097%" y="1679.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append2 (65,466,820 samples, 0.04%)</title><rect x="0.9610%" y="1653" width="0.0402%" height="15" fill="rgb(250,127,30)" fg:x="1563955412" fg:w="65466820"/><text x="1.2110%" y="1663.50"></text></g><g><title>http::header::map::hash_elem_using (17,674,988 samples, 0.01%)</title><rect x="0.9904%" y="1637" width="0.0109%" height="15" fill="rgb(230,49,44)" fg:x="1611747244" fg:w="17674988"/><text x="1.2404%" y="1647.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (17,674,988 samples, 0.01%)</title><rect x="0.9904%" y="1621" width="0.0109%" height="15" fill="rgb(229,67,23)" fg:x="1611747244" fg:w="17674988"/><text x="1.2404%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (36,241,025 samples, 0.02%)</title><rect x="1.0490%" y="1589" width="0.0223%" height="15" fill="rgb(249,83,47)" fg:x="1707095865" fg:w="36241025"/><text x="1.2990%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (34,472,277 samples, 0.02%)</title><rect x="1.0501%" y="1573" width="0.0212%" height="15" fill="rgb(215,43,3)" fg:x="1708864613" fg:w="34472277"/><text x="1.3001%" y="1583.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (32,494,382 samples, 0.02%)</title><rect x="1.0513%" y="1557" width="0.0200%" height="15" fill="rgb(238,154,13)" fg:x="1710842508" fg:w="32494382"/><text x="1.3013%" y="1567.50"></text></g><g><title>tokio::runtime::context::with_scheduler (32,494,382 samples, 0.02%)</title><rect x="1.0513%" y="1541" width="0.0200%" height="15" fill="rgb(219,56,2)" fg:x="1710842508" fg:w="32494382"/><text x="1.3013%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29,923,304 samples, 0.02%)</title><rect x="1.0529%" y="1525" width="0.0184%" height="15" fill="rgb(233,0,4)" fg:x="1713413586" fg:w="29923304"/><text x="1.3029%" y="1535.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (27,761,498 samples, 0.02%)</title><rect x="1.0542%" y="1509" width="0.0171%" height="15" fill="rgb(235,30,7)" fg:x="1715575392" fg:w="27761498"/><text x="1.3042%" y="1519.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (23,809,867 samples, 0.01%)</title><rect x="1.0566%" y="1493" width="0.0146%" height="15" fill="rgb(250,79,13)" fg:x="1719527023" fg:w="23809867"/><text x="1.3066%" y="1503.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (20,270,802 samples, 0.01%)</title><rect x="1.0588%" y="1477" width="0.0125%" height="15" fill="rgb(211,146,34)" fg:x="1723066088" fg:w="20270802"/><text x="1.3088%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (20,270,802 samples, 0.01%)</title><rect x="1.0588%" y="1461" width="0.0125%" height="15" fill="rgb(228,22,38)" fg:x="1723066088" fg:w="20270802"/><text x="1.3088%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::sharded_list::ShardGuard&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt; (17,156,842 samples, 0.01%)</title><rect x="1.0797%" y="1541" width="0.0105%" height="15" fill="rgb(235,168,5)" fg:x="1757053966" fg:w="17156842"/><text x="1.3297%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (17,156,842 samples, 0.01%)</title><rect x="1.0797%" y="1525" width="0.0105%" height="15" fill="rgb(221,155,16)" fg:x="1757053966" fg:w="17156842"/><text x="1.3297%" y="1535.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (23,426,966 samples, 0.01%)</title><rect x="1.0797%" y="1557" width="0.0144%" height="15" fill="rgb(215,215,53)" fg:x="1757053966" fg:w="23426966"/><text x="1.3297%" y="1567.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (35,179,354 samples, 0.02%)</title><rect x="1.0776%" y="1573" width="0.0216%" height="15" fill="rgb(223,4,10)" fg:x="1753627296" fg:w="35179354"/><text x="1.3276%" y="1583.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17,412,924 samples, 0.01%)</title><rect x="1.1146%" y="1525" width="0.0107%" height="15" fill="rgb(234,103,6)" fg:x="1813900103" fg:w="17412924"/><text x="1.3646%" y="1535.50"></text></g><g><title>alloc::alloc::exchange_malloc (17,412,924 samples, 0.01%)</title><rect x="1.1146%" y="1509" width="0.0107%" height="15" fill="rgb(227,97,0)" fg:x="1813900103" fg:w="17412924"/><text x="1.3646%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (160,935,988 samples, 0.10%)</title><rect x="1.0403%" y="1669" width="0.0989%" height="15" fill="rgb(234,150,53)" fg:x="1692872087" fg:w="160935988"/><text x="1.2903%" y="1679.50"></text></g><g><title>tokio::task::spawn::spawn_inner::_{{closure}} (157,356,491 samples, 0.10%)</title><rect x="1.0425%" y="1653" width="0.0967%" height="15" fill="rgb(228,201,54)" fg:x="1696451584" fg:w="157356491"/><text x="1.2925%" y="1663.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (155,188,142 samples, 0.10%)</title><rect x="1.0438%" y="1637" width="0.0954%" height="15" fill="rgb(222,22,37)" fg:x="1698619933" fg:w="155188142"/><text x="1.2938%" y="1647.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (155,188,142 samples, 0.10%)</title><rect x="1.0438%" y="1621" width="0.0954%" height="15" fill="rgb(237,53,32)" fg:x="1698619933" fg:w="155188142"/><text x="1.2938%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (153,430,298 samples, 0.09%)</title><rect x="1.0449%" y="1605" width="0.0943%" height="15" fill="rgb(233,25,53)" fg:x="1700377777" fg:w="153430298"/><text x="1.2949%" y="1615.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (110,471,185 samples, 0.07%)</title><rect x="1.0713%" y="1589" width="0.0679%" height="15" fill="rgb(210,40,34)" fg:x="1743336890" fg:w="110471185"/><text x="1.3213%" y="1599.50"></text></g><g><title>tokio::runtime::task::new_task (65,001,425 samples, 0.04%)</title><rect x="1.0992%" y="1573" width="0.0399%" height="15" fill="rgb(241,220,44)" fg:x="1788806650" fg:w="65001425"/><text x="1.3492%" y="1583.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (62,954,944 samples, 0.04%)</title><rect x="1.1005%" y="1557" width="0.0387%" height="15" fill="rgb(235,28,35)" fg:x="1790853131" fg:w="62954944"/><text x="1.3505%" y="1567.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (58,094,970 samples, 0.04%)</title><rect x="1.1035%" y="1541" width="0.0357%" height="15" fill="rgb(210,56,17)" fg:x="1795713105" fg:w="58094970"/><text x="1.3535%" y="1551.50"></text></g><g><title>tokio::runtime::context::current::with_current (180,450,507 samples, 0.11%)</title><rect x="1.0293%" y="1717" width="0.1109%" height="15" fill="rgb(224,130,29)" fg:x="1675057228" fg:w="180450507"/><text x="1.2793%" y="1727.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (178,352,392 samples, 0.11%)</title><rect x="1.0306%" y="1701" width="0.1096%" height="15" fill="rgb(235,212,8)" fg:x="1677155343" fg:w="178352392"/><text x="1.2806%" y="1711.50"></text></g><g><title>tokio::runtime::context::current::with_current::_{{closure}} (167,794,607 samples, 0.10%)</title><rect x="1.0371%" y="1685" width="0.1031%" height="15" fill="rgb(223,33,50)" fg:x="1687713128" fg:w="167794607"/><text x="1.2871%" y="1695.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,388,502,171 samples, 0.85%)</title><rect x="0.2895%" y="1813" width="0.8532%" height="15" fill="rgb(219,149,13)" fg:x="471198375" fg:w="1388502171"/><text x="0.5395%" y="1823.50"></text></g><g><title>&lt;F as axum::handler::Handler&lt;(M,T1,T2),S&gt;&gt;::call::_{{closure}} (1,388,502,171 samples, 0.85%)</title><rect x="0.2895%" y="1797" width="0.8532%" height="15" fill="rgb(250,156,29)" fg:x="471198375" fg:w="1388502171"/><text x="0.5395%" y="1807.50"></text></g><g><title>update_countdown::routes::websocket_handler::_{{closure}} (943,271,016 samples, 0.58%)</title><rect x="0.5631%" y="1781" width="0.5796%" height="15" fill="rgb(216,193,19)" fg:x="916429530" fg:w="943271016"/><text x="0.8131%" y="1791.50"></text></g><g><title>axum::extract::ws::WebSocketUpgrade&lt;F&gt;::on_upgrade (936,038,551 samples, 0.58%)</title><rect x="0.5676%" y="1765" width="0.5752%" height="15" fill="rgb(216,135,14)" fg:x="923661995" fg:w="936038551"/><text x="0.8176%" y="1775.50"></text></g><g><title>tokio::task::spawn::spawn (208,713,847 samples, 0.13%)</title><rect x="1.0145%" y="1749" width="0.1283%" height="15" fill="rgb(241,47,5)" fg:x="1650986699" fg:w="208713847"/><text x="1.2645%" y="1759.50"></text></g><g><title>tokio::task::spawn::spawn_inner (201,094,475 samples, 0.12%)</title><rect x="1.0192%" y="1733" width="0.1236%" height="15" fill="rgb(233,42,35)" fg:x="1658606071" fg:w="201094475"/><text x="1.2692%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;(pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = http::response::Response&lt;axum_core::body::Body&gt;+core::marker::Send&gt;&gt;&gt;,())&gt; (24,371,604 samples, 0.01%)</title><rect x="1.1454%" y="1797" width="0.0150%" height="15" fill="rgb(231,13,6)" fg:x="1864023305" fg:w="24371604"/><text x="1.3954%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = http::response::Response&lt;axum_core::body::Body&gt;+core::marker::Send&gt;&gt;&gt;&gt; (22,496,730 samples, 0.01%)</title><rect x="1.1466%" y="1781" width="0.0138%" height="15" fill="rgb(207,181,40)" fg:x="1865898179" fg:w="22496730"/><text x="1.3966%" y="1791.50"></text></g><g><title>&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18,393,488 samples, 0.01%)</title><rect x="1.1491%" y="1765" width="0.0113%" height="15" fill="rgb(254,173,49)" fg:x="1870001421" fg:w="18393488"/><text x="1.3991%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = http::response::Response&lt;axum_core::body::Body&gt;+core::marker::Send&gt;&gt;&gt; (16,631,480 samples, 0.01%)</title><rect x="1.1502%" y="1749" width="0.0102%" height="15" fill="rgb(221,1,38)" fg:x="1871763429" fg:w="16631480"/><text x="1.4002%" y="1759.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,442,411,003 samples, 0.89%)</title><rect x="0.2804%" y="1845" width="0.8864%" height="15" fill="rgb(206,124,46)" fg:x="456322066" fg:w="1442411003"/><text x="0.5304%" y="1855.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,442,411,003 samples, 0.89%)</title><rect x="0.2804%" y="1829" width="0.8864%" height="15" fill="rgb(249,21,11)" fg:x="456322066" fg:w="1442411003"/><text x="0.5304%" y="1839.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (36,613,780 samples, 0.02%)</title><rect x="1.1443%" y="1813" width="0.0225%" height="15" fill="rgb(222,201,40)" fg:x="1862119289" fg:w="36613780"/><text x="1.3943%" y="1823.50"></text></g><g><title>&lt;axum::handler::future::IntoServiceFuture&lt;F&gt; as core::future::future::Future&gt;::poll (1,444,178,219 samples, 0.89%)</title><rect x="0.2804%" y="1861" width="0.8874%" height="15" fill="rgb(235,61,29)" fg:x="456322066" fg:w="1444178219"/><text x="0.5304%" y="1871.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,461,585,166 samples, 0.90%)</title><rect x="0.2742%" y="1893" width="0.8981%" height="15" fill="rgb(219,207,3)" fg:x="446172636" fg:w="1461585166"/><text x="0.5242%" y="1903.50"></text></g><g><title>&lt;axum::util::MapIntoResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (1,458,240,845 samples, 0.90%)</title><rect x="0.2762%" y="1877" width="0.8961%" height="15" fill="rgb(222,56,46)" fg:x="449516957" fg:w="1458240845"/><text x="0.5262%" y="1887.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (32,661,919 samples, 0.02%)</title><rect x="1.1734%" y="1845" width="0.0201%" height="15" fill="rgb(239,76,54)" fg:x="1909502587" fg:w="32661919"/><text x="1.4234%" y="1855.50"></text></g><g><title>&lt;axum::handler::service::HandlerService&lt;H,T,S&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (32,661,919 samples, 0.02%)</title><rect x="1.1734%" y="1829" width="0.0201%" height="15" fill="rgb(231,124,27)" fg:x="1909502587" fg:w="32661919"/><text x="1.4234%" y="1839.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as tower_service::Service&lt;T&gt;&gt;::call (38,093,725 samples, 0.02%)</title><rect x="1.1734%" y="1893" width="0.0234%" height="15" fill="rgb(249,195,6)" fg:x="1909502587" fg:w="38093725"/><text x="1.4234%" y="1903.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (38,093,725 samples, 0.02%)</title><rect x="1.1734%" y="1877" width="0.0234%" height="15" fill="rgb(237,174,47)" fg:x="1909502587" fg:w="38093725"/><text x="1.4234%" y="1887.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (38,093,725 samples, 0.02%)</title><rect x="1.1734%" y="1861" width="0.0234%" height="15" fill="rgb(206,201,31)" fg:x="1909502587" fg:w="38093725"/><text x="1.4234%" y="1871.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1,544,099,379 samples, 0.95%)</title><rect x="0.2731%" y="1909" width="0.9488%" height="15" fill="rgb(231,57,52)" fg:x="444356643" fg:w="1544099379"/><text x="0.5231%" y="1919.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (28,528,109 samples, 0.02%)</title><rect x="1.2044%" y="1893" width="0.0175%" height="15" fill="rgb(248,177,22)" fg:x="1959927913" fg:w="28528109"/><text x="1.4544%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;,http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt; (22,089,322 samples, 0.01%)</title><rect x="1.2083%" y="1877" width="0.0136%" height="15" fill="rgb(215,211,37)" fg:x="1966366700" fg:w="22089322"/><text x="1.4583%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;&gt; (22,089,322 samples, 0.01%)</title><rect x="1.2083%" y="1861" width="0.0136%" height="15" fill="rgb(241,128,51)" fg:x="1966366700" fg:w="22089322"/><text x="1.4583%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt; (22,089,322 samples, 0.01%)</title><rect x="1.2083%" y="1845" width="0.0136%" height="15" fill="rgb(227,165,31)" fg:x="1966366700" fg:w="22089322"/><text x="1.4583%" y="1855.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (1,559,881,291 samples, 0.96%)</title><rect x="0.2680%" y="1925" width="0.9585%" height="15" fill="rgb(228,167,24)" fg:x="436073920" fg:w="1559881291"/><text x="0.5180%" y="1935.50"></text></g><g><title>&lt;axum_core::body::Body as http_body::Body&gt;::size_hint (19,350,800 samples, 0.01%)</title><rect x="1.2282%" y="1845" width="0.0119%" height="15" fill="rgb(228,143,12)" fg:x="1998739411" fg:w="19350800"/><text x="1.4782%" y="1855.50"></text></g><g><title>&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;D,E&gt; as http_body::Body&gt;::size_hint (19,350,800 samples, 0.01%)</title><rect x="1.2282%" y="1829" width="0.0119%" height="15" fill="rgb(249,149,8)" fg:x="1998739411" fg:w="19350800"/><text x="1.4782%" y="1839.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as http_body::Body&gt;::size_hint (19,350,800 samples, 0.01%)</title><rect x="1.2282%" y="1813" width="0.0119%" height="15" fill="rgb(243,35,44)" fg:x="1998739411" fg:w="19350800"/><text x="1.4782%" y="1823.50"></text></g><g><title>&lt;tower_http::compression::predicate::DefaultPredicate as tower_http::compression::predicate::Predicate&gt;::should_compress (30,314,703 samples, 0.02%)</title><rect x="1.2282%" y="1925" width="0.0186%" height="15" fill="rgb(246,89,9)" fg:x="1998739411" fg:w="30314703"/><text x="1.4782%" y="1935.50"></text></g><g><title>&lt;tower_http::compression::predicate::And&lt;Lhs,Rhs&gt; as tower_http::compression::predicate::Predicate&gt;::should_compress (30,314,703 samples, 0.02%)</title><rect x="1.2282%" y="1909" width="0.0186%" height="15" fill="rgb(233,213,13)" fg:x="1998739411" fg:w="30314703"/><text x="1.4782%" y="1919.50"></text></g><g><title>&lt;tower_http::compression::predicate::And&lt;Lhs,Rhs&gt; as tower_http::compression::predicate::Predicate&gt;::should_compress (30,314,703 samples, 0.02%)</title><rect x="1.2282%" y="1893" width="0.0186%" height="15" fill="rgb(233,141,41)" fg:x="1998739411" fg:w="30314703"/><text x="1.4782%" y="1903.50"></text></g><g><title>&lt;tower_http::compression::predicate::And&lt;Lhs,Rhs&gt; as tower_http::compression::predicate::Predicate&gt;::should_compress (30,314,703 samples, 0.02%)</title><rect x="1.2282%" y="1877" width="0.0186%" height="15" fill="rgb(239,167,4)" fg:x="1998739411" fg:w="30314703"/><text x="1.4782%" y="1887.50"></text></g><g><title>&lt;tower_http::compression::predicate::SizeAbove as tower_http::compression::predicate::Predicate&gt;::should_compress (30,314,703 samples, 0.02%)</title><rect x="1.2282%" y="1861" width="0.0186%" height="15" fill="rgb(209,217,16)" fg:x="1998739411" fg:w="30314703"/><text x="1.4782%" y="1871.50"></text></g><g><title>__memmove_avx_unaligned_erms (37,674,323 samples, 0.02%)</title><rect x="1.2507%" y="1925" width="0.0232%" height="15" fill="rgb(219,88,35)" fg:x="2035356778" fg:w="37674323"/><text x="1.5007%" y="1935.50"></text></g><g><title>tower_http::compression::body::CompressionBody&lt;B&gt;::new (36,764,884 samples, 0.02%)</title><rect x="1.2926%" y="1925" width="0.0226%" height="15" fill="rgb(220,193,23)" fg:x="2103446813" fg:w="36764884"/><text x="1.5426%" y="1935.50"></text></g><g><title>__memmove_avx_unaligned_erms (34,519,019 samples, 0.02%)</title><rect x="1.2939%" y="1909" width="0.0212%" height="15" fill="rgb(230,90,52)" fg:x="2105692678" fg:w="34519019"/><text x="1.5439%" y="1919.50"></text></g><g><title>&lt;tower_http::compression::future::ResponseFuture&lt;F,P&gt; as core::future::future::Future&gt;::poll (1,720,771,706 samples, 1.06%)</title><rect x="0.2593%" y="1941" width="1.0574%" height="15" fill="rgb(252,106,19)" fg:x="422010291" fg:w="1720771706"/><text x="0.5093%" y="1951.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Write&gt;::write::_{{closure}} (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1925" width="0.0399%" height="15" fill="rgb(206,74,20)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1935.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1909" width="0.0399%" height="15" fill="rgb(230,138,44)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1919.50"></text></g><g><title>&lt;hyper::upgrade::Upgraded as hyper::rt::io::Write&gt;::poll_write (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1893" width="0.0399%" height="15" fill="rgb(235,182,43)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1903.50"></text></g><g><title>&lt;hyper::common::io::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1877" width="0.0399%" height="15" fill="rgb(242,16,51)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1887.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1861" width="0.0399%" height="15" fill="rgb(248,9,4)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1871.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1845" width="0.0399%" height="15" fill="rgb(210,31,22)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1855.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1829" width="0.0399%" height="15" fill="rgb(239,54,39)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1839.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1813" width="0.0399%" height="15" fill="rgb(230,99,41)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1823.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1797" width="0.0399%" height="15" fill="rgb(253,106,12)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1807.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1781" width="0.0399%" height="15" fill="rgb(213,46,41)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1791.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1765" width="0.0399%" height="15" fill="rgb(215,133,35)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1775.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1749" width="0.0399%" height="15" fill="rgb(213,28,5)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1759.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1733" width="0.0399%" height="15" fill="rgb(215,77,49)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1743.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1717" width="0.0399%" height="15" fill="rgb(248,100,22)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1727.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1701" width="0.0399%" height="15" fill="rgb(208,67,9)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1711.50"></text></g><g><title>__send (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1685" width="0.0399%" height="15" fill="rgb(219,133,21)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1695.50"></text></g><g><title>[unknown] (64,882,829 samples, 0.04%)</title><rect x="1.3283%" y="1669" width="0.0399%" height="15" fill="rgb(246,46,29)" fg:x="2161683034" fg:w="64882829"/><text x="1.5783%" y="1679.50"></text></g><g><title>syscall (45,015,232 samples, 0.03%)</title><rect x="1.3935%" y="1925" width="0.0277%" height="15" fill="rgb(246,185,52)" fg:x="2267652008" fg:w="45015232"/><text x="1.6435%" y="1935.50"></text></g><g><title>[unknown] (45,015,232 samples, 0.03%)</title><rect x="1.3935%" y="1909" width="0.0277%" height="15" fill="rgb(252,136,11)" fg:x="2267652008" fg:w="45015232"/><text x="1.6435%" y="1919.50"></text></g><g><title>[anon] (195,431,353 samples, 0.12%)</title><rect x="1.3214%" y="1941" width="0.1201%" height="15" fill="rgb(219,138,53)" fg:x="2150350946" fg:w="195431353"/><text x="1.5714%" y="1951.50"></text></g><g><title>[unknown] (201,838,961 samples, 0.12%)</title><rect x="1.4415%" y="1941" width="0.1240%" height="15" fill="rgb(211,51,23)" fg:x="2345782299" fg:w="201838961"/><text x="1.6915%" y="1951.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (20,196,204 samples, 0.01%)</title><rect x="1.9670%" y="1269" width="0.0124%" height="15" fill="rgb(247,221,28)" fg:x="3201033609" fg:w="20196204"/><text x="2.2170%" y="1279.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (69,188,770 samples, 0.04%)</title><rect x="1.9794%" y="1269" width="0.0425%" height="15" fill="rgb(251,222,45)" fg:x="3221229813" fg:w="69188770"/><text x="2.2294%" y="1279.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (31,182,243 samples, 0.02%)</title><rect x="2.0355%" y="1253" width="0.0192%" height="15" fill="rgb(217,162,53)" fg:x="3312511115" fg:w="31182243"/><text x="2.2855%" y="1263.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (31,182,243 samples, 0.02%)</title><rect x="2.0355%" y="1237" width="0.0192%" height="15" fill="rgb(229,93,14)" fg:x="3312511115" fg:w="31182243"/><text x="2.2855%" y="1247.50"></text></g><g><title>__vdso_clock_gettime (31,182,243 samples, 0.02%)</title><rect x="2.0355%" y="1221" width="0.0192%" height="15" fill="rgb(209,67,49)" fg:x="3312511115" fg:w="31182243"/><text x="2.2855%" y="1231.50"></text></g><g><title>[unknown] (31,182,243 samples, 0.02%)</title><rect x="2.0355%" y="1205" width="0.0192%" height="15" fill="rgb(213,87,29)" fg:x="3312511115" fg:w="31182243"/><text x="2.2855%" y="1215.50"></text></g><g><title>[unknown] (30,206,238 samples, 0.02%)</title><rect x="2.0361%" y="1189" width="0.0186%" height="15" fill="rgb(205,151,52)" fg:x="3313487120" fg:w="30206238"/><text x="2.2861%" y="1199.50"></text></g><g><title>[unknown] (30,206,238 samples, 0.02%)</title><rect x="2.0361%" y="1173" width="0.0186%" height="15" fill="rgb(253,215,39)" fg:x="3313487120" fg:w="30206238"/><text x="2.2861%" y="1183.50"></text></g><g><title>[unknown] (29,025,545 samples, 0.02%)</title><rect x="2.0368%" y="1157" width="0.0178%" height="15" fill="rgb(221,220,41)" fg:x="3314667813" fg:w="29025545"/><text x="2.2868%" y="1167.50"></text></g><g><title>[unknown] (29,025,545 samples, 0.02%)</title><rect x="2.0368%" y="1141" width="0.0178%" height="15" fill="rgb(218,133,21)" fg:x="3314667813" fg:w="29025545"/><text x="2.2868%" y="1151.50"></text></g><g><title>[unknown] (29,025,545 samples, 0.02%)</title><rect x="2.0368%" y="1125" width="0.0178%" height="15" fill="rgb(221,193,43)" fg:x="3314667813" fg:w="29025545"/><text x="2.2868%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (116,155,994 samples, 0.07%)</title><rect x="2.0317%" y="1269" width="0.0714%" height="15" fill="rgb(240,128,52)" fg:x="3306294922" fg:w="116155994"/><text x="2.2817%" y="1279.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::end_processing_scheduled_tasks (78,757,558 samples, 0.05%)</title><rect x="2.0547%" y="1253" width="0.0484%" height="15" fill="rgb(253,114,12)" fg:x="3343693358" fg:w="78757558"/><text x="2.3047%" y="1263.50"></text></g><g><title>std::time::Instant::elapsed (77,819,427 samples, 0.05%)</title><rect x="2.0553%" y="1237" width="0.0478%" height="15" fill="rgb(215,223,47)" fg:x="3344631489" fg:w="77819427"/><text x="2.3053%" y="1247.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (72,981,746 samples, 0.04%)</title><rect x="2.0582%" y="1221" width="0.0448%" height="15" fill="rgb(248,225,23)" fg:x="3349469170" fg:w="72981746"/><text x="2.3082%" y="1231.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (70,897,109 samples, 0.04%)</title><rect x="2.0595%" y="1205" width="0.0436%" height="15" fill="rgb(250,108,0)" fg:x="3351553807" fg:w="70897109"/><text x="2.3095%" y="1215.50"></text></g><g><title>__vdso_clock_gettime (57,995,213 samples, 0.04%)</title><rect x="2.0674%" y="1189" width="0.0356%" height="15" fill="rgb(228,208,7)" fg:x="3364455703" fg:w="57995213"/><text x="2.3174%" y="1199.50"></text></g><g><title>[unknown] (57,995,213 samples, 0.04%)</title><rect x="2.0674%" y="1173" width="0.0356%" height="15" fill="rgb(244,45,10)" fg:x="3364455703" fg:w="57995213"/><text x="2.3174%" y="1183.50"></text></g><g><title>[unknown] (56,379,236 samples, 0.03%)</title><rect x="2.0684%" y="1157" width="0.0346%" height="15" fill="rgb(207,125,25)" fg:x="3366071680" fg:w="56379236"/><text x="2.3184%" y="1167.50"></text></g><g><title>[unknown] (53,157,959 samples, 0.03%)</title><rect x="2.0704%" y="1141" width="0.0327%" height="15" fill="rgb(210,195,18)" fg:x="3369292957" fg:w="53157959"/><text x="2.3204%" y="1151.50"></text></g><g><title>[unknown] (46,855,247 samples, 0.03%)</title><rect x="2.0743%" y="1125" width="0.0288%" height="15" fill="rgb(249,80,12)" fg:x="3375595669" fg:w="46855247"/><text x="2.3243%" y="1135.50"></text></g><g><title>[unknown] (41,110,417 samples, 0.03%)</title><rect x="2.0778%" y="1109" width="0.0253%" height="15" fill="rgb(221,65,9)" fg:x="3381340499" fg:w="41110417"/><text x="2.3278%" y="1119.50"></text></g><g><title>[unknown] (38,500,264 samples, 0.02%)</title><rect x="2.0794%" y="1093" width="0.0237%" height="15" fill="rgb(235,49,36)" fg:x="3383950652" fg:w="38500264"/><text x="2.3294%" y="1103.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (16,572,837 samples, 0.01%)</title><rect x="2.1031%" y="1253" width="0.0102%" height="15" fill="rgb(225,32,20)" fg:x="3422450916" fg:w="16572837"/><text x="2.3531%" y="1263.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (16,572,837 samples, 0.01%)</title><rect x="2.1031%" y="1237" width="0.0102%" height="15" fill="rgb(215,141,46)" fg:x="3422450916" fg:w="16572837"/><text x="2.3531%" y="1247.50"></text></g><g><title>__vdso_clock_gettime (16,572,837 samples, 0.01%)</title><rect x="2.1031%" y="1221" width="0.0102%" height="15" fill="rgb(250,160,47)" fg:x="3422450916" fg:w="16572837"/><text x="2.3531%" y="1231.50"></text></g><g><title>[unknown] (16,572,837 samples, 0.01%)</title><rect x="2.1031%" y="1205" width="0.0102%" height="15" fill="rgb(216,222,40)" fg:x="3422450916" fg:w="16572837"/><text x="2.3531%" y="1215.50"></text></g><g><title>[unknown] (16,572,837 samples, 0.01%)</title><rect x="2.1031%" y="1189" width="0.0102%" height="15" fill="rgb(234,217,39)" fg:x="3422450916" fg:w="16572837"/><text x="2.3531%" y="1199.50"></text></g><g><title>[unknown] (16,572,837 samples, 0.01%)</title><rect x="2.1031%" y="1173" width="0.0102%" height="15" fill="rgb(207,178,40)" fg:x="3422450916" fg:w="16572837"/><text x="2.3531%" y="1183.50"></text></g><g><title>[unknown] (16,572,837 samples, 0.01%)</title><rect x="2.1031%" y="1157" width="0.0102%" height="15" fill="rgb(221,136,13)" fg:x="3422450916" fg:w="16572837"/><text x="2.3531%" y="1167.50"></text></g><g><title>[unknown] (16,572,837 samples, 0.01%)</title><rect x="2.1031%" y="1141" width="0.0102%" height="15" fill="rgb(249,199,10)" fg:x="3422450916" fg:w="16572837"/><text x="2.3531%" y="1151.50"></text></g><g><title>[unknown] (16,572,837 samples, 0.01%)</title><rect x="2.1031%" y="1125" width="0.0102%" height="15" fill="rgb(249,222,13)" fg:x="3422450916" fg:w="16572837"/><text x="2.3531%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (87,587,680 samples, 0.05%)</title><rect x="2.1031%" y="1269" width="0.0538%" height="15" fill="rgb(244,185,38)" fg:x="3422450916" fg:w="87587680"/><text x="2.3531%" y="1279.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::start_processing_scheduled_tasks (71,014,843 samples, 0.04%)</title><rect x="2.1133%" y="1253" width="0.0436%" height="15" fill="rgb(236,202,9)" fg:x="3439023753" fg:w="71014843"/><text x="2.3633%" y="1263.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (68,369,172 samples, 0.04%)</title><rect x="2.1149%" y="1237" width="0.0420%" height="15" fill="rgb(250,229,37)" fg:x="3441669424" fg:w="68369172"/><text x="2.3649%" y="1247.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (67,038,278 samples, 0.04%)</title><rect x="2.1157%" y="1221" width="0.0412%" height="15" fill="rgb(206,174,23)" fg:x="3443000318" fg:w="67038278"/><text x="2.3657%" y="1231.50"></text></g><g><title>__vdso_clock_gettime (61,234,600 samples, 0.04%)</title><rect x="2.1193%" y="1205" width="0.0376%" height="15" fill="rgb(211,33,43)" fg:x="3448803996" fg:w="61234600"/><text x="2.3693%" y="1215.50"></text></g><g><title>[unknown] (61,234,600 samples, 0.04%)</title><rect x="2.1193%" y="1189" width="0.0376%" height="15" fill="rgb(245,58,50)" fg:x="3448803996" fg:w="61234600"/><text x="2.3693%" y="1199.50"></text></g><g><title>[unknown] (59,834,880 samples, 0.04%)</title><rect x="2.1201%" y="1173" width="0.0368%" height="15" fill="rgb(244,68,36)" fg:x="3450203716" fg:w="59834880"/><text x="2.3701%" y="1183.50"></text></g><g><title>[unknown] (53,124,733 samples, 0.03%)</title><rect x="2.1242%" y="1157" width="0.0326%" height="15" fill="rgb(232,229,15)" fg:x="3456913863" fg:w="53124733"/><text x="2.3742%" y="1167.50"></text></g><g><title>[unknown] (47,375,457 samples, 0.03%)</title><rect x="2.1278%" y="1141" width="0.0291%" height="15" fill="rgb(254,30,23)" fg:x="3462663139" fg:w="47375457"/><text x="2.3778%" y="1151.50"></text></g><g><title>[unknown] (46,173,226 samples, 0.03%)</title><rect x="2.1285%" y="1125" width="0.0284%" height="15" fill="rgb(235,160,14)" fg:x="3463865370" fg:w="46173226"/><text x="2.3785%" y="1135.50"></text></g><g><title>[unknown] (41,222,793 samples, 0.03%)</title><rect x="2.1316%" y="1109" width="0.0253%" height="15" fill="rgb(212,155,44)" fg:x="3468815803" fg:w="41222793"/><text x="2.3816%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::assert_lifo_enabled_is_correct (109,845,507 samples, 0.07%)</title><rect x="2.1569%" y="1269" width="0.0675%" height="15" fill="rgb(226,2,50)" fg:x="3510038596" fg:w="109845507"/><text x="2.4069%" y="1279.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (28,496,620 samples, 0.02%)</title><rect x="2.2069%" y="1253" width="0.0175%" height="15" fill="rgb(234,177,6)" fg:x="3591387483" fg:w="28496620"/><text x="2.4569%" y="1263.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (24,421,474 samples, 0.02%)</title><rect x="2.2094%" y="1237" width="0.0150%" height="15" fill="rgb(217,24,9)" fg:x="3595462629" fg:w="24421474"/><text x="2.4594%" y="1247.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (24,421,474 samples, 0.02%)</title><rect x="2.2094%" y="1221" width="0.0150%" height="15" fill="rgb(220,13,46)" fg:x="3595462629" fg:w="24421474"/><text x="2.4594%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (29,311,228 samples, 0.02%)</title><rect x="2.3154%" y="1253" width="0.0180%" height="15" fill="rgb(239,221,27)" fg:x="3768059137" fg:w="29311228"/><text x="2.5654%" y="1263.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (22,543,734 samples, 0.01%)</title><rect x="2.3196%" y="1237" width="0.0139%" height="15" fill="rgb(222,198,25)" fg:x="3774826631" fg:w="22543734"/><text x="2.5696%" y="1247.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (22,543,734 samples, 0.01%)</title><rect x="2.3196%" y="1221" width="0.0139%" height="15" fill="rgb(211,99,13)" fg:x="3774826631" fg:w="22543734"/><text x="2.5696%" y="1231.50"></text></g><g><title>__ieee754_pow_fma (49,628,696 samples, 0.03%)</title><rect x="2.3484%" y="1205" width="0.0305%" height="15" fill="rgb(232,111,31)" fg:x="3821656567" fg:w="49628696"/><text x="2.5984%" y="1215.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (77,470,040 samples, 0.05%)</title><rect x="2.3363%" y="1237" width="0.0476%" height="15" fill="rgb(245,82,37)" fg:x="3802023421" fg:w="77470040"/><text x="2.5863%" y="1247.50"></text></g><g><title>pow@@GLIBC_2.29 (68,297,276 samples, 0.04%)</title><rect x="2.3420%" y="1221" width="0.0420%" height="15" fill="rgb(227,149,46)" fg:x="3811196185" fg:w="68297276"/><text x="2.5920%" y="1231.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (27,106,105 samples, 0.02%)</title><rect x="2.3839%" y="1237" width="0.0167%" height="15" fill="rgb(218,36,50)" fg:x="3879493461" fg:w="27106105"/><text x="2.6339%" y="1247.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (27,106,105 samples, 0.02%)</title><rect x="2.3839%" y="1221" width="0.0167%" height="15" fill="rgb(226,80,48)" fg:x="3879493461" fg:w="27106105"/><text x="2.6339%" y="1231.50"></text></g><g><title>__vdso_clock_gettime (27,106,105 samples, 0.02%)</title><rect x="2.3839%" y="1205" width="0.0167%" height="15" fill="rgb(238,224,15)" fg:x="3879493461" fg:w="27106105"/><text x="2.6339%" y="1215.50"></text></g><g><title>[unknown] (27,106,105 samples, 0.02%)</title><rect x="2.3839%" y="1189" width="0.0167%" height="15" fill="rgb(241,136,10)" fg:x="3879493461" fg:w="27106105"/><text x="2.6339%" y="1199.50"></text></g><g><title>[unknown] (25,309,672 samples, 0.02%)</title><rect x="2.3850%" y="1173" width="0.0156%" height="15" fill="rgb(208,32,45)" fg:x="3881289894" fg:w="25309672"/><text x="2.6350%" y="1183.50"></text></g><g><title>[unknown] (23,611,937 samples, 0.01%)</title><rect x="2.3861%" y="1157" width="0.0145%" height="15" fill="rgb(207,135,9)" fg:x="3882987629" fg:w="23611937"/><text x="2.6361%" y="1167.50"></text></g><g><title>[unknown] (20,245,359 samples, 0.01%)</title><rect x="2.3881%" y="1141" width="0.0124%" height="15" fill="rgb(206,86,44)" fg:x="3886354207" fg:w="20245359"/><text x="2.6381%" y="1151.50"></text></g><g><title>[unknown] (18,175,220 samples, 0.01%)</title><rect x="2.3894%" y="1125" width="0.0112%" height="15" fill="rgb(245,177,15)" fg:x="3888424346" fg:w="18175220"/><text x="2.6394%" y="1135.50"></text></g><g><title>[unknown] (18,175,220 samples, 0.01%)</title><rect x="2.3894%" y="1109" width="0.0112%" height="15" fill="rgb(206,64,50)" fg:x="3888424346" fg:w="18175220"/><text x="2.6394%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (163,530,553 samples, 0.10%)</title><rect x="2.3335%" y="1253" width="0.1005%" height="15" fill="rgb(234,36,40)" fg:x="3797370365" fg:w="163530553"/><text x="2.5835%" y="1263.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::end_processing_scheduled_tasks (54,301,352 samples, 0.03%)</title><rect x="2.4006%" y="1237" width="0.0334%" height="15" fill="rgb(213,64,8)" fg:x="3906599566" fg:w="54301352"/><text x="2.6506%" y="1247.50"></text></g><g><title>std::time::Instant::elapsed (44,864,456 samples, 0.03%)</title><rect x="2.4064%" y="1221" width="0.0276%" height="15" fill="rgb(210,75,36)" fg:x="3916036462" fg:w="44864456"/><text x="2.6564%" y="1231.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (39,361,999 samples, 0.02%)</title><rect x="2.4098%" y="1205" width="0.0242%" height="15" fill="rgb(229,88,21)" fg:x="3921538919" fg:w="39361999"/><text x="2.6598%" y="1215.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (34,206,225 samples, 0.02%)</title><rect x="2.4129%" y="1189" width="0.0210%" height="15" fill="rgb(252,204,47)" fg:x="3926694693" fg:w="34206225"/><text x="2.6629%" y="1199.50"></text></g><g><title>__vdso_clock_gettime (20,865,787 samples, 0.01%)</title><rect x="2.4211%" y="1173" width="0.0128%" height="15" fill="rgb(208,77,27)" fg:x="3940035131" fg:w="20865787"/><text x="2.6711%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (48,596,496 samples, 0.03%)</title><rect x="2.4339%" y="1253" width="0.0299%" height="15" fill="rgb(221,76,26)" fg:x="3960900918" fg:w="48596496"/><text x="2.6839%" y="1263.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::start_processing_scheduled_tasks (45,341,880 samples, 0.03%)</title><rect x="2.4359%" y="1237" width="0.0279%" height="15" fill="rgb(225,139,18)" fg:x="3964155534" fg:w="45341880"/><text x="2.6859%" y="1247.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (40,101,087 samples, 0.02%)</title><rect x="2.4392%" y="1221" width="0.0246%" height="15" fill="rgb(230,137,11)" fg:x="3969396327" fg:w="40101087"/><text x="2.6892%" y="1231.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (40,101,087 samples, 0.02%)</title><rect x="2.4392%" y="1205" width="0.0246%" height="15" fill="rgb(212,28,1)" fg:x="3969396327" fg:w="40101087"/><text x="2.6892%" y="1215.50"></text></g><g><title>__vdso_clock_gettime (38,234,658 samples, 0.02%)</title><rect x="2.4403%" y="1189" width="0.0235%" height="15" fill="rgb(248,164,17)" fg:x="3971262756" fg:w="38234658"/><text x="2.6903%" y="1199.50"></text></g><g><title>[unknown] (36,455,458 samples, 0.02%)</title><rect x="2.4414%" y="1173" width="0.0224%" height="15" fill="rgb(222,171,42)" fg:x="3973041956" fg:w="36455458"/><text x="2.6914%" y="1183.50"></text></g><g><title>[unknown] (36,455,458 samples, 0.02%)</title><rect x="2.4414%" y="1157" width="0.0224%" height="15" fill="rgb(243,84,45)" fg:x="3973041956" fg:w="36455458"/><text x="2.6914%" y="1167.50"></text></g><g><title>[unknown] (34,161,670 samples, 0.02%)</title><rect x="2.4428%" y="1141" width="0.0210%" height="15" fill="rgb(252,49,23)" fg:x="3975335744" fg:w="34161670"/><text x="2.6928%" y="1151.50"></text></g><g><title>[unknown] (30,048,374 samples, 0.02%)</title><rect x="2.4453%" y="1125" width="0.0185%" height="15" fill="rgb(215,19,7)" fg:x="3979449040" fg:w="30048374"/><text x="2.6953%" y="1135.50"></text></g><g><title>[unknown] (28,061,321 samples, 0.02%)</title><rect x="2.4466%" y="1109" width="0.0172%" height="15" fill="rgb(238,81,41)" fg:x="3981436093" fg:w="28061321"/><text x="2.6966%" y="1119.50"></text></g><g><title>[unknown] (19,639,511 samples, 0.01%)</title><rect x="2.4517%" y="1093" width="0.0121%" height="15" fill="rgb(210,199,37)" fg:x="3989857903" fg:w="19639511"/><text x="2.7017%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;alloc::vec::Vec&lt;core::task::wake::Waker&gt;&gt;&gt; (19,238,998 samples, 0.01%)</title><rect x="2.5355%" y="1221" width="0.0118%" height="15" fill="rgb(244,192,49)" fg:x="4126179714" fg:w="19238998"/><text x="2.7855%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (60,632,585 samples, 0.04%)</title><rect x="2.5116%" y="1237" width="0.0373%" height="15" fill="rgb(226,211,11)" fg:x="4087194366" fg:w="60632585"/><text x="2.7616%" y="1247.50"></text></g><g><title>core::mem::drop (30,075,906 samples, 0.02%)</title><rect x="2.6335%" y="1157" width="0.0185%" height="15" fill="rgb(236,162,54)" fg:x="4285694932" fg:w="30075906"/><text x="2.8835%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::InnerState&gt;&gt; (26,461,679 samples, 0.02%)</title><rect x="2.6358%" y="1141" width="0.0163%" height="15" fill="rgb(220,229,9)" fg:x="4289309159" fg:w="26461679"/><text x="2.8858%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21,134,498 samples, 0.01%)</title><rect x="2.6520%" y="1157" width="0.0130%" height="15" fill="rgb(250,87,22)" fg:x="4315770838" fg:w="21134498"/><text x="2.9020%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (31,386,866 samples, 0.02%)</title><rect x="2.6666%" y="1125" width="0.0193%" height="15" fill="rgb(239,43,17)" fg:x="4339512752" fg:w="31386866"/><text x="2.9166%" y="1135.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (36,171,676 samples, 0.02%)</title><rect x="2.6650%" y="1157" width="0.0222%" height="15" fill="rgb(231,177,25)" fg:x="4336905336" fg:w="36171676"/><text x="2.9150%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (36,171,676 samples, 0.02%)</title><rect x="2.6650%" y="1141" width="0.0222%" height="15" fill="rgb(219,179,1)" fg:x="4336905336" fg:w="36171676"/><text x="2.9150%" y="1151.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (37,009,667 samples, 0.02%)</title><rect x="2.6903%" y="1125" width="0.0227%" height="15" fill="rgb(238,219,53)" fg:x="4378114078" fg:w="37009667"/><text x="2.9403%" y="1135.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (34,936,278 samples, 0.02%)</title><rect x="2.6916%" y="1109" width="0.0215%" height="15" fill="rgb(232,167,36)" fg:x="4380187467" fg:w="34936278"/><text x="2.9416%" y="1119.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (16,456,799 samples, 0.01%)</title><rect x="2.7212%" y="1077" width="0.0101%" height="15" fill="rgb(244,19,51)" fg:x="4428416907" fg:w="16456799"/><text x="2.9712%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::registration_set::Synced&gt;&gt; (20,434,520 samples, 0.01%)</title><rect x="2.7367%" y="1077" width="0.0126%" height="15" fill="rgb(224,6,22)" fg:x="4453563321" fg:w="20434520"/><text x="2.9867%" y="1087.50"></text></g><g><title>mio::poll::Poll::poll (57,795,880 samples, 0.04%)</title><rect x="2.7492%" y="1077" width="0.0355%" height="15" fill="rgb(224,145,5)" fg:x="4473997841" fg:w="57795880"/><text x="2.9992%" y="1087.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (46,218,229 samples, 0.03%)</title><rect x="2.7564%" y="1061" width="0.0284%" height="15" fill="rgb(234,130,49)" fg:x="4485575492" fg:w="46218229"/><text x="3.0064%" y="1071.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (21,177,008 samples, 0.01%)</title><rect x="2.7848%" y="1077" width="0.0130%" height="15" fill="rgb(254,6,2)" fg:x="4531793721" fg:w="21177008"/><text x="3.0348%" y="1087.50"></text></g><g><title>tokio::runtime::park::wake (47,596,355 samples, 0.03%)</title><rect x="2.8423%" y="1029" width="0.0292%" height="15" fill="rgb(208,96,46)" fg:x="4625466733" fg:w="47596355"/><text x="3.0923%" y="1039.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (41,426,622 samples, 0.03%)</title><rect x="2.8461%" y="1013" width="0.0255%" height="15" fill="rgb(239,3,39)" fg:x="4631636466" fg:w="41426622"/><text x="3.0961%" y="1023.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (33,605,905 samples, 0.02%)</title><rect x="2.8509%" y="997" width="0.0207%" height="15" fill="rgb(233,210,1)" fg:x="4639457183" fg:w="33605905"/><text x="3.1009%" y="1007.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (33,605,905 samples, 0.02%)</title><rect x="2.8509%" y="981" width="0.0207%" height="15" fill="rgb(244,137,37)" fg:x="4639457183" fg:w="33605905"/><text x="3.1009%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (33,605,905 samples, 0.02%)</title><rect x="2.8509%" y="965" width="0.0207%" height="15" fill="rgb(240,136,2)" fg:x="4639457183" fg:w="33605905"/><text x="3.1009%" y="975.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (31,694,993 samples, 0.02%)</title><rect x="2.8521%" y="949" width="0.0195%" height="15" fill="rgb(239,18,37)" fg:x="4641368095" fg:w="31694993"/><text x="3.1021%" y="959.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (91,809,233 samples, 0.06%)</title><rect x="2.8183%" y="1077" width="0.0564%" height="15" fill="rgb(218,185,22)" fg:x="4586459006" fg:w="91809233"/><text x="3.0683%" y="1087.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (60,350,340 samples, 0.04%)</title><rect x="2.8377%" y="1061" width="0.0371%" height="15" fill="rgb(225,218,4)" fg:x="4617917899" fg:w="60350340"/><text x="3.0877%" y="1071.50"></text></g><g><title>core::task::wake::Waker::wake (54,399,550 samples, 0.03%)</title><rect x="2.8413%" y="1045" width="0.0334%" height="15" fill="rgb(230,182,32)" fg:x="4623868689" fg:w="54399550"/><text x="3.0913%" y="1055.50"></text></g><g><title>tokio::runtime::driver::IoStack::park_timeout (304,053,795 samples, 0.19%)</title><rect x="2.6891%" y="1157" width="0.1868%" height="15" fill="rgb(242,56,43)" fg:x="4376191232" fg:w="304053795"/><text x="2.9391%" y="1167.50"></text></g><g><title>tokio::runtime::process::Driver::park_timeout (304,053,795 samples, 0.19%)</title><rect x="2.6891%" y="1141" width="0.1868%" height="15" fill="rgb(233,99,24)" fg:x="4376191232" fg:w="304053795"/><text x="2.9391%" y="1151.50"></text></g><g><title>tokio::runtime::signal::Driver::park_timeout (265,121,282 samples, 0.16%)</title><rect x="2.7131%" y="1125" width="0.1629%" height="15" fill="rgb(234,209,42)" fg:x="4415123745" fg:w="265121282"/><text x="2.9631%" y="1135.50"></text></g><g><title>tokio::runtime::io::driver::Driver::park_timeout (262,785,785 samples, 0.16%)</title><rect x="2.7145%" y="1109" width="0.1615%" height="15" fill="rgb(227,7,12)" fg:x="4417459242" fg:w="262785785"/><text x="2.9645%" y="1119.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (253,248,822 samples, 0.16%)</title><rect x="2.7204%" y="1093" width="0.1556%" height="15" fill="rgb(245,203,43)" fg:x="4426996205" fg:w="253248822"/><text x="2.9704%" y="1103.50"></text></g><g><title>tokio::runtime::time::entry::TimerHandle::fire (18,500,154 samples, 0.01%)</title><rect x="2.9302%" y="1125" width="0.0114%" height="15" fill="rgb(238,205,33)" fg:x="4768454349" fg:w="18500154"/><text x="3.1802%" y="1135.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::fire (18,500,154 samples, 0.01%)</title><rect x="2.9302%" y="1109" width="0.0114%" height="15" fill="rgb(231,56,7)" fg:x="4768454349" fg:w="18500154"/><text x="3.1802%" y="1119.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (16,781,298 samples, 0.01%)</title><rect x="2.9312%" y="1093" width="0.0103%" height="15" fill="rgb(244,186,29)" fg:x="4770173205" fg:w="16781298"/><text x="3.1812%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::no_expirations_before (34,729,896 samples, 0.02%)</title><rect x="2.9586%" y="1093" width="0.0213%" height="15" fill="rgb(234,111,31)" fg:x="4814680496" fg:w="34729896"/><text x="3.2086%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (62,404,435 samples, 0.04%)</title><rect x="2.9507%" y="1109" width="0.0383%" height="15" fill="rgb(241,149,10)" fg:x="4801845333" fg:w="62404435"/><text x="3.2007%" y="1119.50"></text></g><g><title>tokio::runtime::time::entry::TimerHandle::mark_pending (22,053,313 samples, 0.01%)</title><rect x="2.9953%" y="1093" width="0.0136%" height="15" fill="rgb(249,206,44)" fg:x="4874481661" fg:w="22053313"/><text x="3.2453%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::add_entry (21,864,417 samples, 0.01%)</title><rect x="3.0189%" y="1093" width="0.0134%" height="15" fill="rgb(251,153,30)" fg:x="4912772827" fg:w="21864417"/><text x="3.2689%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::time::entry::TimerShared as tokio::util::linked_list::Link&gt;::pointers (23,289,122 samples, 0.01%)</title><rect x="3.0451%" y="1077" width="0.0143%" height="15" fill="rgb(239,152,38)" fg:x="4955463545" fg:w="23289122"/><text x="3.2951%" y="1087.50"></text></g><g><title>tokio::runtime::time::entry::TimerShared::addr_of_pointers (19,516,489 samples, 0.01%)</title><rect x="3.0474%" y="1061" width="0.0120%" height="15" fill="rgb(249,139,47)" fg:x="4959236178" fg:w="19516489"/><text x="3.2974%" y="1071.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (17,535,245 samples, 0.01%)</title><rect x="3.0486%" y="1045" width="0.0108%" height="15" fill="rgb(244,64,35)" fg:x="4961217422" fg:w="17535245"/><text x="3.2986%" y="1055.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::get_prev (24,595,102 samples, 0.02%)</title><rect x="3.0594%" y="1077" width="0.0151%" height="15" fill="rgb(216,46,15)" fg:x="4978752667" fg:w="24595102"/><text x="3.3094%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (22,759,227 samples, 0.01%)</title><rect x="3.0605%" y="1061" width="0.0140%" height="15" fill="rgb(250,74,19)" fg:x="4980588542" fg:w="22759227"/><text x="3.3105%" y="1071.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_next (30,441,171 samples, 0.02%)</title><rect x="3.0745%" y="1077" width="0.0187%" height="15" fill="rgb(249,42,33)" fg:x="5003347769" fg:w="30441171"/><text x="3.3245%" y="1087.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (142,718,201 samples, 0.09%)</title><rect x="3.0323%" y="1093" width="0.0877%" height="15" fill="rgb(242,149,17)" fg:x="4934637244" fg:w="142718201"/><text x="3.2823%" y="1103.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_prev (43,566,505 samples, 0.03%)</title><rect x="3.0932%" y="1077" width="0.0268%" height="15" fill="rgb(244,29,21)" fg:x="5033788940" fg:w="43566505"/><text x="3.3432%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (36,432,310 samples, 0.02%)</title><rect x="3.0976%" y="1061" width="0.0224%" height="15" fill="rgb(220,130,37)" fg:x="5040923135" fg:w="36432310"/><text x="3.3476%" y="1071.50"></text></g><g><title>core::ptr::write (36,432,310 samples, 0.02%)</title><rect x="3.0976%" y="1045" width="0.0224%" height="15" fill="rgb(211,67,2)" fg:x="5040923135" fg:w="36432310"/><text x="3.3476%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::process_expiration (243,270,921 samples, 0.15%)</title><rect x="2.9890%" y="1109" width="0.1495%" height="15" fill="rgb(235,68,52)" fg:x="4864249768" fg:w="243270921"/><text x="3.2390%" y="1119.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (30,165,244 samples, 0.02%)</title><rect x="3.1200%" y="1093" width="0.0185%" height="15" fill="rgb(246,142,3)" fg:x="5077355445" fg:w="30165244"/><text x="3.3700%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (353,563,992 samples, 0.22%)</title><rect x="2.9475%" y="1125" width="0.2173%" height="15" fill="rgb(241,25,7)" fg:x="4796581093" fg:w="353563992"/><text x="3.1975%" y="1135.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (33,711,822 samples, 0.02%)</title><rect x="3.1440%" y="1109" width="0.0207%" height="15" fill="rgb(242,119,39)" fg:x="5116433263" fg:w="33711822"/><text x="3.3940%" y="1119.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (32,056,859 samples, 0.02%)</title><rect x="3.1647%" y="1125" width="0.0197%" height="15" fill="rgb(241,98,45)" fg:x="5150145085" fg:w="32056859"/><text x="3.4147%" y="1135.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (27,308,718 samples, 0.02%)</title><rect x="3.1676%" y="1109" width="0.0168%" height="15" fill="rgb(254,28,30)" fg:x="5154893226" fg:w="27308718"/><text x="3.4176%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::wake_list::WakeList::wake_all::DropGuard&gt; (26,009,294 samples, 0.02%)</title><rect x="3.1973%" y="1109" width="0.0160%" height="15" fill="rgb(241,142,54)" fg:x="5203139941" fg:w="26009294"/><text x="3.4473%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (54,481,768 samples, 0.03%)</title><rect x="3.2307%" y="1029" width="0.0335%" height="15" fill="rgb(222,85,15)" fg:x="5257529615" fg:w="54481768"/><text x="3.4807%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (53,279,862 samples, 0.03%)</title><rect x="3.2315%" y="1013" width="0.0327%" height="15" fill="rgb(210,85,47)" fg:x="5258731521" fg:w="53279862"/><text x="3.4815%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (53,279,862 samples, 0.03%)</title><rect x="3.2315%" y="997" width="0.0327%" height="15" fill="rgb(224,206,25)" fg:x="5258731521" fg:w="53279862"/><text x="3.4815%" y="1007.50"></text></g><g><title>tokio::runtime::context::with_scheduler (51,318,777 samples, 0.03%)</title><rect x="3.2327%" y="981" width="0.0315%" height="15" fill="rgb(243,201,19)" fg:x="5260692606" fg:w="51318777"/><text x="3.4827%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (44,183,392 samples, 0.03%)</title><rect x="3.2370%" y="965" width="0.0272%" height="15" fill="rgb(236,59,4)" fg:x="5267827991" fg:w="44183392"/><text x="3.4870%" y="975.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (40,330,375 samples, 0.02%)</title><rect x="3.2394%" y="949" width="0.0248%" height="15" fill="rgb(254,179,45)" fg:x="5271681008" fg:w="40330375"/><text x="3.4894%" y="959.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (40,330,375 samples, 0.02%)</title><rect x="3.2394%" y="933" width="0.0248%" height="15" fill="rgb(226,14,10)" fg:x="5271681008" fg:w="40330375"/><text x="3.4894%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (31,131,178 samples, 0.02%)</title><rect x="3.2451%" y="917" width="0.0191%" height="15" fill="rgb(244,27,41)" fg:x="5280880205" fg:w="31131178"/><text x="3.4951%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (31,131,178 samples, 0.02%)</title><rect x="3.2451%" y="901" width="0.0191%" height="15" fill="rgb(235,35,32)" fg:x="5280880205" fg:w="31131178"/><text x="3.4951%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (22,906,264 samples, 0.01%)</title><rect x="3.2501%" y="885" width="0.0141%" height="15" fill="rgb(218,68,31)" fg:x="5289105119" fg:w="22906264"/><text x="3.5001%" y="895.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (78,207,126 samples, 0.05%)</title><rect x="3.2218%" y="1061" width="0.0481%" height="15" fill="rgb(207,120,37)" fg:x="5242995133" fg:w="78207126"/><text x="3.4718%" y="1071.50"></text></g><g><title>tokio::runtime::task::raw::schedule (71,699,908 samples, 0.04%)</title><rect x="3.2258%" y="1045" width="0.0441%" height="15" fill="rgb(227,98,0)" fg:x="5249502351" fg:w="71699908"/><text x="3.4758%" y="1055.50"></text></g><g><title>tokio::runtime::task::state::State::load (39,913,581 samples, 0.02%)</title><rect x="3.2734%" y="1029" width="0.0245%" height="15" fill="rgb(207,7,3)" fg:x="5326948782" fg:w="39913581"/><text x="3.5234%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (38,432,502 samples, 0.02%)</title><rect x="3.2743%" y="1013" width="0.0236%" height="15" fill="rgb(206,98,19)" fg:x="5328429861" fg:w="38432502"/><text x="3.5243%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (38,432,502 samples, 0.02%)</title><rect x="3.2743%" y="997" width="0.0236%" height="15" fill="rgb(217,5,26)" fg:x="5328429861" fg:w="38432502"/><text x="3.5243%" y="1007.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (684,582,354 samples, 0.42%)</title><rect x="2.8811%" y="1141" width="0.4207%" height="15" fill="rgb(235,190,38)" fg:x="4688624603" fg:w="684582354"/><text x="3.1311%" y="1151.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (178,352,788 samples, 0.11%)</title><rect x="3.1922%" y="1125" width="0.1096%" height="15" fill="rgb(247,86,24)" fg:x="5194854169" fg:w="178352788"/><text x="3.4422%" y="1135.50"></text></g><g><title>core::task::wake::Waker::wake (141,790,494 samples, 0.09%)</title><rect x="3.2147%" y="1109" width="0.0871%" height="15" fill="rgb(205,101,16)" fg:x="5231416463" fg:w="141790494"/><text x="3.4647%" y="1119.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (137,839,714 samples, 0.08%)</title><rect x="3.2171%" y="1093" width="0.0847%" height="15" fill="rgb(246,168,33)" fg:x="5235367243" fg:w="137839714"/><text x="3.4671%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (132,811,491 samples, 0.08%)</title><rect x="3.2202%" y="1077" width="0.0816%" height="15" fill="rgb(231,114,1)" fg:x="5240395466" fg:w="132811491"/><text x="3.4702%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (50,300,061 samples, 0.03%)</title><rect x="3.2709%" y="1061" width="0.0309%" height="15" fill="rgb(207,184,53)" fg:x="5322906896" fg:w="50300061"/><text x="3.5209%" y="1071.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (48,528,742 samples, 0.03%)</title><rect x="3.2720%" y="1045" width="0.0298%" height="15" fill="rgb(224,95,51)" fg:x="5324678215" fg:w="48528742"/><text x="3.5220%" y="1055.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (737,195,648 samples, 0.45%)</title><rect x="2.8760%" y="1157" width="0.4530%" height="15" fill="rgb(212,188,45)" fg:x="4680245027" fg:w="737195648"/><text x="3.1260%" y="1167.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (44,233,718 samples, 0.03%)</title><rect x="3.3018%" y="1141" width="0.0272%" height="15" fill="rgb(223,154,38)" fg:x="5373206957" fg:w="44233718"/><text x="3.5518%" y="1151.50"></text></g><g><title>tokio::time::clock::Clock::now (39,145,007 samples, 0.02%)</title><rect x="3.3049%" y="1125" width="0.0241%" height="15" fill="rgb(251,22,52)" fg:x="5378295668" fg:w="39145007"/><text x="3.5549%" y="1135.50"></text></g><g><title>tokio::time::clock::now (39,145,007 samples, 0.02%)</title><rect x="3.3049%" y="1109" width="0.0241%" height="15" fill="rgb(229,209,22)" fg:x="5378295668" fg:w="39145007"/><text x="3.5549%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (39,145,007 samples, 0.02%)</title><rect x="3.3049%" y="1093" width="0.0241%" height="15" fill="rgb(234,138,34)" fg:x="5378295668" fg:w="39145007"/><text x="3.5549%" y="1103.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (39,145,007 samples, 0.02%)</title><rect x="3.3049%" y="1077" width="0.0241%" height="15" fill="rgb(212,95,11)" fg:x="5378295668" fg:w="39145007"/><text x="3.5549%" y="1087.50"></text></g><g><title>__vdso_clock_gettime (33,219,353 samples, 0.02%)</title><rect x="3.3086%" y="1061" width="0.0204%" height="15" fill="rgb(240,179,47)" fg:x="5384221322" fg:w="33219353"/><text x="3.5586%" y="1071.50"></text></g><g><title>[unknown] (33,219,353 samples, 0.02%)</title><rect x="3.3086%" y="1045" width="0.0204%" height="15" fill="rgb(240,163,11)" fg:x="5384221322" fg:w="33219353"/><text x="3.5586%" y="1055.50"></text></g><g><title>[unknown] (32,074,118 samples, 0.02%)</title><rect x="3.3093%" y="1029" width="0.0197%" height="15" fill="rgb(236,37,12)" fg:x="5385366557" fg:w="32074118"/><text x="3.5593%" y="1039.50"></text></g><g><title>[unknown] (29,659,340 samples, 0.02%)</title><rect x="3.3108%" y="1013" width="0.0182%" height="15" fill="rgb(232,164,16)" fg:x="5387781335" fg:w="29659340"/><text x="3.5608%" y="1023.50"></text></g><g><title>[unknown] (26,067,454 samples, 0.02%)</title><rect x="3.3130%" y="997" width="0.0160%" height="15" fill="rgb(244,205,15)" fg:x="5391373221" fg:w="26067454"/><text x="3.5630%" y="1007.50"></text></g><g><title>[unknown] (26,067,454 samples, 0.02%)</title><rect x="3.3130%" y="981" width="0.0160%" height="15" fill="rgb(223,117,47)" fg:x="5391373221" fg:w="26067454"/><text x="3.5630%" y="991.50"></text></g><g><title>[unknown] (24,361,278 samples, 0.01%)</title><rect x="3.3140%" y="965" width="0.0150%" height="15" fill="rgb(244,107,35)" fg:x="5393079397" fg:w="24361278"/><text x="3.5640%" y="975.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (67,811,711 samples, 0.04%)</title><rect x="3.3344%" y="1109" width="0.0417%" height="15" fill="rgb(205,140,8)" fg:x="5426226478" fg:w="67811711"/><text x="3.5844%" y="1119.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (62,315,364 samples, 0.04%)</title><rect x="3.3378%" y="1093" width="0.0383%" height="15" fill="rgb(228,84,46)" fg:x="5431722825" fg:w="62315364"/><text x="3.5878%" y="1103.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (32,717,466 samples, 0.02%)</title><rect x="3.3559%" y="1077" width="0.0201%" height="15" fill="rgb(254,188,9)" fg:x="5461320723" fg:w="32717466"/><text x="3.6059%" y="1087.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (30,438,023 samples, 0.02%)</title><rect x="3.3573%" y="1061" width="0.0187%" height="15" fill="rgb(206,112,54)" fg:x="5463600166" fg:w="30438023"/><text x="3.6073%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (21,309,146 samples, 0.01%)</title><rect x="3.3630%" y="1045" width="0.0131%" height="15" fill="rgb(216,84,49)" fg:x="5472729043" fg:w="21309146"/><text x="3.6130%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (19,042,197 samples, 0.01%)</title><rect x="3.3643%" y="1029" width="0.0117%" height="15" fill="rgb(214,194,35)" fg:x="5474995992" fg:w="19042197"/><text x="3.6143%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (19,042,197 samples, 0.01%)</title><rect x="3.3643%" y="1013" width="0.0117%" height="15" fill="rgb(249,28,3)" fg:x="5474995992" fg:w="19042197"/><text x="3.6143%" y="1023.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (21,693,689 samples, 0.01%)</title><rect x="3.3920%" y="1061" width="0.0133%" height="15" fill="rgb(222,56,52)" fg:x="5519980931" fg:w="21693689"/><text x="3.6420%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::registration_set::Synced&gt;&gt; (19,978,599 samples, 0.01%)</title><rect x="3.4096%" y="1061" width="0.0123%" height="15" fill="rgb(245,217,50)" fg:x="5548634978" fg:w="19978599"/><text x="3.6596%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17,750,436 samples, 0.01%)</title><rect x="3.4441%" y="1029" width="0.0109%" height="15" fill="rgb(213,201,24)" fg:x="5604757257" fg:w="17750436"/><text x="3.6941%" y="1039.50"></text></g><g><title>[unknown] (16,628,899 samples, 0.01%)</title><rect x="3.4566%" y="1013" width="0.0102%" height="15" fill="rgb(248,116,28)" fg:x="5625083731" fg:w="16628899"/><text x="3.7066%" y="1023.50"></text></g><g><title>[unknown] (16,628,899 samples, 0.01%)</title><rect x="3.4566%" y="997" width="0.0102%" height="15" fill="rgb(219,72,43)" fg:x="5625083731" fg:w="16628899"/><text x="3.7066%" y="1007.50"></text></g><g><title>mio::poll::Poll::poll (81,601,198 samples, 0.05%)</title><rect x="3.4219%" y="1061" width="0.0501%" height="15" fill="rgb(209,138,14)" fg:x="5568613577" fg:w="81601198"/><text x="3.6719%" y="1071.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (71,581,992 samples, 0.04%)</title><rect x="3.4280%" y="1045" width="0.0440%" height="15" fill="rgb(222,18,33)" fg:x="5578632783" fg:w="71581992"/><text x="3.6780%" y="1055.50"></text></g><g><title>epoll_wait (27,707,082 samples, 0.02%)</title><rect x="3.4550%" y="1029" width="0.0170%" height="15" fill="rgb(213,199,7)" fg:x="5622507693" fg:w="27707082"/><text x="3.7050%" y="1039.50"></text></g><g><title>&lt;tokio::util::linked_list::DrainFilter&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,574,293 samples, 0.01%)</title><rect x="3.4997%" y="1045" width="0.0108%" height="15" fill="rgb(250,110,10)" fg:x="5695322181" fg:w="17574293"/><text x="3.7497%" y="1055.50"></text></g><g><title>tokio::runtime::time::Driver::park_thread_timeout (357,546,957 samples, 0.22%)</title><rect x="3.3290%" y="1157" width="0.2197%" height="15" fill="rgb(248,123,6)" fg:x="5417440675" fg:w="357546957"/><text x="3.5790%" y="1167.50"></text></g><g><title>tokio::runtime::driver::IoStack::park_timeout (355,819,879 samples, 0.22%)</title><rect x="3.3300%" y="1141" width="0.2186%" height="15" fill="rgb(206,91,31)" fg:x="5419167753" fg:w="355819879"/><text x="3.5800%" y="1151.50"></text></g><g><title>tokio::runtime::process::Driver::park_timeout (353,692,487 samples, 0.22%)</title><rect x="3.3313%" y="1125" width="0.2173%" height="15" fill="rgb(211,154,13)" fg:x="5421295145" fg:w="353692487"/><text x="3.5813%" y="1135.50"></text></g><g><title>tokio::runtime::signal::Driver::park_timeout (280,949,443 samples, 0.17%)</title><rect x="3.3760%" y="1109" width="0.1726%" height="15" fill="rgb(225,148,7)" fg:x="5494038189" fg:w="280949443"/><text x="3.6260%" y="1119.50"></text></g><g><title>tokio::runtime::io::driver::Driver::park_timeout (274,791,362 samples, 0.17%)</title><rect x="3.3798%" y="1093" width="0.1689%" height="15" fill="rgb(220,160,43)" fg:x="5500196270" fg:w="274791362"/><text x="3.6298%" y="1103.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (264,195,607 samples, 0.16%)</title><rect x="3.3863%" y="1077" width="0.1623%" height="15" fill="rgb(213,52,39)" fg:x="5510792025" fg:w="264195607"/><text x="3.6363%" y="1087.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (88,725,880 samples, 0.05%)</title><rect x="3.4942%" y="1061" width="0.0545%" height="15" fill="rgb(243,137,7)" fg:x="5686261752" fg:w="88725880"/><text x="3.7442%" y="1071.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (46,391,168 samples, 0.03%)</title><rect x="3.5202%" y="1045" width="0.0285%" height="15" fill="rgb(230,79,13)" fg:x="5728596464" fg:w="46391168"/><text x="3.7702%" y="1055.50"></text></g><g><title>core::task::wake::Waker::wake (44,633,845 samples, 0.03%)</title><rect x="3.5213%" y="1029" width="0.0274%" height="15" fill="rgb(247,105,23)" fg:x="5730353787" fg:w="44633845"/><text x="3.7713%" y="1039.50"></text></g><g><title>tokio::runtime::park::wake (42,310,413 samples, 0.03%)</title><rect x="3.5227%" y="1013" width="0.0260%" height="15" fill="rgb(223,179,41)" fg:x="5732677219" fg:w="42310413"/><text x="3.7727%" y="1023.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (34,822,287 samples, 0.02%)</title><rect x="3.5273%" y="997" width="0.0214%" height="15" fill="rgb(218,9,34)" fg:x="5740165345" fg:w="34822287"/><text x="3.7773%" y="1007.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (27,472,173 samples, 0.02%)</title><rect x="3.5318%" y="981" width="0.0169%" height="15" fill="rgb(222,106,8)" fg:x="5747515459" fg:w="27472173"/><text x="3.7818%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (27,472,173 samples, 0.02%)</title><rect x="3.5318%" y="965" width="0.0169%" height="15" fill="rgb(211,220,0)" fg:x="5747515459" fg:w="27472173"/><text x="3.7818%" y="975.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (25,336,359 samples, 0.02%)</title><rect x="3.5331%" y="949" width="0.0156%" height="15" fill="rgb(229,52,16)" fg:x="5749651273" fg:w="25336359"/><text x="3.7831%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (25,336,359 samples, 0.02%)</title><rect x="3.5331%" y="933" width="0.0156%" height="15" fill="rgb(212,155,18)" fg:x="5749651273" fg:w="25336359"/><text x="3.7831%" y="943.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (37,931,646 samples, 0.02%)</title><rect x="3.5501%" y="1157" width="0.0233%" height="15" fill="rgb(242,21,14)" fg:x="5777213323" fg:w="37931646"/><text x="3.8001%" y="1167.50"></text></g><g><title>tokio::time::clock::Clock::now (36,347,524 samples, 0.02%)</title><rect x="3.5510%" y="1141" width="0.0223%" height="15" fill="rgb(222,19,48)" fg:x="5778797445" fg:w="36347524"/><text x="3.8010%" y="1151.50"></text></g><g><title>tokio::time::clock::now (36,347,524 samples, 0.02%)</title><rect x="3.5510%" y="1125" width="0.0223%" height="15" fill="rgb(232,45,27)" fg:x="5778797445" fg:w="36347524"/><text x="3.8010%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (36,347,524 samples, 0.02%)</title><rect x="3.5510%" y="1109" width="0.0223%" height="15" fill="rgb(249,103,42)" fg:x="5778797445" fg:w="36347524"/><text x="3.8010%" y="1119.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (34,640,097 samples, 0.02%)</title><rect x="3.5521%" y="1093" width="0.0213%" height="15" fill="rgb(246,81,33)" fg:x="5780504872" fg:w="34640097"/><text x="3.8021%" y="1103.50"></text></g><g><title>__vdso_clock_gettime (28,149,000 samples, 0.02%)</title><rect x="3.5561%" y="1077" width="0.0173%" height="15" fill="rgb(252,33,42)" fg:x="5786995969" fg:w="28149000"/><text x="3.8061%" y="1087.50"></text></g><g><title>[unknown] (28,149,000 samples, 0.02%)</title><rect x="3.5561%" y="1061" width="0.0173%" height="15" fill="rgb(209,212,41)" fg:x="5786995969" fg:w="28149000"/><text x="3.8061%" y="1071.50"></text></g><g><title>[unknown] (24,355,021 samples, 0.01%)</title><rect x="3.5584%" y="1045" width="0.0150%" height="15" fill="rgb(207,154,6)" fg:x="5790789948" fg:w="24355021"/><text x="3.8084%" y="1055.50"></text></g><g><title>[unknown] (19,197,890 samples, 0.01%)</title><rect x="3.5616%" y="1029" width="0.0118%" height="15" fill="rgb(223,64,47)" fg:x="5795947079" fg:w="19197890"/><text x="3.8116%" y="1039.50"></text></g><g><title>[unknown] (17,039,813 samples, 0.01%)</title><rect x="3.5629%" y="1013" width="0.0105%" height="15" fill="rgb(211,161,38)" fg:x="5798105156" fg:w="17039813"/><text x="3.8129%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,748,729 samples, 0.01%)</title><rect x="3.5897%" y="1125" width="0.0127%" height="15" fill="rgb(219,138,40)" fg:x="5841665856" fg:w="20748729"/><text x="3.8397%" y="1135.50"></text></g><g><title>core::array::_&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (40,698,555 samples, 0.03%)</title><rect x="3.6151%" y="1109" width="0.0250%" height="15" fill="rgb(241,228,46)" fg:x="5882994757" fg:w="40698555"/><text x="3.8651%" y="1119.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (26,994,719 samples, 0.02%)</title><rect x="3.6235%" y="1093" width="0.0166%" height="15" fill="rgb(223,209,38)" fg:x="5896698593" fg:w="26994719"/><text x="3.8735%" y="1103.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (26,994,719 samples, 0.02%)</title><rect x="3.6235%" y="1077" width="0.0166%" height="15" fill="rgb(236,164,45)" fg:x="5896698593" fg:w="26994719"/><text x="3.8735%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (28,275,914 samples, 0.02%)</title><rect x="3.6490%" y="1093" width="0.0174%" height="15" fill="rgb(231,15,5)" fg:x="5938214895" fg:w="28275914"/><text x="3.8990%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::no_expirations_before (96,184,240 samples, 0.06%)</title><rect x="3.6103%" y="1125" width="0.0591%" height="15" fill="rgb(252,35,15)" fg:x="5875288173" fg:w="96184240"/><text x="3.8603%" y="1135.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (45,500,033 samples, 0.03%)</title><rect x="3.6415%" y="1109" width="0.0280%" height="15" fill="rgb(248,181,18)" fg:x="5925972380" fg:w="45500033"/><text x="3.8915%" y="1119.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (35,233,842 samples, 0.02%)</title><rect x="3.6694%" y="1125" width="0.0217%" height="15" fill="rgb(233,39,42)" fg:x="5971472413" fg:w="35233842"/><text x="3.9194%" y="1135.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (27,195,991 samples, 0.02%)</title><rect x="3.6744%" y="1109" width="0.0167%" height="15" fill="rgb(238,110,33)" fg:x="5979510264" fg:w="27195991"/><text x="3.9244%" y="1119.50"></text></g><g><title>tokio::runtime::driver::Driver::park_timeout (1,833,176,476 samples, 1.13%)</title><rect x="2.5731%" y="1221" width="1.1265%" height="15" fill="rgb(233,195,10)" fg:x="4187412629" fg:w="1833176476"/><text x="2.8231%" y="1231.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park_timeout (1,826,176,462 samples, 1.12%)</title><rect x="2.5774%" y="1205" width="1.1222%" height="15" fill="rgb(254,105,3)" fg:x="4194412643" fg:w="1826176462"/><text x="2.8274%" y="1215.50"></text></g><g><title>tokio::runtime::time::Driver::park_timeout (1,811,849,106 samples, 1.11%)</title><rect x="2.5862%" y="1189" width="1.1134%" height="15" fill="rgb(221,225,9)" fg:x="4208739999" fg:w="1811849106"/><text x="2.8362%" y="1199.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (1,795,612,389 samples, 1.10%)</title><rect x="2.5962%" y="1173" width="1.1034%" height="15" fill="rgb(224,227,45)" fg:x="4224976716" fg:w="1795612389"/><text x="2.8462%" y="1183.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (203,441,203 samples, 0.13%)</title><rect x="3.5746%" y="1157" width="0.1250%" height="15" fill="rgb(229,198,43)" fg:x="5817147902" fg:w="203441203"/><text x="3.8246%" y="1167.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (193,361,913 samples, 0.12%)</title><rect x="3.5808%" y="1141" width="0.1188%" height="15" fill="rgb(206,209,35)" fg:x="5827227192" fg:w="193361913"/><text x="3.8308%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (1,908,853,424 samples, 1.17%)</title><rect x="2.5488%" y="1237" width="1.1730%" height="15" fill="rgb(245,195,53)" fg:x="4147826951" fg:w="1908853424"/><text x="2.7988%" y="1247.50"></text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (36,091,270 samples, 0.02%)</title><rect x="3.6996%" y="1221" width="0.0222%" height="15" fill="rgb(240,92,26)" fg:x="6020589105" fg:w="36091270"/><text x="3.9496%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (27,572,075 samples, 0.02%)</title><rect x="3.7048%" y="1205" width="0.0169%" height="15" fill="rgb(207,40,23)" fg:x="6029108300" fg:w="27572075"/><text x="3.9548%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16,820,149 samples, 0.01%)</title><rect x="3.7293%" y="1189" width="0.0103%" height="15" fill="rgb(223,111,35)" fg:x="6068835066" fg:w="16820149"/><text x="3.9793%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (16,820,149 samples, 0.01%)</title><rect x="3.7293%" y="1173" width="0.0103%" height="15" fill="rgb(229,147,28)" fg:x="6068835066" fg:w="16820149"/><text x="3.9793%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (35,155,363 samples, 0.02%)</title><rect x="3.7218%" y="1237" width="0.0216%" height="15" fill="rgb(211,29,28)" fg:x="6056680375" fg:w="35155363"/><text x="3.9718%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (35,155,363 samples, 0.02%)</title><rect x="3.7218%" y="1221" width="0.0216%" height="15" fill="rgb(228,72,33)" fg:x="6056680375" fg:w="35155363"/><text x="3.9718%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (28,905,704 samples, 0.02%)</title><rect x="3.7256%" y="1205" width="0.0178%" height="15" fill="rgb(205,214,31)" fg:x="6062930034" fg:w="28905704"/><text x="3.9756%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (2,132,431,084 samples, 1.31%)</title><rect x="2.4638%" y="1253" width="1.3104%" height="15" fill="rgb(224,111,15)" fg:x="4009497414" fg:w="2132431084"/><text x="2.7138%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (48,374,625 samples, 0.03%)</title><rect x="3.7444%" y="1237" width="0.0297%" height="15" fill="rgb(253,21,26)" fg:x="6093553873" fg:w="48374625"/><text x="3.9944%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::len (34,376,132 samples, 0.02%)</title><rect x="3.7530%" y="1221" width="0.0211%" height="15" fill="rgb(245,139,43)" fg:x="6107552366" fg:w="34376132"/><text x="4.0030%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (26,397,170 samples, 0.02%)</title><rect x="3.7580%" y="1205" width="0.0162%" height="15" fill="rgb(252,170,7)" fg:x="6115531328" fg:w="26397170"/><text x="4.0080%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (25,446,951 samples, 0.02%)</title><rect x="3.7893%" y="1237" width="0.0156%" height="15" fill="rgb(231,118,14)" fg:x="6166516950" fg:w="25446951"/><text x="4.0393%" y="1247.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (25,446,951 samples, 0.02%)</title><rect x="3.7893%" y="1221" width="0.0156%" height="15" fill="rgb(238,83,0)" fg:x="6166516950" fg:w="25446951"/><text x="4.0393%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (25,446,951 samples, 0.02%)</title><rect x="3.7893%" y="1205" width="0.0156%" height="15" fill="rgb(221,39,39)" fg:x="6166516950" fg:w="25446951"/><text x="4.0393%" y="1215.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::submit_unstable (16,864,699 samples, 0.01%)</title><rect x="3.8180%" y="1205" width="0.0104%" height="15" fill="rgb(222,119,46)" fg:x="6213280024" fg:w="16864699"/><text x="4.0680%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::submit (39,574,755 samples, 0.02%)</title><rect x="3.8071%" y="1237" width="0.0243%" height="15" fill="rgb(222,165,49)" fg:x="6195500158" fg:w="39574755"/><text x="4.0571%" y="1247.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::submit (29,071,014 samples, 0.02%)</title><rect x="3.8135%" y="1221" width="0.0179%" height="15" fill="rgb(219,113,52)" fg:x="6206003899" fg:w="29071014"/><text x="4.0635%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (2,621,693,922 samples, 1.61%)</title><rect x="2.2244%" y="1269" width="1.6110%" height="15" fill="rgb(214,7,15)" fg:x="3619884103" fg:w="2621693922"/><text x="2.4744%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (99,649,527 samples, 0.06%)</title><rect x="3.7742%" y="1253" width="0.0612%" height="15" fill="rgb(235,32,4)" fg:x="6141928498" fg:w="99649527"/><text x="4.0242%" y="1263.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (16,758,270 samples, 0.01%)</title><rect x="3.9460%" y="1093" width="0.0103%" height="15" fill="rgb(238,90,54)" fg:x="6421612985" fg:w="16758270"/><text x="4.1960%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (66,795,179 samples, 0.04%)</title><rect x="3.9360%" y="1109" width="0.0410%" height="15" fill="rgb(213,208,19)" fg:x="6405359802" fg:w="66795179"/><text x="4.1860%" y="1119.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (111,485,304 samples, 0.07%)</title><rect x="3.9154%" y="1189" width="0.0685%" height="15" fill="rgb(233,156,4)" fg:x="6371785047" fg:w="111485304"/><text x="4.1654%" y="1199.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (108,017,975 samples, 0.07%)</title><rect x="3.9175%" y="1173" width="0.0664%" height="15" fill="rgb(207,194,5)" fg:x="6375252376" fg:w="108017975"/><text x="4.1675%" y="1183.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (104,232,838 samples, 0.06%)</title><rect x="3.9199%" y="1157" width="0.0641%" height="15" fill="rgb(206,111,30)" fg:x="6379037513" fg:w="104232838"/><text x="4.1699%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::park (83,514,490 samples, 0.05%)</title><rect x="3.9326%" y="1141" width="0.0513%" height="15" fill="rgb(243,70,54)" fg:x="6399755861" fg:w="83514490"/><text x="4.1826%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (82,454,864 samples, 0.05%)</title><rect x="3.9333%" y="1125" width="0.0507%" height="15" fill="rgb(242,28,8)" fg:x="6400815487" fg:w="82454864"/><text x="4.1833%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (149,260,348 samples, 0.09%)</title><rect x="3.8936%" y="1205" width="0.0917%" height="15" fill="rgb(219,106,18)" fg:x="6336241177" fg:w="149260348"/><text x="4.1436%" y="1215.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_next (36,695,410 samples, 0.02%)</title><rect x="4.0476%" y="1045" width="0.0225%" height="15" fill="rgb(244,222,10)" fg:x="6586851916" fg:w="36695410"/><text x="4.2976%" y="1055.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (64,570,828 samples, 0.04%)</title><rect x="4.0327%" y="1061" width="0.0397%" height="15" fill="rgb(236,179,52)" fg:x="6562584744" fg:w="64570828"/><text x="4.2827%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::process_expiration (88,738,525 samples, 0.05%)</title><rect x="4.0203%" y="1077" width="0.0545%" height="15" fill="rgb(213,23,39)" fg:x="6542404861" fg:w="88738525"/><text x="4.2703%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (104,970,687 samples, 0.06%)</title><rect x="4.0154%" y="1093" width="0.0645%" height="15" fill="rgb(238,48,10)" fg:x="6534554385" fg:w="104970687"/><text x="4.2654%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (42,056,693 samples, 0.03%)</title><rect x="4.0990%" y="997" width="0.0258%" height="15" fill="rgb(251,196,23)" fg:x="6670542726" fg:w="42056693"/><text x="4.3490%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (42,056,693 samples, 0.03%)</title><rect x="4.0990%" y="981" width="0.0258%" height="15" fill="rgb(250,152,24)" fg:x="6670542726" fg:w="42056693"/><text x="4.3490%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (40,830,736 samples, 0.03%)</title><rect x="4.0998%" y="965" width="0.0251%" height="15" fill="rgb(209,150,17)" fg:x="6671768683" fg:w="40830736"/><text x="4.3498%" y="975.50"></text></g><g><title>tokio::runtime::context::with_scheduler (40,830,736 samples, 0.03%)</title><rect x="4.0998%" y="949" width="0.0251%" height="15" fill="rgb(234,202,34)" fg:x="6671768683" fg:w="40830736"/><text x="4.3498%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (37,357,673 samples, 0.02%)</title><rect x="4.1019%" y="933" width="0.0230%" height="15" fill="rgb(253,148,53)" fg:x="6675241746" fg:w="37357673"/><text x="4.3519%" y="943.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (36,491,857 samples, 0.02%)</title><rect x="4.1024%" y="917" width="0.0224%" height="15" fill="rgb(218,129,16)" fg:x="6676107562" fg:w="36491857"/><text x="4.3524%" y="927.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (32,143,482 samples, 0.02%)</title><rect x="4.1051%" y="901" width="0.0198%" height="15" fill="rgb(216,85,19)" fg:x="6680455937" fg:w="32143482"/><text x="4.3551%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (31,125,576 samples, 0.02%)</title><rect x="4.1057%" y="885" width="0.0191%" height="15" fill="rgb(235,228,7)" fg:x="6681473843" fg:w="31125576"/><text x="4.3557%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (31,125,576 samples, 0.02%)</title><rect x="4.1057%" y="869" width="0.0191%" height="15" fill="rgb(245,175,0)" fg:x="6681473843" fg:w="31125576"/><text x="4.3557%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (21,232,815 samples, 0.01%)</title><rect x="4.1118%" y="853" width="0.0130%" height="15" fill="rgb(208,168,36)" fg:x="6691366604" fg:w="21232815"/><text x="4.3618%" y="863.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (45,823,142 samples, 0.03%)</title><rect x="4.0990%" y="1029" width="0.0282%" height="15" fill="rgb(246,171,24)" fg:x="6670542726" fg:w="45823142"/><text x="4.3490%" y="1039.50"></text></g><g><title>tokio::runtime::task::raw::schedule (45,823,142 samples, 0.03%)</title><rect x="4.0990%" y="1013" width="0.0282%" height="15" fill="rgb(215,142,24)" fg:x="6670542726" fg:w="45823142"/><text x="4.3490%" y="1023.50"></text></g><g><title>tokio::runtime::task::state::State::load (16,601,901 samples, 0.01%)</title><rect x="4.1289%" y="997" width="0.0102%" height="15" fill="rgb(250,187,7)" fg:x="6719194469" fg:w="16601901"/><text x="4.3789%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (16,601,901 samples, 0.01%)</title><rect x="4.1289%" y="981" width="0.0102%" height="15" fill="rgb(228,66,33)" fg:x="6719194469" fg:w="16601901"/><text x="4.3789%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (16,601,901 samples, 0.01%)</title><rect x="4.1289%" y="965" width="0.0102%" height="15" fill="rgb(234,215,21)" fg:x="6719194469" fg:w="16601901"/><text x="4.3789%" y="975.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (228,493,963 samples, 0.14%)</title><rect x="4.0001%" y="1109" width="0.1404%" height="15" fill="rgb(222,191,20)" fg:x="6509594846" fg:w="228493963"/><text x="4.2501%" y="1119.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (81,882,165 samples, 0.05%)</title><rect x="4.0902%" y="1093" width="0.0503%" height="15" fill="rgb(245,79,54)" fg:x="6656206644" fg:w="81882165"/><text x="4.3402%" y="1103.50"></text></g><g><title>core::task::wake::Waker::wake (74,532,736 samples, 0.05%)</title><rect x="4.0947%" y="1077" width="0.0458%" height="15" fill="rgb(240,10,37)" fg:x="6663556073" fg:w="74532736"/><text x="4.3447%" y="1087.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (73,344,348 samples, 0.05%)</title><rect x="4.0954%" y="1061" width="0.0451%" height="15" fill="rgb(214,192,32)" fg:x="6664744461" fg:w="73344348"/><text x="4.3454%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (71,014,697 samples, 0.04%)</title><rect x="4.0969%" y="1045" width="0.0436%" height="15" fill="rgb(209,36,54)" fg:x="6667074112" fg:w="71014697"/><text x="4.3469%" y="1055.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (20,541,008 samples, 0.01%)</title><rect x="4.1279%" y="1029" width="0.0126%" height="15" fill="rgb(220,10,11)" fg:x="6717547801" fg:w="20541008"/><text x="4.3779%" y="1039.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (18,894,340 samples, 0.01%)</title><rect x="4.1289%" y="1013" width="0.0116%" height="15" fill="rgb(221,106,17)" fg:x="6719194469" fg:w="18894340"/><text x="4.3789%" y="1023.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (233,070,157 samples, 0.14%)</title><rect x="4.0001%" y="1125" width="0.1432%" height="15" fill="rgb(251,142,44)" fg:x="6509594846" fg:w="233070157"/><text x="4.2501%" y="1135.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (30,941,294 samples, 0.02%)</title><rect x="4.1441%" y="1077" width="0.0190%" height="15" fill="rgb(238,13,15)" fg:x="6743949306" fg:w="30941294"/><text x="4.3941%" y="1087.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (30,941,294 samples, 0.02%)</title><rect x="4.1441%" y="1061" width="0.0190%" height="15" fill="rgb(208,107,27)" fg:x="6743949306" fg:w="30941294"/><text x="4.3941%" y="1071.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (18,588,026 samples, 0.01%)</title><rect x="4.1918%" y="1029" width="0.0114%" height="15" fill="rgb(205,136,37)" fg:x="6821578324" fg:w="18588026"/><text x="4.4418%" y="1039.50"></text></g><g><title>tokio::runtime::io::driver::Driver::park_timeout (65,264,666 samples, 0.04%)</title><rect x="4.1631%" y="1061" width="0.0401%" height="15" fill="rgb(250,205,27)" fg:x="6774906438" fg:w="65264666"/><text x="4.4131%" y="1071.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (61,529,909 samples, 0.04%)</title><rect x="4.1654%" y="1045" width="0.0378%" height="15" fill="rgb(210,80,43)" fg:x="6778641195" fg:w="61529909"/><text x="4.4154%" y="1055.50"></text></g><g><title>tokio::runtime::time::Driver::park_thread_timeout (97,506,113 samples, 0.06%)</title><rect x="4.1433%" y="1125" width="0.0599%" height="15" fill="rgb(247,160,36)" fg:x="6742665003" fg:w="97506113"/><text x="4.3933%" y="1135.50"></text></g><g><title>tokio::runtime::driver::IoStack::park_timeout (97,506,113 samples, 0.06%)</title><rect x="4.1433%" y="1109" width="0.0599%" height="15" fill="rgb(234,13,49)" fg:x="6742665003" fg:w="97506113"/><text x="4.3933%" y="1119.50"></text></g><g><title>tokio::runtime::process::Driver::park_timeout (97,506,113 samples, 0.06%)</title><rect x="4.1433%" y="1093" width="0.0599%" height="15" fill="rgb(234,122,0)" fg:x="6742665003" fg:w="97506113"/><text x="4.3933%" y="1103.50"></text></g><g><title>tokio::runtime::signal::Driver::park_timeout (65,280,516 samples, 0.04%)</title><rect x="4.1631%" y="1077" width="0.0401%" height="15" fill="rgb(207,146,38)" fg:x="6774890600" fg:w="65280516"/><text x="4.4131%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (366,563,772 samples, 0.23%)</title><rect x="3.9853%" y="1205" width="0.2253%" height="15" fill="rgb(207,177,25)" fg:x="6485501525" fg:w="366563772"/><text x="4.2353%" y="1215.50"></text></g><g><title>tokio::runtime::driver::Driver::park (360,989,657 samples, 0.22%)</title><rect x="3.9887%" y="1189" width="0.2218%" height="15" fill="rgb(211,178,42)" fg:x="6491075640" fg:w="360989657"/><text x="4.2387%" y="1199.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (353,386,035 samples, 0.22%)</title><rect x="3.9934%" y="1173" width="0.2172%" height="15" fill="rgb(230,69,54)" fg:x="6498679262" fg:w="353386035"/><text x="4.2434%" y="1183.50"></text></g><g><title>tokio::runtime::time::Driver::park (351,173,291 samples, 0.22%)</title><rect x="3.9948%" y="1157" width="0.2158%" height="15" fill="rgb(214,135,41)" fg:x="6500892006" fg:w="351173291"/><text x="4.2448%" y="1167.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (350,062,813 samples, 0.22%)</title><rect x="3.9954%" y="1141" width="0.2151%" height="15" fill="rgb(237,67,25)" fg:x="6502002484" fg:w="350062813"/><text x="4.2454%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (541,938,141 samples, 0.33%)</title><rect x="3.8805%" y="1237" width="0.3330%" height="15" fill="rgb(222,189,50)" fg:x="6314999461" fg:w="541938141"/><text x="4.1305%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (537,763,934 samples, 0.33%)</title><rect x="3.8831%" y="1221" width="0.3305%" height="15" fill="rgb(245,148,34)" fg:x="6319173668" fg:w="537763934"/><text x="4.1331%" y="1231.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (32,296,868 samples, 0.02%)</title><rect x="4.2224%" y="1173" width="0.0198%" height="15" fill="rgb(222,29,6)" fg:x="6871322412" fg:w="32296868"/><text x="4.4724%" y="1183.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (32,296,868 samples, 0.02%)</title><rect x="4.2224%" y="1157" width="0.0198%" height="15" fill="rgb(221,189,43)" fg:x="6871322412" fg:w="32296868"/><text x="4.4724%" y="1167.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (28,481,313 samples, 0.02%)</title><rect x="4.2247%" y="1141" width="0.0175%" height="15" fill="rgb(207,36,27)" fg:x="6875137967" fg:w="28481313"/><text x="4.4747%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (27,343,093 samples, 0.02%)</title><rect x="4.2254%" y="1125" width="0.0168%" height="15" fill="rgb(217,90,24)" fg:x="6876276187" fg:w="27343093"/><text x="4.4754%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (48,142,962 samples, 0.03%)</title><rect x="4.2135%" y="1237" width="0.0296%" height="15" fill="rgb(224,66,35)" fg:x="6856937602" fg:w="48142962"/><text x="4.4635%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (36,500,153 samples, 0.02%)</title><rect x="4.2207%" y="1221" width="0.0224%" height="15" fill="rgb(221,13,50)" fg:x="6868580411" fg:w="36500153"/><text x="4.4707%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (36,500,153 samples, 0.02%)</title><rect x="4.2207%" y="1205" width="0.0224%" height="15" fill="rgb(236,68,49)" fg:x="6868580411" fg:w="36500153"/><text x="4.4707%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (35,320,119 samples, 0.02%)</title><rect x="4.2214%" y="1189" width="0.0217%" height="15" fill="rgb(229,146,28)" fg:x="6869760445" fg:w="35320119"/><text x="4.4714%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (647,069,313 samples, 0.40%)</title><rect x="3.8536%" y="1253" width="0.3976%" height="15" fill="rgb(225,31,38)" fg:x="6271155485" fg:w="647069313"/><text x="4.1036%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (35,875,768 samples, 0.02%)</title><rect x="4.2512%" y="1253" width="0.0220%" height="15" fill="rgb(250,208,3)" fg:x="6918224798" fg:w="35875768"/><text x="4.5012%" y="1263.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (33,968,994 samples, 0.02%)</title><rect x="4.2765%" y="1221" width="0.0209%" height="15" fill="rgb(246,54,23)" fg:x="6959409115" fg:w="33968994"/><text x="4.5265%" y="1231.50"></text></g><g><title>&lt;usize as core::slice::cmp::SliceContains&gt;::slice_contains (30,954,247 samples, 0.02%)</title><rect x="4.2784%" y="1205" width="0.0190%" height="15" fill="rgb(243,76,11)" fg:x="6962423862" fg:w="30954247"/><text x="4.5284%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (43,122,967 samples, 0.03%)</title><rect x="4.2733%" y="1237" width="0.0265%" height="15" fill="rgb(245,21,50)" fg:x="6954114280" fg:w="43122967"/><text x="4.5233%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (58,052,439 samples, 0.04%)</title><rect x="4.2732%" y="1253" width="0.0357%" height="15" fill="rgb(228,9,43)" fg:x="6954100566" fg:w="58052439"/><text x="4.5232%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (22,283,425 samples, 0.01%)</title><rect x="4.3123%" y="1237" width="0.0137%" height="15" fill="rgb(208,100,47)" fg:x="7017596181" fg:w="22283425"/><text x="4.5623%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (827,463,766 samples, 0.51%)</title><rect x="3.8354%" y="1269" width="0.5085%" height="15" fill="rgb(232,26,8)" fg:x="6241578025" fg:w="827463766"/><text x="4.0854%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (56,888,786 samples, 0.03%)</title><rect x="4.3089%" y="1253" width="0.0350%" height="15" fill="rgb(216,166,38)" fg:x="7012153005" fg:w="56888786"/><text x="4.5589%" y="1263.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (49,752,399 samples, 0.03%)</title><rect x="4.5598%" y="1253" width="0.0306%" height="15" fill="rgb(251,202,51)" fg:x="7420379801" fg:w="49752399"/><text x="4.8098%" y="1263.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (36,844,248 samples, 0.02%)</title><rect x="4.5677%" y="1237" width="0.0226%" height="15" fill="rgb(254,216,34)" fg:x="7433287952" fg:w="36844248"/><text x="4.8177%" y="1247.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (36,844,248 samples, 0.02%)</title><rect x="4.5677%" y="1221" width="0.0226%" height="15" fill="rgb(251,32,27)" fg:x="7433287952" fg:w="36844248"/><text x="4.8177%" y="1231.50"></text></g><g><title>&lt;core::cell::RefMut&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (57,699,970 samples, 0.04%)</title><rect x="4.5903%" y="1253" width="0.0355%" height="15" fill="rgb(208,127,28)" fg:x="7470132200" fg:w="57699970"/><text x="4.8403%" y="1263.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (53,609,066 samples, 0.03%)</title><rect x="4.5929%" y="1237" width="0.0329%" height="15" fill="rgb(224,137,22)" fg:x="7474223104" fg:w="53609066"/><text x="4.8429%" y="1247.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (173,017,945 samples, 0.11%)</title><rect x="4.6258%" y="1253" width="0.1063%" height="15" fill="rgb(254,70,32)" fg:x="7527832170" fg:w="173017945"/><text x="4.8758%" y="1263.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (99,538,682 samples, 0.06%)</title><rect x="4.6710%" y="1237" width="0.0612%" height="15" fill="rgb(229,75,37)" fg:x="7601311433" fg:w="99538682"/><text x="4.9210%" y="1247.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (36,656,425 samples, 0.02%)</title><rect x="4.7096%" y="1221" width="0.0225%" height="15" fill="rgb(252,64,23)" fg:x="7664193690" fg:w="36656425"/><text x="4.9596%" y="1231.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked::precondition_check (22,538,768 samples, 0.01%)</title><rect x="4.7183%" y="1205" width="0.0138%" height="15" fill="rgb(232,162,48)" fg:x="7678311347" fg:w="22538768"/><text x="4.9683%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (105,060,146 samples, 0.06%)</title><rect x="4.7321%" y="1253" width="0.0646%" height="15" fill="rgb(246,160,12)" fg:x="7700850115" fg:w="105060146"/><text x="4.9821%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (74,711,034 samples, 0.05%)</title><rect x="4.7508%" y="1237" width="0.0459%" height="15" fill="rgb(247,166,0)" fg:x="7731199227" fg:w="74711034"/><text x="5.0008%" y="1247.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (44,610,031 samples, 0.03%)</title><rect x="4.7693%" y="1221" width="0.0274%" height="15" fill="rgb(249,219,21)" fg:x="7761300230" fg:w="44610031"/><text x="5.0193%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt; (38,679,057 samples, 0.02%)</title><rect x="4.7967%" y="1253" width="0.0238%" height="15" fill="rgb(205,209,3)" fg:x="7805910261" fg:w="38679057"/><text x="5.0467%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (143,526,197 samples, 0.09%)</title><rect x="4.8204%" y="1253" width="0.0882%" height="15" fill="rgb(243,44,1)" fg:x="7844589318" fg:w="143526197"/><text x="5.0704%" y="1263.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::start_poll (68,776,004 samples, 0.04%)</title><rect x="4.8664%" y="1237" width="0.0423%" height="15" fill="rgb(206,159,16)" fg:x="7919339511" fg:w="68776004"/><text x="5.1164%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::assert_lifo_enabled_is_correct (117,529,009 samples, 0.07%)</title><rect x="4.9086%" y="1253" width="0.0722%" height="15" fill="rgb(244,77,30)" fg:x="7988115515" fg:w="117529009"/><text x="5.1586%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_from_searching (17,245,298 samples, 0.01%)</title><rect x="5.0148%" y="1221" width="0.0106%" height="15" fill="rgb(218,69,12)" fg:x="8160805112" fg:w="17245298"/><text x="5.2648%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (19,815,590 samples, 0.01%)</title><rect x="5.0690%" y="1093" width="0.0122%" height="15" fill="rgb(212,87,7)" fg:x="8249132288" fg:w="19815590"/><text x="5.3190%" y="1103.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (69,407,112 samples, 0.04%)</title><rect x="5.0396%" y="1157" width="0.0427%" height="15" fill="rgb(245,114,25)" fg:x="8201190324" fg:w="69407112"/><text x="5.2896%" y="1167.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (69,407,111 samples, 0.04%)</title><rect x="5.0396%" y="1141" width="0.0427%" height="15" fill="rgb(210,61,42)" fg:x="8201190325" fg:w="69407111"/><text x="5.2896%" y="1151.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (68,177,760 samples, 0.04%)</title><rect x="5.0403%" y="1125" width="0.0419%" height="15" fill="rgb(211,52,33)" fg:x="8202419676" fg:w="68177760"/><text x="5.2903%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (65,825,227 samples, 0.04%)</title><rect x="5.0418%" y="1109" width="0.0404%" height="15" fill="rgb(234,58,33)" fg:x="8204772209" fg:w="65825227"/><text x="5.2918%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (168,248,138 samples, 0.10%)</title><rect x="4.9809%" y="1253" width="0.1034%" height="15" fill="rgb(220,115,36)" fg:x="8105644524" fg:w="168248138"/><text x="5.2309%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (122,711,391 samples, 0.08%)</title><rect x="5.0088%" y="1237" width="0.0754%" height="15" fill="rgb(243,153,54)" fg:x="8151181271" fg:w="122711391"/><text x="5.2588%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (95,842,252 samples, 0.06%)</title><rect x="5.0254%" y="1221" width="0.0589%" height="15" fill="rgb(251,47,18)" fg:x="8178050410" fg:w="95842252"/><text x="5.2754%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (75,850,004 samples, 0.05%)</title><rect x="5.0376%" y="1205" width="0.0466%" height="15" fill="rgb(242,102,42)" fg:x="8198042658" fg:w="75850004"/><text x="5.2876%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (75,850,004 samples, 0.05%)</title><rect x="5.0376%" y="1189" width="0.0466%" height="15" fill="rgb(234,31,38)" fg:x="8198042658" fg:w="75850004"/><text x="5.2876%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (74,084,420 samples, 0.05%)</title><rect x="5.0387%" y="1173" width="0.0455%" height="15" fill="rgb(221,117,51)" fg:x="8199808242" fg:w="74084420"/><text x="5.2887%" y="1183.50"></text></g><g><title>&lt;core::num::nonzero::NonZero&lt;T&gt; as core::cmp::PartialEq&gt;::eq (44,581,896 samples, 0.03%)</title><rect x="5.2499%" y="1221" width="0.0274%" height="15" fill="rgb(212,20,18)" fg:x="8543428975" fg:w="44581896"/><text x="5.4999%" y="1231.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (109,332,793 samples, 0.07%)</title><rect x="5.2118%" y="1237" width="0.0672%" height="15" fill="rgb(245,133,36)" fg:x="8481515041" fg:w="109332793"/><text x="5.4618%" y="1247.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::header (194,521,704 samples, 0.12%)</title><rect x="5.2790%" y="1237" width="0.1195%" height="15" fill="rgb(212,6,19)" fg:x="8590847834" fg:w="194521704"/><text x="5.5290%" y="1247.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::header (151,360,392 samples, 0.09%)</title><rect x="5.3055%" y="1221" width="0.0930%" height="15" fill="rgb(218,1,36)" fg:x="8634009146" fg:w="151360392"/><text x="5.5555%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::header (75,730,082 samples, 0.05%)</title><rect x="5.3520%" y="1205" width="0.0465%" height="15" fill="rgb(246,84,54)" fg:x="8709639456" fg:w="75730082"/><text x="5.6020%" y="1215.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::assert_owner (1,472,038,480 samples, 0.90%)</title><rect x="5.0842%" y="1253" width="0.9046%" height="15" fill="rgb(242,110,6)" fg:x="8273892662" fg:w="1472038480"/><text x="5.3342%" y="1263.50"></text></g><g><title>tokio::runtime::task::core::Header::get_owner_id (960,561,604 samples, 0.59%)</title><rect x="5.3985%" y="1237" width="0.5903%" height="15" fill="rgb(214,47,5)" fg:x="8785369538" fg:w="960561604"/><text x="5.6485%" y="1247.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (921,226,928 samples, 0.57%)</title><rect x="5.4227%" y="1221" width="0.5661%" height="15" fill="rgb(218,159,25)" fg:x="8824704214" fg:w="921226928"/><text x="5.6727%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::Header::get_owner_id::_{{closure}} (907,060,906 samples, 0.56%)</title><rect x="5.4314%" y="1205" width="0.5574%" height="15" fill="rgb(215,211,28)" fg:x="8838870236" fg:w="907060906"/><text x="5.6814%" y="1215.50"></text></g><g><title>tokio::task::coop::Budget::initial (41,461,358 samples, 0.03%)</title><rect x="6.0193%" y="1237" width="0.0255%" height="15" fill="rgb(238,59,32)" fg:x="9795594028" fg:w="41461358"/><text x="6.2693%" y="1247.50"></text></g><g><title>core::ops::function::FnOnce::call_once (113,343,853 samples, 0.07%)</title><rect x="6.4254%" y="1141" width="0.0696%" height="15" fill="rgb(226,82,3)" fg:x="10456498941" fg:w="113343853"/><text x="6.6754%" y="1151.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (72,835,252 samples, 0.04%)</title><rect x="6.4503%" y="1125" width="0.0448%" height="15" fill="rgb(240,164,32)" fg:x="10497007542" fg:w="72835252"/><text x="6.7003%" y="1135.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (65,025,960 samples, 0.04%)</title><rect x="6.4551%" y="1109" width="0.0400%" height="15" fill="rgb(232,46,7)" fg:x="10504816834" fg:w="65025960"/><text x="6.7051%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::task::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (720,304,875 samples, 0.44%)</title><rect x="6.1261%" y="1221" width="0.4426%" height="15" fill="rgb(229,129,53)" fg:x="9969397995" fg:w="720304875"/><text x="6.3761%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::with_budget::ResetGuard&gt; (616,716,876 samples, 0.38%)</title><rect x="6.1898%" y="1205" width="0.3790%" height="15" fill="rgb(234,188,29)" fg:x="10072985994" fg:w="616716876"/><text x="6.4398%" y="1215.50"></text></g><g><title>&lt;tokio::task::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (514,966,304 samples, 0.32%)</title><rect x="6.2523%" y="1189" width="0.3164%" height="15" fill="rgb(246,141,4)" fg:x="10174736566" fg:w="514966304"/><text x="6.5023%" y="1199.50"></text></g><g><title>tokio::runtime::context::budget (446,881,399 samples, 0.27%)</title><rect x="6.2941%" y="1173" width="0.2746%" height="15" fill="rgb(229,23,39)" fg:x="10242821471" fg:w="446881399"/><text x="6.5441%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (374,901,797 samples, 0.23%)</title><rect x="6.3384%" y="1157" width="0.2304%" height="15" fill="rgb(206,12,3)" fg:x="10314801073" fg:w="374901797"/><text x="6.5884%" y="1167.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (108,325,140 samples, 0.07%)</title><rect x="6.5022%" y="1141" width="0.0666%" height="15" fill="rgb(252,226,20)" fg:x="10581377730" fg:w="108325140"/><text x="6.7522%" y="1151.50"></text></g><g><title>&lt;tokio::task::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop::_{{closure}} (72,308,363 samples, 0.04%)</title><rect x="6.5243%" y="1125" width="0.0444%" height="15" fill="rgb(216,123,35)" fg:x="10617394507" fg:w="72308363"/><text x="6.7743%" y="1135.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (21,661,067 samples, 0.01%)</title><rect x="6.5554%" y="1109" width="0.0133%" height="15" fill="rgb(212,68,40)" fg:x="10668041803" fg:w="21661067"/><text x="6.8054%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (172,364,468 samples, 0.11%)</title><rect x="6.6747%" y="1189" width="0.1059%" height="15" fill="rgb(254,125,32)" fg:x="10862145478" fg:w="172364468"/><text x="6.9247%" y="1199.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (107,794,217 samples, 0.07%)</title><rect x="6.7144%" y="1173" width="0.0662%" height="15" fill="rgb(253,97,22)" fg:x="10926715729" fg:w="107794217"/><text x="6.9644%" y="1183.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (69,294,486 samples, 0.04%)</title><rect x="6.7380%" y="1157" width="0.0426%" height="15" fill="rgb(241,101,14)" fg:x="10965215460" fg:w="69294486"/><text x="6.9880%" y="1167.50"></text></g><g><title>tokio::runtime::context::budget (463,374,417 samples, 0.28%)</title><rect x="6.5687%" y="1221" width="0.2847%" height="15" fill="rgb(238,103,29)" fg:x="10689702870" fg:w="463374417"/><text x="6.8187%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (428,424,019 samples, 0.26%)</title><rect x="6.5902%" y="1205" width="0.2633%" height="15" fill="rgb(233,195,47)" fg:x="10724653268" fg:w="428424019"/><text x="6.8402%" y="1215.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (106,435,933 samples, 0.07%)</title><rect x="6.7881%" y="1189" width="0.0654%" height="15" fill="rgb(246,218,30)" fg:x="11046641354" fg:w="106435933"/><text x="7.0381%" y="1199.50"></text></g><g><title>tokio::task::coop::with_budget::_{{closure}} (86,803,797 samples, 0.05%)</title><rect x="6.8001%" y="1173" width="0.0533%" height="15" fill="rgb(219,145,47)" fg:x="11066273490" fg:w="86803797"/><text x="7.0501%" y="1183.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (18,411,773 samples, 0.01%)</title><rect x="6.8422%" y="1157" width="0.0113%" height="15" fill="rgb(243,12,26)" fg:x="11134665514" fg:w="18411773"/><text x="7.0922%" y="1167.50"></text></g><g><title>&lt;core::cell::RefMut&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (65,201,260 samples, 0.04%)</title><rect x="7.1539%" y="1205" width="0.0401%" height="15" fill="rgb(214,87,16)" fg:x="11641898189" fg:w="65201260"/><text x="7.4039%" y="1215.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (58,404,008 samples, 0.04%)</title><rect x="7.1580%" y="1189" width="0.0359%" height="15" fill="rgb(208,99,42)" fg:x="11648695441" fg:w="58404008"/><text x="7.4080%" y="1199.50"></text></g><g><title>core::cell::BorrowRefMut::new (83,920,319 samples, 0.05%)</title><rect x="7.2637%" y="1173" width="0.0516%" height="15" fill="rgb(253,99,2)" fg:x="11820687029" fg:w="83920319"/><text x="7.5137%" y="1183.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (240,260,940 samples, 0.15%)</title><rect x="7.1994%" y="1205" width="0.1476%" height="15" fill="rgb(220,168,23)" fg:x="11715976337" fg:w="240260940"/><text x="7.4494%" y="1215.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (186,801,359 samples, 0.11%)</title><rect x="7.2322%" y="1189" width="0.1148%" height="15" fill="rgb(242,38,24)" fg:x="11769435918" fg:w="186801359"/><text x="7.4822%" y="1199.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (51,629,929 samples, 0.03%)</title><rect x="7.3153%" y="1173" width="0.0317%" height="15" fill="rgb(225,182,9)" fg:x="11904607348" fg:w="51629929"/><text x="7.5653%" y="1183.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked::precondition_check (37,808,800 samples, 0.02%)</title><rect x="7.3238%" y="1157" width="0.0232%" height="15" fill="rgb(243,178,37)" fg:x="11918428477" fg:w="37808800"/><text x="7.5738%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (194,553,489 samples, 0.12%)</title><rect x="7.3470%" y="1205" width="0.1196%" height="15" fill="rgb(232,139,19)" fg:x="11956237277" fg:w="194553489"/><text x="7.5970%" y="1215.50"></text></g><g><title>core::mem::replace (116,989,861 samples, 0.07%)</title><rect x="7.3947%" y="1189" width="0.0719%" height="15" fill="rgb(225,201,24)" fg:x="12033800905" fg:w="116989861"/><text x="7.6447%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (123,249,931 samples, 0.08%)</title><rect x="7.4666%" y="1205" width="0.0757%" height="15" fill="rgb(221,47,46)" fg:x="12150790766" fg:w="123249931"/><text x="7.7166%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (83,048,560 samples, 0.05%)</title><rect x="7.4913%" y="1189" width="0.0510%" height="15" fill="rgb(249,23,13)" fg:x="12190992137" fg:w="83048560"/><text x="7.7413%" y="1199.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (35,506,916 samples, 0.02%)</title><rect x="7.5205%" y="1173" width="0.0218%" height="15" fill="rgb(219,9,5)" fg:x="12238533781" fg:w="35506916"/><text x="7.7705%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_poll (112,303,130 samples, 0.07%)</title><rect x="7.5423%" y="1205" width="0.0690%" height="15" fill="rgb(254,171,16)" fg:x="12274040697" fg:w="112303130"/><text x="7.7923%" y="1215.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::end_poll (64,547,931 samples, 0.04%)</title><rect x="7.5717%" y="1189" width="0.0397%" height="15" fill="rgb(230,171,20)" fg:x="12321795896" fg:w="64547931"/><text x="7.8217%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (216,313,711 samples, 0.13%)</title><rect x="7.6113%" y="1205" width="0.1329%" height="15" fill="rgb(210,71,41)" fg:x="12386343827" fg:w="216313711"/><text x="7.8613%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (91,647,708 samples, 0.06%)</title><rect x="7.6879%" y="1189" width="0.0563%" height="15" fill="rgb(206,173,20)" fg:x="12511009830" fg:w="91647708"/><text x="7.9379%" y="1199.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (32,148,219 samples, 0.02%)</title><rect x="7.7245%" y="1173" width="0.0198%" height="15" fill="rgb(233,88,34)" fg:x="12570509319" fg:w="32148219"/><text x="7.9745%" y="1183.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (32,148,219 samples, 0.02%)</title><rect x="7.7245%" y="1157" width="0.0198%" height="15" fill="rgb(223,209,46)" fg:x="12570509319" fg:w="32148219"/><text x="7.9745%" y="1167.50"></text></g><g><title>core::mem::forget (39,984,056 samples, 0.02%)</title><rect x="7.8717%" y="1189" width="0.0246%" height="15" fill="rgb(250,43,18)" fg:x="12810006337" fg:w="39984056"/><text x="8.1217%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::from_raw (89,557,219 samples, 0.06%)</title><rect x="8.1078%" y="1157" width="0.0550%" height="15" fill="rgb(208,13,10)" fg:x="13194265482" fg:w="89557219"/><text x="8.3578%" y="1167.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (43,270,587 samples, 0.03%)</title><rect x="8.1362%" y="1141" width="0.0266%" height="15" fill="rgb(212,200,36)" fg:x="13240552114" fg:w="43270587"/><text x="8.3862%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (21,948,806 samples, 0.01%)</title><rect x="8.2878%" y="1125" width="0.0135%" height="15" fill="rgb(225,90,30)" fg:x="13487190316" fg:w="21948806"/><text x="8.5378%" y="1135.50"></text></g><g><title>std::panicking::try (19,687,520 samples, 0.01%)</title><rect x="8.2892%" y="1109" width="0.0121%" height="15" fill="rgb(236,182,39)" fg:x="13489451602" fg:w="19687520"/><text x="8.5392%" y="1119.50"></text></g><g><title>__rust_try (19,687,520 samples, 0.01%)</title><rect x="8.2892%" y="1093" width="0.0121%" height="15" fill="rgb(212,144,35)" fg:x="13489451602" fg:w="19687520"/><text x="8.5392%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (19,687,520 samples, 0.01%)</title><rect x="8.2892%" y="1077" width="0.0121%" height="15" fill="rgb(228,63,44)" fg:x="13489451602" fg:w="19687520"/><text x="8.5392%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19,687,520 samples, 0.01%)</title><rect x="8.2892%" y="1061" width="0.0121%" height="15" fill="rgb(228,109,6)" fg:x="13489451602" fg:w="19687520"/><text x="8.5392%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (19,687,520 samples, 0.01%)</title><rect x="8.2892%" y="1045" width="0.0121%" height="15" fill="rgb(238,117,24)" fg:x="13489451602" fg:w="19687520"/><text x="8.5392%" y="1055.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (18,464,895 samples, 0.01%)</title><rect x="8.3148%" y="1061" width="0.0113%" height="15" fill="rgb(242,26,26)" fg:x="13531108140" fg:w="18464895"/><text x="8.5648%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (47,117,697 samples, 0.03%)</title><rect x="8.3026%" y="1109" width="0.0290%" height="15" fill="rgb(221,92,48)" fg:x="13511232795" fg:w="47117697"/><text x="8.5526%" y="1119.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (47,117,697 samples, 0.03%)</title><rect x="8.3026%" y="1093" width="0.0290%" height="15" fill="rgb(209,209,32)" fg:x="13511232795" fg:w="47117697"/><text x="8.5526%" y="1103.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (42,298,418 samples, 0.03%)</title><rect x="8.3055%" y="1077" width="0.0260%" height="15" fill="rgb(221,70,22)" fg:x="13516052074" fg:w="42298418"/><text x="8.5555%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (51,236,841 samples, 0.03%)</title><rect x="8.3013%" y="1125" width="0.0315%" height="15" fill="rgb(248,145,5)" fg:x="13509139122" fg:w="51236841"/><text x="8.5513%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (89,717,128 samples, 0.06%)</title><rect x="8.2855%" y="1141" width="0.0551%" height="15" fill="rgb(226,116,26)" fg:x="13483543739" fg:w="89717128"/><text x="8.5355%" y="1151.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;T&gt; as core::cmp::PartialEq&gt;::eq (93,529,834 samples, 0.06%)</title><rect x="8.5853%" y="1125" width="0.0575%" height="15" fill="rgb(244,5,17)" fg:x="13971325703" fg:w="93529834"/><text x="8.8353%" y="1135.50"></text></g><g><title>&lt;tokio::runtime::task::waker::WakerRef&lt;S&gt; as core::ops::deref::Deref&gt;::deref (42,741,637 samples, 0.03%)</title><rect x="8.6428%" y="1125" width="0.0263%" height="15" fill="rgb(252,159,33)" fg:x="14064855537" fg:w="42741637"/><text x="8.8928%" y="1135.50"></text></g><g><title>core::task::wake::Context::from_waker (29,179,657 samples, 0.02%)</title><rect x="8.6690%" y="1125" width="0.0179%" height="15" fill="rgb(206,71,0)" fg:x="14107597174" fg:w="29179657"/><text x="8.9190%" y="1135.50"></text></g><g><title>core::task::wake::ContextBuilder::build (23,875,460 samples, 0.01%)</title><rect x="8.6723%" y="1109" width="0.0147%" height="15" fill="rgb(233,118,54)" fg:x="14112901371" fg:w="23875460"/><text x="8.9223%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::core (60,792,885 samples, 0.04%)</title><rect x="8.6869%" y="1125" width="0.0374%" height="15" fill="rgb(234,83,48)" fg:x="14136776831" fg:w="60792885"/><text x="8.9369%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::header_ptr (17,245,419 samples, 0.01%)</title><rect x="8.7243%" y="1125" width="0.0106%" height="15" fill="rgb(228,3,54)" fg:x="14197569716" fg:w="17245419"/><text x="8.9743%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner::transition_result_to_poll_future (207,137,199 samples, 0.13%)</title><rect x="8.7349%" y="1125" width="0.1273%" height="15" fill="rgb(226,155,13)" fg:x="14214815135" fg:w="207137199"/><text x="8.9849%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::state (365,970,678 samples, 0.22%)</title><rect x="8.8622%" y="1125" width="0.2249%" height="15" fill="rgb(241,28,37)" fg:x="14421952334" fg:w="365970678"/><text x="9.1122%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::header (287,634,588 samples, 0.18%)</title><rect x="8.9103%" y="1109" width="0.1767%" height="15" fill="rgb(233,93,10)" fg:x="14500288424" fg:w="287634588"/><text x="9.1603%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::header_ptr (132,999,163 samples, 0.08%)</title><rect x="9.0053%" y="1093" width="0.0817%" height="15" fill="rgb(225,113,19)" fg:x="14654923849" fg:w="132999163"/><text x="9.2553%" y="1103.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (36,364,462 samples, 0.02%)</title><rect x="9.0647%" y="1077" width="0.0223%" height="15" fill="rgb(241,2,18)" fg:x="14751558550" fg:w="36364462"/><text x="9.3147%" y="1087.50"></text></g><g><title>__memmove_avx_unaligned (140,282,665 samples, 0.09%)</title><rect x="9.2850%" y="1109" width="0.0862%" height="15" fill="rgb(228,207,21)" fg:x="15110094838" fg:w="140282665"/><text x="9.5350%" y="1119.50"></text></g><g><title>__memmove_avx_unaligned (21,090,995 samples, 0.01%)</title><rect x="9.5084%" y="1077" width="0.0130%" height="15" fill="rgb(213,211,35)" fg:x="15473585386" fg:w="21090995"/><text x="9.7584%" y="1087.50"></text></g><g><title>__memmove_avx_unaligned (62,506,064 samples, 0.04%)</title><rect x="9.8100%" y="1029" width="0.0384%" height="15" fill="rgb(209,83,10)" fg:x="15964305142" fg:w="62506064"/><text x="10.0600%" y="1039.50"></text></g><g><title>core::mem::forget (67,305,154 samples, 0.04%)</title><rect x="9.9756%" y="1013" width="0.0414%" height="15" fill="rgb(209,164,1)" fg:x="16233949671" fg:w="67305154"/><text x="10.2256%" y="1023.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::is_ready (42,917,829 samples, 0.03%)</title><rect x="10.0633%" y="997" width="0.0264%" height="15" fill="rgb(213,184,43)" fg:x="16376636945" fg:w="42917829"/><text x="10.3133%" y="1007.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18,602,945 samples, 0.01%)</title><rect x="10.4190%" y="837" width="0.0114%" height="15" fill="rgb(231,61,34)" fg:x="16955367132" fg:w="18602945"/><text x="10.6690%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;hyper::upgrade::Upgraded,hyper::error::Error&gt;&gt;&gt;&gt;&gt; (48,359,718 samples, 0.03%)</title><rect x="10.4018%" y="917" width="0.0297%" height="15" fill="rgb(235,75,3)" fg:x="16927445550" fg:w="48359718"/><text x="10.6518%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;hyper::upgrade::Upgraded,hyper::error::Error&gt;&gt;&gt;&gt; (45,725,376 samples, 0.03%)</title><rect x="10.4034%" y="901" width="0.0281%" height="15" fill="rgb(220,106,47)" fg:x="16930079892" fg:w="45725376"/><text x="10.6534%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43,881,973 samples, 0.03%)</title><rect x="10.4045%" y="885" width="0.0270%" height="15" fill="rgb(210,196,33)" fg:x="16931923295" fg:w="43881973"/><text x="10.6545%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (43,881,973 samples, 0.03%)</title><rect x="10.4045%" y="869" width="0.0270%" height="15" fill="rgb(229,154,42)" fg:x="16931923295" fg:w="43881973"/><text x="10.6545%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;hyper::upgrade::Upgraded,hyper::error::Error&gt;&gt;&gt; (24,624,316 samples, 0.02%)</title><rect x="10.4164%" y="853" width="0.0151%" height="15" fill="rgb(228,114,26)" fg:x="16951180952" fg:w="24624316"/><text x="10.6664%" y="863.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (75,488,910 samples, 0.05%)</title><rect x="10.4008%" y="933" width="0.0464%" height="15" fill="rgb(208,144,1)" fg:x="16925820892" fg:w="75488910"/><text x="10.6508%" y="943.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (25,504,534 samples, 0.02%)</title><rect x="10.4315%" y="917" width="0.0157%" height="15" fill="rgb(239,112,37)" fg:x="16975805268" fg:w="25504534"/><text x="10.6815%" y="927.50"></text></g><g><title>&lt;hyper::upgrade::OnUpgrade as core::future::future::Future&gt;::poll (119,604,401 samples, 0.07%)</title><rect x="10.3871%" y="949" width="0.0735%" height="15" fill="rgb(210,96,50)" fg:x="16903491006" fg:w="119604401"/><text x="10.6371%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::upgrade::OnUpgrade&gt; (17,188,240 samples, 0.01%)</title><rect x="10.4634%" y="949" width="0.0106%" height="15" fill="rgb(222,178,2)" fg:x="17027723846" fg:w="17188240"/><text x="10.7134%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;tokio::sync::oneshot::Receiver&lt;core::result::Result&lt;hyper::upgrade::Upgraded,hyper::error::Error&gt;&gt;&gt;&gt;&gt;&gt; (17,188,240 samples, 0.01%)</title><rect x="10.4634%" y="933" width="0.0106%" height="15" fill="rgb(226,74,18)" fg:x="17027723846" fg:w="17188240"/><text x="10.7134%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (40,774,441 samples, 0.03%)</title><rect x="10.4962%" y="821" width="0.0251%" height="15" fill="rgb(225,67,54)" fg:x="17081087432" fg:w="40774441"/><text x="10.7462%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (40,774,441 samples, 0.03%)</title><rect x="10.4962%" y="805" width="0.0251%" height="15" fill="rgb(251,92,32)" fg:x="17081087432" fg:w="40774441"/><text x="10.7462%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (40,774,441 samples, 0.03%)</title><rect x="10.4962%" y="789" width="0.0251%" height="15" fill="rgb(228,149,22)" fg:x="17081087432" fg:w="40774441"/><text x="10.7462%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (40,774,441 samples, 0.03%)</title><rect x="10.4962%" y="773" width="0.0251%" height="15" fill="rgb(243,54,13)" fg:x="17081087432" fg:w="40774441"/><text x="10.7462%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (38,108,121 samples, 0.02%)</title><rect x="10.4978%" y="757" width="0.0234%" height="15" fill="rgb(243,180,28)" fg:x="17083753752" fg:w="38108121"/><text x="10.7478%" y="767.50"></text></g><g><title>malloc (36,137,846 samples, 0.02%)</title><rect x="10.4991%" y="741" width="0.0222%" height="15" fill="rgb(208,167,24)" fg:x="17085724027" fg:w="36137846"/><text x="10.7491%" y="751.50"></text></g><g><title>_int_malloc (36,137,539 samples, 0.02%)</title><rect x="10.4991%" y="725" width="0.0222%" height="15" fill="rgb(245,73,45)" fg:x="17085724334" fg:w="36137539"/><text x="10.7491%" y="735.50"></text></g><g><title>sysmalloc (29,519,516 samples, 0.02%)</title><rect x="10.5031%" y="709" width="0.0181%" height="15" fill="rgb(237,203,48)" fg:x="17092342357" fg:w="29519516"/><text x="10.7531%" y="719.50"></text></g><g><title>sysmalloc_mmap.isra.0 (24,226,784 samples, 0.01%)</title><rect x="10.5064%" y="693" width="0.0149%" height="15" fill="rgb(211,197,16)" fg:x="17097635089" fg:w="24226784"/><text x="10.7564%" y="703.50"></text></g><g><title>tokio_tungstenite::WebSocketStream&lt;S&gt;::from_raw_socket::_{{closure}}::_{{closure}} (77,518,053 samples, 0.05%)</title><rect x="10.4851%" y="901" width="0.0476%" height="15" fill="rgb(243,99,51)" fg:x="17063047785" fg:w="77518053"/><text x="10.7351%" y="911.50"></text></g><g><title>tungstenite::protocol::WebSocket&lt;Stream&gt;::from_raw_socket (72,593,053 samples, 0.04%)</title><rect x="10.4881%" y="885" width="0.0446%" height="15" fill="rgb(215,123,29)" fg:x="17067972785" fg:w="72593053"/><text x="10.7381%" y="895.50"></text></g><g><title>tungstenite::protocol::WebSocketContext::new (70,411,166 samples, 0.04%)</title><rect x="10.4895%" y="869" width="0.0433%" height="15" fill="rgb(239,186,37)" fg:x="17070154672" fg:w="70411166"/><text x="10.7395%" y="879.50"></text></g><g><title>tungstenite::protocol::frame::FrameCodec::new (64,067,899 samples, 0.04%)</title><rect x="10.4934%" y="853" width="0.0394%" height="15" fill="rgb(252,136,39)" fg:x="17076497939" fg:w="64067899"/><text x="10.7434%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (59,478,406 samples, 0.04%)</title><rect x="10.4962%" y="837" width="0.0365%" height="15" fill="rgb(223,213,32)" fg:x="17081087432" fg:w="59478406"/><text x="10.7462%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (18,703,965 samples, 0.01%)</title><rect x="10.5213%" y="821" width="0.0115%" height="15" fill="rgb(233,115,5)" fg:x="17121861873" fg:w="18703965"/><text x="10.7713%" y="831.50"></text></g><g><title>&lt;tokio_tungstenite::handshake::SkippedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (120,502,209 samples, 0.07%)</title><rect x="10.4802%" y="917" width="0.0740%" height="15" fill="rgb(207,226,44)" fg:x="17055033573" fg:w="120502209"/><text x="10.7302%" y="927.50"></text></g><g><title>tokio_tungstenite::compat::AllowStd&lt;S&gt;::new (34,969,944 samples, 0.02%)</title><rect x="10.5328%" y="901" width="0.0215%" height="15" fill="rgb(208,126,0)" fg:x="17140565838" fg:w="34969944"/><text x="10.7828%" y="911.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (16,326,985 samples, 0.01%)</title><rect x="10.5442%" y="885" width="0.0100%" height="15" fill="rgb(244,66,21)" fg:x="17159208797" fg:w="16326985"/><text x="10.7942%" y="895.50"></text></g><g><title>tokio_tungstenite::WebSocketStream&lt;S&gt;::from_raw_socket::_{{closure}} (133,464,284 samples, 0.08%)</title><rect x="10.4748%" y="949" width="0.0820%" height="15" fill="rgb(222,97,12)" fg:x="17046200050" fg:w="133464284"/><text x="10.7248%" y="959.50"></text></g><g><title>tokio_tungstenite::handshake::without_handshake::_{{closure}} (132,361,516 samples, 0.08%)</title><rect x="10.4754%" y="933" width="0.0813%" height="15" fill="rgb(219,213,19)" fg:x="17047302818" fg:w="132361516"/><text x="10.7254%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::set_join_waker (18,301,624 samples, 0.01%)</title><rect x="10.5900%" y="805" width="0.0112%" height="15" fill="rgb(252,169,30)" fg:x="17233786514" fg:w="18301624"/><text x="10.8400%" y="815.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (38,049,912 samples, 0.02%)</title><rect x="10.5794%" y="869" width="0.0234%" height="15" fill="rgb(206,32,51)" fg:x="17216395519" fg:w="38049912"/><text x="10.8294%" y="879.50"></text></g><g><title>tokio::runtime::task::raw::try_read_output (38,049,912 samples, 0.02%)</title><rect x="10.5794%" y="853" width="0.0234%" height="15" fill="rgb(250,172,42)" fg:x="17216395519" fg:w="38049912"/><text x="10.8294%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (33,079,442 samples, 0.02%)</title><rect x="10.5824%" y="837" width="0.0203%" height="15" fill="rgb(209,34,43)" fg:x="17221365989" fg:w="33079442"/><text x="10.8324%" y="847.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (22,640,978 samples, 0.01%)</title><rect x="10.5888%" y="821" width="0.0139%" height="15" fill="rgb(223,11,35)" fg:x="17231804453" fg:w="22640978"/><text x="10.8388%" y="831.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (63,076,383 samples, 0.04%)</title><rect x="10.5704%" y="901" width="0.0388%" height="15" fill="rgb(251,219,26)" fg:x="17201896313" fg:w="63076383"/><text x="10.8204%" y="911.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (60,749,553 samples, 0.04%)</title><rect x="10.5719%" y="885" width="0.0373%" height="15" fill="rgb(231,119,3)" fg:x="17204223143" fg:w="60749553"/><text x="10.8219%" y="895.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (77,490,824 samples, 0.05%)</title><rect x="10.5676%" y="933" width="0.0476%" height="15" fill="rgb(216,97,11)" fg:x="17197317379" fg:w="77490824"/><text x="10.8176%" y="943.50"></text></g><g><title>update_countdown::routes::websocket::_{{closure}}::_{{closure}} (77,490,824 samples, 0.05%)</title><rect x="10.5676%" y="917" width="0.0476%" height="15" fill="rgb(223,59,9)" fg:x="17197317379" fg:w="77490824"/><text x="10.8176%" y="927.50"></text></g><g><title>chrono::naive::date::NaiveDate::num_days_from_ce (19,082,256 samples, 0.01%)</title><rect x="10.6330%" y="917" width="0.0117%" height="15" fill="rgb(233,93,31)" fg:x="17303682202" fg:w="19082256"/><text x="10.8830%" y="927.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::timestamp (31,527,071 samples, 0.02%)</title><rect x="10.6319%" y="933" width="0.0194%" height="15" fill="rgb(239,81,33)" fg:x="17301896587" fg:w="31527071"/><text x="10.8819%" y="943.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (21,926,913 samples, 0.01%)</title><rect x="10.6694%" y="901" width="0.0135%" height="15" fill="rgb(213,120,34)" fg:x="17362861804" fg:w="21926913"/><text x="10.9194%" y="911.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (17,767,796 samples, 0.01%)</title><rect x="10.6719%" y="885" width="0.0109%" height="15" fill="rgb(243,49,53)" fg:x="17367020921" fg:w="17767796"/><text x="10.9219%" y="895.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (19,283,613 samples, 0.01%)</title><rect x="10.6925%" y="885" width="0.0118%" height="15" fill="rgb(247,216,33)" fg:x="17400462772" fg:w="19283613"/><text x="10.9425%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (19,283,613 samples, 0.01%)</title><rect x="10.6925%" y="869" width="0.0118%" height="15" fill="rgb(226,26,14)" fg:x="17400462772" fg:w="19283613"/><text x="10.9425%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (19,283,613 samples, 0.01%)</title><rect x="10.6925%" y="853" width="0.0118%" height="15" fill="rgb(215,49,53)" fg:x="17400462772" fg:w="19283613"/><text x="10.9425%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16,978,181 samples, 0.01%)</title><rect x="10.7116%" y="805" width="0.0104%" height="15" fill="rgb(245,162,40)" fg:x="17431639935" fg:w="16978181"/><text x="10.9616%" y="815.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_u64 (62,870,391 samples, 0.04%)</title><rect x="10.6896%" y="901" width="0.0386%" height="15" fill="rgb(229,68,17)" fg:x="17395770812" fg:w="62870391"/><text x="10.9396%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (36,240,510 samples, 0.02%)</title><rect x="10.7059%" y="885" width="0.0223%" height="15" fill="rgb(213,182,10)" fg:x="17422400693" fg:w="36240510"/><text x="10.9559%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (36,240,510 samples, 0.02%)</title><rect x="10.7059%" y="869" width="0.0223%" height="15" fill="rgb(245,125,30)" fg:x="17422400693" fg:w="36240510"/><text x="10.9559%" y="879.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (36,240,510 samples, 0.02%)</title><rect x="10.7059%" y="853" width="0.0223%" height="15" fill="rgb(232,202,2)" fg:x="17422400693" fg:w="36240510"/><text x="10.9559%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (32,844,096 samples, 0.02%)</title><rect x="10.7080%" y="837" width="0.0202%" height="15" fill="rgb(237,140,51)" fg:x="17425797107" fg:w="32844096"/><text x="10.9580%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (32,844,096 samples, 0.02%)</title><rect x="10.7080%" y="821" width="0.0202%" height="15" fill="rgb(236,157,25)" fg:x="17425797107" fg:w="32844096"/><text x="10.9580%" y="831.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get::_{{closure}} (26,533,193 samples, 0.02%)</title><rect x="10.7499%" y="853" width="0.0163%" height="15" fill="rgb(219,209,0)" fg:x="17493914178" fg:w="26533193"/><text x="10.9999%" y="863.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::_{{closure}} (36,667,322 samples, 0.02%)</title><rect x="10.7484%" y="869" width="0.0225%" height="15" fill="rgb(240,116,54)" fg:x="17491415351" fg:w="36667322"/><text x="10.9984%" y="879.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (23,199,869 samples, 0.01%)</title><rect x="10.7771%" y="869" width="0.0143%" height="15" fill="rgb(216,10,36)" fg:x="17538231112" fg:w="23199869"/><text x="11.0271%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (20,290,852 samples, 0.01%)</title><rect x="10.7789%" y="853" width="0.0125%" height="15" fill="rgb(222,72,44)" fg:x="17541140129" fg:w="20290852"/><text x="11.0289%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18,350,562 samples, 0.01%)</title><rect x="10.7801%" y="837" width="0.0113%" height="15" fill="rgb(232,159,9)" fg:x="17543080419" fg:w="18350562"/><text x="11.0301%" y="847.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (205,117,405 samples, 0.13%)</title><rect x="10.6667%" y="933" width="0.1260%" height="15" fill="rgb(210,39,32)" fg:x="17358588422" fg:w="205117405"/><text x="10.9167%" y="943.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (205,117,405 samples, 0.13%)</title><rect x="10.6667%" y="917" width="0.1260%" height="15" fill="rgb(216,194,45)" fg:x="17358588422" fg:w="205117405"/><text x="10.9167%" y="927.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (96,698,396 samples, 0.06%)</title><rect x="10.7334%" y="901" width="0.0594%" height="15" fill="rgb(218,18,35)" fg:x="17467007431" fg:w="96698396"/><text x="10.9834%" y="911.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::find_inner (88,847,742 samples, 0.05%)</title><rect x="10.7382%" y="885" width="0.0546%" height="15" fill="rgb(207,83,51)" fg:x="17474858085" fg:w="88847742"/><text x="10.9882%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (19,251,938 samples, 0.01%)</title><rect x="10.8002%" y="885" width="0.0118%" height="15" fill="rgb(225,63,43)" fg:x="17575732876" fg:w="19251938"/><text x="11.0502%" y="895.50"></text></g><g><title>futures_util::stream::stream::StreamExt::split (33,674,205 samples, 0.02%)</title><rect x="10.7928%" y="933" width="0.0207%" height="15" fill="rgb(207,57,36)" fg:x="17563705827" fg:w="33674205"/><text x="11.0428%" y="943.50"></text></g><g><title>futures_util::stream::stream::split::split (31,555,579 samples, 0.02%)</title><rect x="10.7941%" y="917" width="0.0194%" height="15" fill="rgb(216,99,33)" fg:x="17565824453" fg:w="31555579"/><text x="11.0441%" y="927.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::new (29,732,113 samples, 0.02%)</title><rect x="10.7952%" y="901" width="0.0183%" height="15" fill="rgb(225,42,16)" fg:x="17567647919" fg:w="29732113"/><text x="11.0452%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (20,343,031 samples, 0.01%)</title><rect x="10.8447%" y="853" width="0.0125%" height="15" fill="rgb(220,201,45)" fg:x="17648221087" fg:w="20343031"/><text x="11.0947%" y="863.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (18,624,100 samples, 0.01%)</title><rect x="10.8458%" y="837" width="0.0114%" height="15" fill="rgb(225,33,4)" fg:x="17649940018" fg:w="18624100"/><text x="11.0958%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (18,624,100 samples, 0.01%)</title><rect x="10.8458%" y="821" width="0.0114%" height="15" fill="rgb(224,33,50)" fg:x="17649940018" fg:w="18624100"/><text x="11.0958%" y="831.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (18,624,100 samples, 0.01%)</title><rect x="10.8458%" y="805" width="0.0114%" height="15" fill="rgb(246,198,51)" fg:x="17649940018" fg:w="18624100"/><text x="11.0958%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact (25,095,432 samples, 0.02%)</title><rect x="10.8572%" y="853" width="0.0154%" height="15" fill="rgb(205,22,4)" fg:x="17668564118" fg:w="25095432"/><text x="11.1072%" y="863.50"></text></g><g><title>&lt;rand::rngs::xoshiro256plusplus::Xoshiro256PlusPlus as rand_core::SeedableRng&gt;::from_seed (87,975,552 samples, 0.05%)</title><rect x="10.8214%" y="885" width="0.0541%" height="15" fill="rgb(206,3,8)" fg:x="17610269418" fg:w="87975552"/><text x="11.0714%" y="895.50"></text></g><g><title>rand_core::le::read_u64_into (77,558,464 samples, 0.05%)</title><rect x="10.8278%" y="869" width="0.0477%" height="15" fill="rgb(251,23,15)" fg:x="17620686506" fg:w="77558464"/><text x="11.0778%" y="879.50"></text></g><g><title>&lt;rand::rngs::small::SmallRng as rand_core::SeedableRng&gt;::from_seed (101,832,101 samples, 0.06%)</title><rect x="10.8147%" y="901" width="0.0626%" height="15" fill="rgb(252,88,28)" fg:x="17599423732" fg:w="101832101"/><text x="11.0647%" y="911.50"></text></g><g><title>getrandom::fill_uninit (44,773,029 samples, 0.03%)</title><rect x="10.8847%" y="885" width="0.0275%" height="15" fill="rgb(212,127,14)" fg:x="17713328545" fg:w="44773029"/><text x="11.1347%" y="895.50"></text></g><g><title>getrandom::backends::linux_android_with_fallback::fill_inner (37,029,072 samples, 0.02%)</title><rect x="10.8895%" y="869" width="0.0228%" height="15" fill="rgb(247,145,37)" fg:x="17721072502" fg:w="37029072"/><text x="11.1395%" y="879.50"></text></g><g><title>rand_core::SeedableRng::from_os_rng (170,678,918 samples, 0.10%)</title><rect x="10.8135%" y="933" width="0.1049%" height="15" fill="rgb(209,117,53)" fg:x="17597380032" fg:w="170678918"/><text x="11.0635%" y="943.50"></text></g><g><title>rand_core::SeedableRng::try_from_os_rng (170,678,918 samples, 0.10%)</title><rect x="10.8135%" y="917" width="0.1049%" height="15" fill="rgb(212,90,42)" fg:x="17597380032" fg:w="170678918"/><text x="11.0635%" y="927.50"></text></g><g><title>getrandom::fill (54,730,405 samples, 0.03%)</title><rect x="10.8847%" y="901" width="0.0336%" height="15" fill="rgb(218,164,37)" fg:x="17713328545" fg:w="54730405"/><text x="11.1347%" y="911.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (17,878,039 samples, 0.01%)</title><rect x="10.9192%" y="837" width="0.0110%" height="15" fill="rgb(246,65,34)" fg:x="17769457870" fg:w="17878039"/><text x="11.1692%" y="847.50"></text></g><g><title>tokio::runtime::task::raw::schedule (17,878,039 samples, 0.01%)</title><rect x="10.9192%" y="821" width="0.0110%" height="15" fill="rgb(231,100,33)" fg:x="17769457870" fg:w="17878039"/><text x="11.1692%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (17,878,039 samples, 0.01%)</title><rect x="10.9192%" y="805" width="0.0110%" height="15" fill="rgb(228,126,14)" fg:x="17769457870" fg:w="17878039"/><text x="11.1692%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (17,878,039 samples, 0.01%)</title><rect x="10.9192%" y="789" width="0.0110%" height="15" fill="rgb(215,173,21)" fg:x="17769457870" fg:w="17878039"/><text x="11.1692%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (17,878,039 samples, 0.01%)</title><rect x="10.9192%" y="773" width="0.0110%" height="15" fill="rgb(210,6,40)" fg:x="17769457870" fg:w="17878039"/><text x="11.1692%" y="783.50"></text></g><g><title>tokio::runtime::context::with_scheduler (17,878,039 samples, 0.01%)</title><rect x="10.9192%" y="757" width="0.0110%" height="15" fill="rgb(212,48,18)" fg:x="17769457870" fg:w="17878039"/><text x="11.1692%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16,320,966 samples, 0.01%)</title><rect x="10.9202%" y="741" width="0.0100%" height="15" fill="rgb(230,214,11)" fg:x="17771014943" fg:w="16320966"/><text x="11.1702%" y="751.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (16,320,966 samples, 0.01%)</title><rect x="10.9202%" y="725" width="0.0100%" height="15" fill="rgb(254,105,39)" fg:x="17771014943" fg:w="16320966"/><text x="11.1702%" y="735.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (16,320,966 samples, 0.01%)</title><rect x="10.9202%" y="709" width="0.0100%" height="15" fill="rgb(245,158,5)" fg:x="17771014943" fg:w="16320966"/><text x="11.1702%" y="719.50"></text></g><g><title>tokio::sync::broadcast::Sender&lt;T&gt;::send (22,133,058 samples, 0.01%)</title><rect x="10.9183%" y="933" width="0.0136%" height="15" fill="rgb(249,208,11)" fg:x="17768058950" fg:w="22133058"/><text x="11.1683%" y="943.50"></text></g><g><title>tokio::sync::broadcast::Shared&lt;T&gt;::notify_rx (22,133,058 samples, 0.01%)</title><rect x="10.9183%" y="917" width="0.0136%" height="15" fill="rgb(210,39,28)" fg:x="17768058950" fg:w="22133058"/><text x="11.1683%" y="927.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (20,734,138 samples, 0.01%)</title><rect x="10.9192%" y="901" width="0.0127%" height="15" fill="rgb(211,56,53)" fg:x="17769457870" fg:w="20734138"/><text x="11.1692%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (20,734,138 samples, 0.01%)</title><rect x="10.9192%" y="885" width="0.0127%" height="15" fill="rgb(226,201,30)" fg:x="17769457870" fg:w="20734138"/><text x="11.1692%" y="895.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (20,734,138 samples, 0.01%)</title><rect x="10.9192%" y="869" width="0.0127%" height="15" fill="rgb(239,101,34)" fg:x="17769457870" fg:w="20734138"/><text x="11.1692%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (20,734,138 samples, 0.01%)</title><rect x="10.9192%" y="853" width="0.0127%" height="15" fill="rgb(226,209,5)" fg:x="17769457870" fg:w="20734138"/><text x="11.1692%" y="863.50"></text></g><g><title>tokio::sync::broadcast::Sender&lt;T&gt;::subscribe (29,862,959 samples, 0.02%)</title><rect x="10.9319%" y="933" width="0.0184%" height="15" fill="rgb(250,105,47)" fg:x="17790192008" fg:w="29862959"/><text x="11.1819%" y="943.50"></text></g><g><title>tokio::sync::broadcast::new_receiver (22,829,606 samples, 0.01%)</title><rect x="10.9363%" y="917" width="0.0140%" height="15" fill="rgb(230,72,3)" fg:x="17797225361" fg:w="22829606"/><text x="11.1863%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (25,845,005 samples, 0.02%)</title><rect x="11.0136%" y="613" width="0.0159%" height="15" fill="rgb(232,218,39)" fg:x="17923105086" fg:w="25845005"/><text x="11.2636%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (45,339,876 samples, 0.03%)</title><rect x="11.0075%" y="773" width="0.0279%" height="15" fill="rgb(248,166,6)" fg:x="17913204719" fg:w="45339876"/><text x="11.2575%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (43,634,954 samples, 0.03%)</title><rect x="11.0086%" y="757" width="0.0268%" height="15" fill="rgb(247,89,20)" fg:x="17914909641" fg:w="43634954"/><text x="11.2586%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (43,634,954 samples, 0.03%)</title><rect x="11.0086%" y="741" width="0.0268%" height="15" fill="rgb(248,130,54)" fg:x="17914909641" fg:w="43634954"/><text x="11.2586%" y="751.50"></text></g><g><title>tokio::runtime::context::with_scheduler (43,634,954 samples, 0.03%)</title><rect x="11.0086%" y="725" width="0.0268%" height="15" fill="rgb(234,196,4)" fg:x="17914909641" fg:w="43634954"/><text x="11.2586%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (43,634,954 samples, 0.03%)</title><rect x="11.0086%" y="709" width="0.0268%" height="15" fill="rgb(250,143,31)" fg:x="17914909641" fg:w="43634954"/><text x="11.2586%" y="719.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (43,634,954 samples, 0.03%)</title><rect x="11.0086%" y="693" width="0.0268%" height="15" fill="rgb(211,110,34)" fg:x="17914909641" fg:w="43634954"/><text x="11.2586%" y="703.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (42,059,065 samples, 0.03%)</title><rect x="11.0096%" y="677" width="0.0258%" height="15" fill="rgb(215,124,48)" fg:x="17916485530" fg:w="42059065"/><text x="11.2596%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (39,716,569 samples, 0.02%)</title><rect x="11.0110%" y="661" width="0.0244%" height="15" fill="rgb(216,46,13)" fg:x="17918828026" fg:w="39716569"/><text x="11.2610%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (39,716,569 samples, 0.02%)</title><rect x="11.0110%" y="645" width="0.0244%" height="15" fill="rgb(205,184,25)" fg:x="17918828026" fg:w="39716569"/><text x="11.2610%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (37,460,028 samples, 0.02%)</title><rect x="11.0124%" y="629" width="0.0230%" height="15" fill="rgb(228,1,10)" fg:x="17921084567" fg:w="37460028"/><text x="11.2624%" y="639.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (24,549,957 samples, 0.02%)</title><rect x="11.0557%" y="725" width="0.0151%" height="15" fill="rgb(213,116,27)" fg:x="17991654393" fg:w="24549957"/><text x="11.3057%" y="735.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (40,962,781 samples, 0.03%)</title><rect x="11.0479%" y="741" width="0.0252%" height="15" fill="rgb(241,95,50)" fg:x="17978867185" fg:w="40962781"/><text x="11.2979%" y="751.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (76,738,286 samples, 0.05%)</title><rect x="11.0380%" y="757" width="0.0472%" height="15" fill="rgb(238,48,32)" fg:x="17962833769" fg:w="76738286"/><text x="11.2880%" y="767.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (19,742,089 samples, 0.01%)</title><rect x="11.0731%" y="741" width="0.0121%" height="15" fill="rgb(235,113,49)" fg:x="18019829966" fg:w="19742089"/><text x="11.3231%" y="751.50"></text></g><g><title>__rustc::__rdl_alloc (20,891,993 samples, 0.01%)</title><rect x="11.1072%" y="629" width="0.0128%" height="15" fill="rgb(205,127,43)" fg:x="18075338914" fg:w="20891993"/><text x="11.3572%" y="639.50"></text></g><g><title>__posix_memalign (20,891,993 samples, 0.01%)</title><rect x="11.1072%" y="613" width="0.0128%" height="15" fill="rgb(250,162,2)" fg:x="18075338914" fg:w="20891993"/><text x="11.3572%" y="623.50"></text></g><g><title>_mid_memalign.isra.0 (18,383,677 samples, 0.01%)</title><rect x="11.1087%" y="597" width="0.0113%" height="15" fill="rgb(220,13,41)" fg:x="18077847230" fg:w="18383677"/><text x="11.3587%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (27,370,777 samples, 0.02%)</title><rect x="11.1045%" y="709" width="0.0168%" height="15" fill="rgb(249,221,25)" fg:x="18071063107" fg:w="27370777"/><text x="11.3545%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (27,370,777 samples, 0.02%)</title><rect x="11.1045%" y="693" width="0.0168%" height="15" fill="rgb(215,208,19)" fg:x="18071063107" fg:w="27370777"/><text x="11.3545%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27,370,777 samples, 0.02%)</title><rect x="11.1045%" y="677" width="0.0168%" height="15" fill="rgb(236,175,2)" fg:x="18071063107" fg:w="27370777"/><text x="11.3545%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27,370,777 samples, 0.02%)</title><rect x="11.1045%" y="661" width="0.0168%" height="15" fill="rgb(241,52,2)" fg:x="18071063107" fg:w="27370777"/><text x="11.3545%" y="671.50"></text></g><g><title>alloc::alloc::alloc (23,094,970 samples, 0.01%)</title><rect x="11.1072%" y="645" width="0.0142%" height="15" fill="rgb(248,140,14)" fg:x="18075338914" fg:w="23094970"/><text x="11.3572%" y="655.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new::new_header (19,130,724 samples, 0.01%)</title><rect x="11.1300%" y="709" width="0.0118%" height="15" fill="rgb(253,22,42)" fg:x="18112492512" fg:w="19130724"/><text x="11.3800%" y="719.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (77,071,931 samples, 0.05%)</title><rect x="11.0977%" y="725" width="0.0474%" height="15" fill="rgb(234,61,47)" fg:x="18059969409" fg:w="77071931"/><text x="11.3477%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (266,052,085 samples, 0.16%)</title><rect x="10.9849%" y="853" width="0.1635%" height="15" fill="rgb(208,226,15)" fg:x="17876316228" fg:w="266052085"/><text x="11.2349%" y="863.50"></text></g><g><title>tokio::task::spawn::spawn_inner::_{{closure}} (266,052,085 samples, 0.16%)</title><rect x="10.9849%" y="837" width="0.1635%" height="15" fill="rgb(217,221,4)" fg:x="17876316228" fg:w="266052085"/><text x="11.2349%" y="847.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (257,568,055 samples, 0.16%)</title><rect x="10.9901%" y="821" width="0.1583%" height="15" fill="rgb(212,174,34)" fg:x="17884800258" fg:w="257568055"/><text x="11.2401%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (241,942,750 samples, 0.15%)</title><rect x="10.9997%" y="805" width="0.1487%" height="15" fill="rgb(253,83,4)" fg:x="17900425563" fg:w="241942750"/><text x="11.2497%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (236,119,539 samples, 0.15%)</title><rect x="11.0033%" y="789" width="0.1451%" height="15" fill="rgb(250,195,49)" fg:x="17906248774" fg:w="236119539"/><text x="11.2533%" y="799.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (183,823,718 samples, 0.11%)</title><rect x="11.0354%" y="773" width="0.1130%" height="15" fill="rgb(241,192,25)" fg:x="17958544595" fg:w="183823718"/><text x="11.2854%" y="783.50"></text></g><g><title>tokio::runtime::task::new_task (102,796,258 samples, 0.06%)</title><rect x="11.0852%" y="757" width="0.0632%" height="15" fill="rgb(208,124,10)" fg:x="18039572055" fg:w="102796258"/><text x="11.3352%" y="767.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (102,796,258 samples, 0.06%)</title><rect x="11.0852%" y="741" width="0.0632%" height="15" fill="rgb(222,33,0)" fg:x="18039572055" fg:w="102796258"/><text x="11.3352%" y="751.50"></text></g><g><title>tokio::runtime::context::current::with_current (306,055,374 samples, 0.19%)</title><rect x="10.9613%" y="901" width="0.1881%" height="15" fill="rgb(234,209,28)" fg:x="17837994777" fg:w="306055374"/><text x="11.2113%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (300,340,842 samples, 0.18%)</title><rect x="10.9648%" y="885" width="0.1846%" height="15" fill="rgb(224,11,23)" fg:x="17843709309" fg:w="300340842"/><text x="11.2148%" y="895.50"></text></g><g><title>tokio::runtime::context::current::with_current::_{{closure}} (278,679,795 samples, 0.17%)</title><rect x="10.9781%" y="869" width="0.1712%" height="15" fill="rgb(232,99,1)" fg:x="17865370356" fg:w="278679795"/><text x="11.2281%" y="879.50"></text></g><g><title>tokio::task::spawn::spawn_inner (325,915,725 samples, 0.20%)</title><rect x="10.9542%" y="917" width="0.2003%" height="15" fill="rgb(237,95,45)" fg:x="17826429931" fg:w="325915725"/><text x="11.2042%" y="927.50"></text></g><g><title>tokio::task::spawn::spawn (335,487,136 samples, 0.21%)</title><rect x="10.9503%" y="933" width="0.2062%" height="15" fill="rgb(208,109,11)" fg:x="17820054967" fg:w="335487136"/><text x="11.2003%" y="943.50"></text></g><g><title>axum::extract::ws::WebSocketUpgrade&lt;F&gt;::on_upgrade::_{{closure}} (1,318,111,664 samples, 0.81%)</title><rect x="10.3740%" y="965" width="0.8100%" height="15" fill="rgb(216,190,48)" fg:x="16882175569" fg:w="1318111664"/><text x="10.6240%" y="975.50"></text></g><g><title>update_countdown::routes::websocket::_{{closure}} (1,020,622,899 samples, 0.63%)</title><rect x="10.5568%" y="949" width="0.6272%" height="15" fill="rgb(251,171,36)" fg:x="17179664334" fg:w="1020622899"/><text x="10.8068%" y="959.50"></text></g><g><title>tokio::time::interval::interval (44,745,130 samples, 0.03%)</title><rect x="11.1565%" y="933" width="0.0275%" height="15" fill="rgb(230,62,22)" fg:x="18155542103" fg:w="44745130"/><text x="11.4065%" y="943.50"></text></g><g><title>tokio::time::interval::internal_interval_at (29,827,317 samples, 0.02%)</title><rect x="11.1656%" y="917" width="0.0183%" height="15" fill="rgb(225,114,35)" fg:x="18170459916" fg:w="29827317"/><text x="11.4156%" y="927.50"></text></g><g><title>tokio::time::sleep::sleep_until (17,318,558 samples, 0.01%)</title><rect x="11.1733%" y="901" width="0.0106%" height="15" fill="rgb(215,118,42)" fg:x="18182968675" fg:w="17318558"/><text x="11.4233%" y="911.50"></text></g><g><title>tokio::time::sleep::Sleep::new_timeout (17,318,558 samples, 0.01%)</title><rect x="11.1733%" y="885" width="0.0106%" height="15" fill="rgb(243,119,21)" fg:x="18182968675" fg:w="17318558"/><text x="11.4233%" y="895.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (23,022,365 samples, 0.01%)</title><rect x="11.2099%" y="821" width="0.0141%" height="15" fill="rgb(252,177,53)" fg:x="18242489816" fg:w="23022365"/><text x="11.4599%" y="831.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified (20,894,272 samples, 0.01%)</title><rect x="11.2112%" y="805" width="0.0128%" height="15" fill="rgb(237,209,29)" fg:x="18244617909" fg:w="20894272"/><text x="11.4612%" y="815.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (45,067,739 samples, 0.03%)</title><rect x="11.2028%" y="885" width="0.0277%" height="15" fill="rgb(212,65,23)" fg:x="18230984490" fg:w="45067739"/><text x="11.4528%" y="895.50"></text></g><g><title>tokio::sync::watch::Sender&lt;T&gt;::closed::_{{closure}} (37,753,475 samples, 0.02%)</title><rect x="11.2073%" y="869" width="0.0232%" height="15" fill="rgb(230,222,46)" fg:x="18238298754" fg:w="37753475"/><text x="11.4573%" y="879.50"></text></g><g><title>&lt;tokio::task::coop::Coop&lt;F&gt; as core::future::future::Future&gt;::poll (37,753,475 samples, 0.02%)</title><rect x="11.2073%" y="853" width="0.0232%" height="15" fill="rgb(215,135,32)" fg:x="18238298754" fg:w="37753475"/><text x="11.4573%" y="863.50"></text></g><g><title>tokio::sync::watch::Sender&lt;T&gt;::closed::_{{closure}}::_{{closure}} (35,437,934 samples, 0.02%)</title><rect x="11.2087%" y="837" width="0.0218%" height="15" fill="rgb(246,101,22)" fg:x="18240614295" fg:w="35437934"/><text x="11.4587%" y="847.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (51,393,245 samples, 0.03%)</title><rect x="11.2015%" y="917" width="0.0316%" height="15" fill="rgb(206,107,13)" fg:x="18228845917" fg:w="51393245"/><text x="11.4515%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (51,393,245 samples, 0.03%)</title><rect x="11.2015%" y="901" width="0.0316%" height="15" fill="rgb(250,100,44)" fg:x="18228845917" fg:w="51393245"/><text x="11.4515%" y="911.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (49,603,829 samples, 0.03%)</title><rect x="11.2668%" y="821" width="0.0305%" height="15" fill="rgb(231,147,38)" fg:x="18335114932" fg:w="49603829"/><text x="11.5168%" y="831.50"></text></g><g><title>hyper::common::date::update (45,832,363 samples, 0.03%)</title><rect x="11.2691%" y="805" width="0.0282%" height="15" fill="rgb(229,8,40)" fg:x="18338886398" fg:w="45832363"/><text x="11.5191%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (43,905,043 samples, 0.03%)</title><rect x="11.2703%" y="789" width="0.0270%" height="15" fill="rgb(221,135,30)" fg:x="18340813718" fg:w="43905043"/><text x="11.5203%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (41,338,619 samples, 0.03%)</title><rect x="11.2719%" y="773" width="0.0254%" height="15" fill="rgb(249,193,18)" fg:x="18343380142" fg:w="41338619"/><text x="11.5219%" y="783.50"></text></g><g><title>hyper::common::date::update::_{{closure}} (34,244,657 samples, 0.02%)</title><rect x="11.2762%" y="757" width="0.0210%" height="15" fill="rgb(209,133,39)" fg:x="18350474104" fg:w="34244657"/><text x="11.5262%" y="767.50"></text></g><g><title>hyper::common::date::CachedDate::check (16,597,988 samples, 0.01%)</title><rect x="11.2871%" y="741" width="0.0102%" height="15" fill="rgb(232,100,14)" fg:x="18368120773" fg:w="16597988"/><text x="11.5371%" y="751.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (34,702,617 samples, 0.02%)</title><rect x="11.3629%" y="725" width="0.0213%" height="15" fill="rgb(224,185,1)" fg:x="18491528601" fg:w="34702617"/><text x="11.6129%" y="735.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (32,488,240 samples, 0.02%)</title><rect x="11.3643%" y="709" width="0.0200%" height="15" fill="rgb(223,139,8)" fg:x="18493742978" fg:w="32488240"/><text x="11.6143%" y="719.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (32,488,240 samples, 0.02%)</title><rect x="11.3643%" y="693" width="0.0200%" height="15" fill="rgb(232,213,38)" fg:x="18493742978" fg:w="32488240"/><text x="11.6143%" y="703.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (32,488,240 samples, 0.02%)</title><rect x="11.3643%" y="677" width="0.0200%" height="15" fill="rgb(207,94,22)" fg:x="18493742978" fg:w="32488240"/><text x="11.6143%" y="687.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (32,488,240 samples, 0.02%)</title><rect x="11.3643%" y="661" width="0.0200%" height="15" fill="rgb(219,183,54)" fg:x="18493742978" fg:w="32488240"/><text x="11.6143%" y="671.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write_vectored (40,202,332 samples, 0.02%)</title><rect x="11.3608%" y="757" width="0.0247%" height="15" fill="rgb(216,185,54)" fg:x="18488035412" fg:w="40202332"/><text x="11.6108%" y="767.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write_vectored (36,709,143 samples, 0.02%)</title><rect x="11.3629%" y="741" width="0.0226%" height="15" fill="rgb(254,217,39)" fg:x="18491528601" fg:w="36709143"/><text x="11.6129%" y="751.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (115,990,144 samples, 0.07%)</title><rect x="11.3164%" y="805" width="0.0713%" height="15" fill="rgb(240,178,23)" fg:x="18415904043" fg:w="115990144"/><text x="11.5664%" y="815.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (113,527,751 samples, 0.07%)</title><rect x="11.3180%" y="789" width="0.0698%" height="15" fill="rgb(218,11,47)" fg:x="18418366436" fg:w="113527751"/><text x="11.5680%" y="799.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (97,169,118 samples, 0.06%)</title><rect x="11.3280%" y="773" width="0.0597%" height="15" fill="rgb(218,51,51)" fg:x="18434725069" fg:w="97169118"/><text x="11.5780%" y="783.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (29,500,218 samples, 0.02%)</title><rect x="11.4074%" y="613" width="0.0181%" height="15" fill="rgb(238,126,27)" fg:x="18563888266" fg:w="29500218"/><text x="11.6574%" y="623.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (38,121,775 samples, 0.02%)</title><rect x="11.4033%" y="693" width="0.0234%" height="15" fill="rgb(249,202,22)" fg:x="18557250737" fg:w="38121775"/><text x="11.6533%" y="703.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (38,121,775 samples, 0.02%)</title><rect x="11.4033%" y="677" width="0.0234%" height="15" fill="rgb(254,195,49)" fg:x="18557250737" fg:w="38121775"/><text x="11.6533%" y="687.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (38,121,775 samples, 0.02%)</title><rect x="11.4033%" y="661" width="0.0234%" height="15" fill="rgb(208,123,14)" fg:x="18557250737" fg:w="38121775"/><text x="11.6533%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (38,121,775 samples, 0.02%)</title><rect x="11.4033%" y="645" width="0.0234%" height="15" fill="rgb(224,200,8)" fg:x="18557250737" fg:w="38121775"/><text x="11.6533%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (38,121,775 samples, 0.02%)</title><rect x="11.4033%" y="629" width="0.0234%" height="15" fill="rgb(217,61,36)" fg:x="18557250737" fg:w="38121775"/><text x="11.6533%" y="639.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (59,780,234 samples, 0.04%)</title><rect x="11.3940%" y="789" width="0.0367%" height="15" fill="rgb(206,35,45)" fg:x="18542139133" fg:w="59780234"/><text x="11.6440%" y="799.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::mid_message_detect_eof (50,486,072 samples, 0.03%)</title><rect x="11.3997%" y="773" width="0.0310%" height="15" fill="rgb(217,65,33)" fg:x="18551433295" fg:w="50486072"/><text x="11.6497%" y="783.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (50,486,072 samples, 0.03%)</title><rect x="11.3997%" y="757" width="0.0310%" height="15" fill="rgb(222,158,48)" fg:x="18551433295" fg:w="50486072"/><text x="11.6497%" y="767.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (50,486,072 samples, 0.03%)</title><rect x="11.3997%" y="741" width="0.0310%" height="15" fill="rgb(254,2,54)" fg:x="18551433295" fg:w="50486072"/><text x="11.6497%" y="751.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (48,544,610 samples, 0.03%)</title><rect x="11.4009%" y="725" width="0.0298%" height="15" fill="rgb(250,143,38)" fg:x="18553374757" fg:w="48544610"/><text x="11.6509%" y="735.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (48,544,610 samples, 0.03%)</title><rect x="11.4009%" y="709" width="0.0298%" height="15" fill="rgb(248,25,0)" fg:x="18553374757" fg:w="48544610"/><text x="11.6509%" y="719.50"></text></g><g><title>&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (28,078,464 samples, 0.02%)</title><rect x="11.4355%" y="757" width="0.0173%" height="15" fill="rgb(206,152,27)" fg:x="18609631674" fg:w="28078464"/><text x="11.6855%" y="767.50"></text></g><g><title>&lt;hyper_util::service::glue::TowerToHyperService&lt;S&gt; as hyper::service::service::Service&lt;R&gt;&gt;::call (21,209,624 samples, 0.01%)</title><rect x="11.4397%" y="741" width="0.0130%" height="15" fill="rgb(240,77,30)" fg:x="18616500514" fg:w="21209624"/><text x="11.6897%" y="751.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (88,151,019 samples, 0.05%)</title><rect x="11.4343%" y="773" width="0.0542%" height="15" fill="rgb(231,5,3)" fg:x="18607743487" fg:w="88151019"/><text x="11.6843%" y="783.50"></text></g><g><title>http::request::Request&lt;T&gt;::new (17,253,648 samples, 0.01%)</title><rect x="11.4779%" y="757" width="0.0106%" height="15" fill="rgb(207,226,32)" fg:x="18678640858" fg:w="17253648"/><text x="11.7279%" y="767.50"></text></g><g><title>http::extensions::Extensions::get (18,154,076 samples, 0.01%)</title><rect x="11.4978%" y="773" width="0.0112%" height="15" fill="rgb(222,207,47)" fg:x="18711033353" fg:w="18154076"/><text x="11.7478%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (25,048,777 samples, 0.02%)</title><rect x="11.5231%" y="677" width="0.0154%" height="15" fill="rgb(229,115,45)" fg:x="18752138577" fg:w="25048777"/><text x="11.7731%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20,575,756 samples, 0.01%)</title><rect x="11.5258%" y="661" width="0.0126%" height="15" fill="rgb(224,191,6)" fg:x="18756611598" fg:w="20575756"/><text x="11.7758%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20,575,756 samples, 0.01%)</title><rect x="11.5258%" y="645" width="0.0126%" height="15" fill="rgb(230,227,24)" fg:x="18756611598" fg:w="20575756"/><text x="11.7758%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (43,131,602 samples, 0.03%)</title><rect x="11.5143%" y="741" width="0.0265%" height="15" fill="rgb(228,80,19)" fg:x="18737859710" fg:w="43131602"/><text x="11.7643%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (43,131,602 samples, 0.03%)</title><rect x="11.5143%" y="725" width="0.0265%" height="15" fill="rgb(247,229,0)" fg:x="18737859710" fg:w="43131602"/><text x="11.7643%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (39,124,677 samples, 0.02%)</title><rect x="11.5167%" y="709" width="0.0240%" height="15" fill="rgb(237,194,15)" fg:x="18741866635" fg:w="39124677"/><text x="11.7667%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (28,852,735 samples, 0.02%)</title><rect x="11.5231%" y="693" width="0.0177%" height="15" fill="rgb(219,203,20)" fg:x="18752138577" fg:w="28852735"/><text x="11.7731%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (45,913,798 samples, 0.03%)</title><rect x="11.5143%" y="757" width="0.0282%" height="15" fill="rgb(234,128,8)" fg:x="18737859710" fg:w="45913798"/><text x="11.7643%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (48,426,279 samples, 0.03%)</title><rect x="11.5564%" y="645" width="0.0298%" height="15" fill="rgb(248,202,8)" fg:x="18806457585" fg:w="48426279"/><text x="11.8064%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (28,025,277 samples, 0.02%)</title><rect x="11.5690%" y="629" width="0.0172%" height="15" fill="rgb(206,104,37)" fg:x="18826858587" fg:w="28025277"/><text x="11.8190%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (26,516,803 samples, 0.02%)</title><rect x="11.5699%" y="613" width="0.0163%" height="15" fill="rgb(223,8,27)" fg:x="18828367061" fg:w="26516803"/><text x="11.8199%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (60,436,392 samples, 0.04%)</title><rect x="11.5503%" y="693" width="0.0371%" height="15" fill="rgb(216,217,28)" fg:x="18796521029" fg:w="60436392"/><text x="11.8003%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (56,597,960 samples, 0.03%)</title><rect x="11.5527%" y="677" width="0.0348%" height="15" fill="rgb(249,199,1)" fg:x="18800359461" fg:w="56597960"/><text x="11.8027%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (54,135,971 samples, 0.03%)</title><rect x="11.5542%" y="661" width="0.0333%" height="15" fill="rgb(240,85,17)" fg:x="18802821450" fg:w="54135971"/><text x="11.8042%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (94,575,315 samples, 0.06%)</title><rect x="11.5474%" y="725" width="0.0581%" height="15" fill="rgb(206,108,45)" fg:x="18791681718" fg:w="94575315"/><text x="11.7974%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (94,575,315 samples, 0.06%)</title><rect x="11.5474%" y="709" width="0.0581%" height="15" fill="rgb(245,210,41)" fg:x="18791681718" fg:w="94575315"/><text x="11.7974%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (29,299,612 samples, 0.02%)</title><rect x="11.5875%" y="693" width="0.0180%" height="15" fill="rgb(206,13,37)" fg:x="18856957421" fg:w="29299612"/><text x="11.8375%" y="703.50"></text></g><g><title>http::extensions::Extensions::insert (170,207,409 samples, 0.10%)</title><rect x="11.5090%" y="773" width="0.1046%" height="15" fill="rgb(250,61,18)" fg:x="18729187429" fg:w="170207409"/><text x="11.7590%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (115,621,330 samples, 0.07%)</title><rect x="11.5425%" y="757" width="0.0710%" height="15" fill="rgb(235,172,48)" fg:x="18783773508" fg:w="115621330"/><text x="11.7925%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (111,866,863 samples, 0.07%)</title><rect x="11.5448%" y="741" width="0.0687%" height="15" fill="rgb(249,201,17)" fg:x="18787527975" fg:w="111866863"/><text x="11.7948%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (21,001,187 samples, 0.01%)</title><rect x="11.6331%" y="693" width="0.0129%" height="15" fill="rgb(219,208,6)" fg:x="18931245330" fg:w="21001187"/><text x="11.8831%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (21,001,187 samples, 0.01%)</title><rect x="11.6331%" y="677" width="0.0129%" height="15" fill="rgb(248,31,23)" fg:x="18931245330" fg:w="21001187"/><text x="11.8831%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21,001,187 samples, 0.01%)</title><rect x="11.6331%" y="661" width="0.0129%" height="15" fill="rgb(245,15,42)" fg:x="18931245330" fg:w="21001187"/><text x="11.8831%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21,001,187 samples, 0.01%)</title><rect x="11.6331%" y="645" width="0.0129%" height="15" fill="rgb(222,217,39)" fg:x="18931245330" fg:w="21001187"/><text x="11.8831%" y="655.50"></text></g><g><title>alloc::alloc::alloc (17,073,119 samples, 0.01%)</title><rect x="11.6355%" y="629" width="0.0105%" height="15" fill="rgb(210,219,27)" fg:x="18935173398" fg:w="17073119"/><text x="11.8855%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (27,178,079 samples, 0.02%)</title><rect x="11.6331%" y="709" width="0.0167%" height="15" fill="rgb(252,166,36)" fg:x="18931245330" fg:w="27178079"/><text x="11.8831%" y="719.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::on_upgrade (62,940,737 samples, 0.04%)</title><rect x="11.6161%" y="773" width="0.0387%" height="15" fill="rgb(245,132,34)" fg:x="18903480921" fg:w="62940737"/><text x="11.8661%" y="783.50"></text></g><g><title>hyper::proto::h1::conn::State::prepare_upgrade (62,940,737 samples, 0.04%)</title><rect x="11.6161%" y="757" width="0.0387%" height="15" fill="rgb(236,54,3)" fg:x="18903480921" fg:w="62940737"/><text x="11.8661%" y="767.50"></text></g><g><title>hyper::upgrade::pending (60,247,943 samples, 0.04%)</title><rect x="11.6177%" y="741" width="0.0370%" height="15" fill="rgb(241,173,43)" fg:x="18906173715" fg:w="60247943"/><text x="11.8677%" y="751.50"></text></g><g><title>tokio::sync::oneshot::channel (42,055,498 samples, 0.03%)</title><rect x="11.6289%" y="725" width="0.0258%" height="15" fill="rgb(215,190,9)" fg:x="18924366160" fg:w="42055498"/><text x="11.8789%" y="735.50"></text></g><g><title>http::header::map::hash_elem_using (24,315,782 samples, 0.01%)</title><rect x="11.6912%" y="693" width="0.0149%" height="15" fill="rgb(242,101,16)" fg:x="19025763123" fg:w="24315782"/><text x="11.9412%" y="703.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (20,399,070 samples, 0.01%)</title><rect x="11.6936%" y="677" width="0.0125%" height="15" fill="rgb(223,190,21)" fg:x="19029679835" fg:w="20399070"/><text x="11.9436%" y="687.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (18,454,746 samples, 0.01%)</title><rect x="11.6948%" y="661" width="0.0113%" height="15" fill="rgb(215,228,25)" fg:x="19031624159" fg:w="18454746"/><text x="11.9448%" y="671.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get (58,912,271 samples, 0.04%)</title><rect x="11.6741%" y="757" width="0.0362%" height="15" fill="rgb(225,36,22)" fg:x="18997875195" fg:w="58912271"/><text x="11.9241%" y="767.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get2 (53,007,006 samples, 0.03%)</title><rect x="11.6777%" y="741" width="0.0326%" height="15" fill="rgb(251,106,46)" fg:x="19003780460" fg:w="53007006"/><text x="11.9277%" y="751.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (48,583,930 samples, 0.03%)</title><rect x="11.6804%" y="725" width="0.0299%" height="15" fill="rgb(208,90,1)" fg:x="19008203536" fg:w="48583930"/><text x="11.9304%" y="735.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (42,159,871 samples, 0.03%)</title><rect x="11.6844%" y="709" width="0.0259%" height="15" fill="rgb(243,10,4)" fg:x="19014627595" fg:w="42159871"/><text x="11.9344%" y="719.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (38,345,470 samples, 0.02%)</title><rect x="11.7470%" y="709" width="0.0236%" height="15" fill="rgb(212,137,27)" fg:x="19116517481" fg:w="38345470"/><text x="11.9970%" y="719.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (38,345,470 samples, 0.02%)</title><rect x="11.7470%" y="693" width="0.0236%" height="15" fill="rgb(231,220,49)" fg:x="19116517481" fg:w="38345470"/><text x="11.9970%" y="703.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (38,345,470 samples, 0.02%)</title><rect x="11.7470%" y="677" width="0.0236%" height="15" fill="rgb(237,96,20)" fg:x="19116517481" fg:w="38345470"/><text x="11.9970%" y="687.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (38,345,470 samples, 0.02%)</title><rect x="11.7470%" y="661" width="0.0236%" height="15" fill="rgb(239,229,30)" fg:x="19116517481" fg:w="38345470"/><text x="11.9970%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (20,613,032 samples, 0.01%)</title><rect x="11.7579%" y="645" width="0.0127%" height="15" fill="rgb(219,65,33)" fg:x="19134249919" fg:w="20613032"/><text x="12.0079%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (18,485,539 samples, 0.01%)</title><rect x="11.7592%" y="629" width="0.0114%" height="15" fill="rgb(243,134,7)" fg:x="19136377412" fg:w="18485539"/><text x="12.0092%" y="639.50"></text></g><g><title>tokio::task::coop::poll_proceed (16,569,957 samples, 0.01%)</title><rect x="11.7603%" y="613" width="0.0102%" height="15" fill="rgb(216,177,54)" fg:x="19138292994" fg:w="16569957"/><text x="12.0103%" y="623.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (21,048,083 samples, 0.01%)</title><rect x="11.7854%" y="693" width="0.0129%" height="15" fill="rgb(211,160,20)" fg:x="19179044124" fg:w="21048083"/><text x="12.0354%" y="703.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (21,048,083 samples, 0.01%)</title><rect x="11.7854%" y="677" width="0.0129%" height="15" fill="rgb(239,85,39)" fg:x="19179044124" fg:w="21048083"/><text x="12.0354%" y="687.50"></text></g><g><title>hyper_util::common::rewind::put_slice (31,903,774 samples, 0.02%)</title><rect x="11.7799%" y="709" width="0.0196%" height="15" fill="rgb(232,125,22)" fg:x="19170033403" fg:w="31903774"/><text x="12.0299%" y="719.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (104,225,456 samples, 0.06%)</title><rect x="11.7394%" y="725" width="0.0640%" height="15" fill="rgb(244,57,34)" fg:x="19104212671" fg:w="104225456"/><text x="11.9894%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (28,085,238 samples, 0.02%)</title><rect x="11.8157%" y="693" width="0.0173%" height="15" fill="rgb(214,203,32)" fg:x="19228302171" fg:w="28085238"/><text x="12.0657%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (28,085,238 samples, 0.02%)</title><rect x="11.8157%" y="677" width="0.0173%" height="15" fill="rgb(207,58,43)" fg:x="19228302171" fg:w="28085238"/><text x="12.0657%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (25,870,571 samples, 0.02%)</title><rect x="11.8170%" y="661" width="0.0159%" height="15" fill="rgb(215,193,15)" fg:x="19230516838" fg:w="25870571"/><text x="12.0670%" y="671.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (61,967,814 samples, 0.04%)</title><rect x="11.8044%" y="725" width="0.0381%" height="15" fill="rgb(232,15,44)" fg:x="19210056117" fg:w="61967814"/><text x="12.0544%" y="735.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (57,352,266 samples, 0.04%)</title><rect x="11.8073%" y="709" width="0.0352%" height="15" fill="rgb(212,3,48)" fg:x="19214671665" fg:w="57352266"/><text x="12.0573%" y="719.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (191,758,607 samples, 0.12%)</title><rect x="11.7340%" y="741" width="0.1178%" height="15" fill="rgb(218,128,7)" fg:x="19095443667" fg:w="191758607"/><text x="11.9840%" y="751.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (44,120,145 samples, 0.03%)</title><rect x="11.9500%" y="709" width="0.0271%" height="15" fill="rgb(226,216,39)" fg:x="19446922175" fg:w="44120145"/><text x="12.2000%" y="719.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (22,288,399 samples, 0.01%)</title><rect x="11.9634%" y="693" width="0.0137%" height="15" fill="rgb(243,47,51)" fg:x="19468753921" fg:w="22288399"/><text x="12.2134%" y="703.50"></text></g><g><title>bytes::bytes::Bytes::slice (19,449,278 samples, 0.01%)</title><rect x="11.9816%" y="709" width="0.0120%" height="15" fill="rgb(241,183,40)" fg:x="19498299824" fg:w="19449278"/><text x="12.2316%" y="719.50"></text></g><g><title>bytes::bytes::Bytes::slice_ref (29,920,217 samples, 0.02%)</title><rect x="11.9935%" y="709" width="0.0184%" height="15" fill="rgb(231,217,32)" fg:x="19517749102" fg:w="29920217"/><text x="12.2435%" y="719.50"></text></g><g><title>bytes::bytes::Bytes::slice (17,817,549 samples, 0.01%)</title><rect x="12.0010%" y="693" width="0.0109%" height="15" fill="rgb(229,61,38)" fg:x="19529851770" fg:w="17817549"/><text x="12.2510%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (19,916,594 samples, 0.01%)</title><rect x="12.0203%" y="709" width="0.0122%" height="15" fill="rgb(225,210,5)" fg:x="19561402221" fg:w="19916594"/><text x="12.2703%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (25,930,025 samples, 0.02%)</title><rect x="12.0353%" y="709" width="0.0159%" height="15" fill="rgb(231,79,45)" fg:x="19585722552" fg:w="25930025"/><text x="12.2853%" y="719.50"></text></g><g><title>&lt;http::header::map::HeaderMap&lt;T&gt; as core::default::Default&gt;::default (21,634,013 samples, 0.01%)</title><rect x="12.0379%" y="693" width="0.0133%" height="15" fill="rgb(224,100,7)" fg:x="19590018564" fg:w="21634013"/><text x="12.2879%" y="703.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_with_capacity (17,390,469 samples, 0.01%)</title><rect x="12.0405%" y="677" width="0.0107%" height="15" fill="rgb(241,198,18)" fg:x="19594262108" fg:w="17390469"/><text x="12.2905%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[core::mem::maybe_uninit::MaybeUninit&lt;hyper::proto::h1::role::HeaderIndices&gt;: 100]&gt;&gt; (23,173,258 samples, 0.01%)</title><rect x="12.0646%" y="709" width="0.0142%" height="15" fill="rgb(252,97,53)" fg:x="19633412049" fg:w="23173258"/><text x="12.3146%" y="719.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (23,173,258 samples, 0.01%)</title><rect x="12.0646%" y="693" width="0.0142%" height="15" fill="rgb(220,88,7)" fg:x="19633412049" fg:w="23173258"/><text x="12.3146%" y="703.50"></text></g><g><title>http::header::map::hash_elem_using (62,725,013 samples, 0.04%)</title><rect x="12.1359%" y="645" width="0.0385%" height="15" fill="rgb(213,176,14)" fg:x="19749468455" fg:w="62725013"/><text x="12.3859%" y="655.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (50,224,205 samples, 0.03%)</title><rect x="12.1436%" y="629" width="0.0309%" height="15" fill="rgb(246,73,7)" fg:x="19761969263" fg:w="50224205"/><text x="12.3936%" y="639.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (44,070,887 samples, 0.03%)</title><rect x="12.1474%" y="613" width="0.0271%" height="15" fill="rgb(245,64,36)" fg:x="19768122581" fg:w="44070887"/><text x="12.3974%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (32,284,829 samples, 0.02%)</title><rect x="12.1546%" y="597" width="0.0198%" height="15" fill="rgb(245,80,10)" fg:x="19779908639" fg:w="32284829"/><text x="12.4046%" y="607.50"></text></g><g><title>core::hash::Hasher::write_isize (32,284,829 samples, 0.02%)</title><rect x="12.1546%" y="581" width="0.0198%" height="15" fill="rgb(232,107,50)" fg:x="19779908639" fg:w="32284829"/><text x="12.4046%" y="591.50"></text></g><g><title>core::hash::Hasher::write_usize (26,310,723 samples, 0.02%)</title><rect x="12.1583%" y="565" width="0.0162%" height="15" fill="rgb(253,3,0)" fg:x="19785882745" fg:w="26310723"/><text x="12.4083%" y="575.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (26,310,723 samples, 0.02%)</title><rect x="12.1583%" y="549" width="0.0162%" height="15" fill="rgb(212,99,53)" fg:x="19785882745" fg:w="26310723"/><text x="12.4083%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,660,077 samples, 0.01%)</title><rect x="12.1630%" y="533" width="0.0115%" height="15" fill="rgb(249,111,54)" fg:x="19793533391" fg:w="18660077"/><text x="12.4130%" y="543.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (160,383,536 samples, 0.10%)</title><rect x="12.0788%" y="709" width="0.0986%" height="15" fill="rgb(249,55,30)" fg:x="19656585307" fg:w="160383536"/><text x="12.3288%" y="719.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append (141,584,328 samples, 0.09%)</title><rect x="12.0904%" y="693" width="0.0870%" height="15" fill="rgb(237,47,42)" fg:x="19675384515" fg:w="141584328"/><text x="12.3404%" y="703.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_append (136,111,892 samples, 0.08%)</title><rect x="12.0937%" y="677" width="0.0836%" height="15" fill="rgb(211,20,18)" fg:x="19680856951" fg:w="136111892"/><text x="12.3437%" y="687.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append2 (124,567,835 samples, 0.08%)</title><rect x="12.1008%" y="661" width="0.0765%" height="15" fill="rgb(231,203,46)" fg:x="19692401008" fg:w="124567835"/><text x="12.3508%" y="671.50"></text></g><g><title>alloc::vec::from_elem (28,512,537 samples, 0.02%)</title><rect x="12.1969%" y="677" width="0.0175%" height="15" fill="rgb(237,142,3)" fg:x="19848696690" fg:w="28512537"/><text x="12.4469%" y="687.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (26,684,683 samples, 0.02%)</title><rect x="12.1980%" y="661" width="0.0164%" height="15" fill="rgb(241,107,1)" fg:x="19850524544" fg:w="26684683"/><text x="12.4480%" y="671.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve (82,206,701 samples, 0.05%)</title><rect x="12.1774%" y="709" width="0.0505%" height="15" fill="rgb(229,83,13)" fg:x="19816968843" fg:w="82206701"/><text x="12.4274%" y="719.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve (77,615,354 samples, 0.05%)</title><rect x="12.1802%" y="693" width="0.0477%" height="15" fill="rgb(241,91,40)" fg:x="19821560190" fg:w="77615354"/><text x="12.4302%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (55,459,076 samples, 0.03%)</title><rect x="12.2426%" y="677" width="0.0341%" height="15" fill="rgb(225,3,45)" fg:x="19923060685" fg:w="55459076"/><text x="12.4926%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (53,497,852 samples, 0.03%)</title><rect x="12.2438%" y="661" width="0.0329%" height="15" fill="rgb(244,223,14)" fg:x="19925021909" fg:w="53497852"/><text x="12.4938%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (49,334,136 samples, 0.03%)</title><rect x="12.2463%" y="645" width="0.0303%" height="15" fill="rgb(224,124,37)" fg:x="19929185625" fg:w="49334136"/><text x="12.4963%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (21,910,807 samples, 0.01%)</title><rect x="12.2632%" y="629" width="0.0135%" height="15" fill="rgb(251,171,30)" fg:x="19956608954" fg:w="21910807"/><text x="12.5132%" y="639.50"></text></g><g><title>http::header::name::parse_hdr::_{{closure}} (21,910,807 samples, 0.01%)</title><rect x="12.2632%" y="613" width="0.0135%" height="15" fill="rgb(236,46,54)" fg:x="19956608954" fg:w="21910807"/><text x="12.5132%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (20,279,742 samples, 0.01%)</title><rect x="12.2767%" y="677" width="0.0125%" height="15" fill="rgb(245,213,5)" fg:x="19978519761" fg:w="20279742"/><text x="12.5267%" y="687.50"></text></g><g><title>http::header::name::parse_hdr (182,628,486 samples, 0.11%)</title><rect x="12.2338%" y="693" width="0.1122%" height="15" fill="rgb(230,144,27)" fg:x="19908784775" fg:w="182628486"/><text x="12.4838%" y="703.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes (81,443,258 samples, 0.05%)</title><rect x="12.2960%" y="677" width="0.0500%" height="15" fill="rgb(220,86,6)" fg:x="20009970003" fg:w="81443258"/><text x="12.5460%" y="687.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (194,861,399 samples, 0.12%)</title><rect x="12.2279%" y="709" width="0.1197%" height="15" fill="rgb(240,20,13)" fg:x="19899175544" fg:w="194861399"/><text x="12.4779%" y="719.50"></text></g><g><title>http::header::value::HeaderValue::from_maybe_shared_unchecked (68,226,708 samples, 0.04%)</title><rect x="12.3476%" y="709" width="0.0419%" height="15" fill="rgb(217,89,34)" fg:x="20094036943" fg:w="68226708"/><text x="12.5976%" y="719.50"></text></g><g><title>http::header::value::HeaderValue::from_maybe_shared (57,225,248 samples, 0.04%)</title><rect x="12.3544%" y="693" width="0.0352%" height="15" fill="rgb(229,13,5)" fg:x="20105038403" fg:w="57225248"/><text x="12.6044%" y="703.50"></text></g><g><title>http::header::value::HeaderValue::from_shared (39,291,636 samples, 0.02%)</title><rect x="12.3654%" y="677" width="0.0241%" height="15" fill="rgb(244,67,35)" fg:x="20122972015" fg:w="39291636"/><text x="12.6154%" y="687.50"></text></g><g><title>http::header::value::HeaderValue::try_from_generic (37,295,274 samples, 0.02%)</title><rect x="12.3667%" y="661" width="0.0229%" height="15" fill="rgb(221,40,2)" fg:x="20124968377" fg:w="37295274"/><text x="12.6167%" y="671.50"></text></g><g><title>http::uri::Uri::from_maybe_shared (70,397,887 samples, 0.04%)</title><rect x="12.3949%" y="709" width="0.0433%" height="15" fill="rgb(237,157,21)" fg:x="20171014818" fg:w="70397887"/><text x="12.6449%" y="719.50"></text></g><g><title>http::uri::Uri::from_shared (49,312,279 samples, 0.03%)</title><rect x="12.4079%" y="693" width="0.0303%" height="15" fill="rgb(222,94,11)" fg:x="20192100426" fg:w="49312279"/><text x="12.6579%" y="703.50"></text></g><g><title>http::uri::path::PathAndQuery::from_shared (24,760,794 samples, 0.02%)</title><rect x="12.4230%" y="677" width="0.0152%" height="15" fill="rgb(249,113,6)" fg:x="20216651911" fg:w="24760794"/><text x="12.6730%" y="687.50"></text></g><g><title>httparse::simd::runtime::match_header_name_vectored (52,517,062 samples, 0.03%)</title><rect x="12.4944%" y="661" width="0.0323%" height="15" fill="rgb(238,137,36)" fg:x="20332805344" fg:w="52517062"/><text x="12.7444%" y="671.50"></text></g><g><title>httparse::simd::swar::match_header_name_vectored (52,517,062 samples, 0.03%)</title><rect x="12.4944%" y="645" width="0.0323%" height="15" fill="rgb(210,102,26)" fg:x="20332805344" fg:w="52517062"/><text x="12.7444%" y="655.50"></text></g><g><title>httparse::simd::swar::match_block (37,972,564 samples, 0.02%)</title><rect x="12.5033%" y="629" width="0.0233%" height="15" fill="rgb(218,30,30)" fg:x="20347349842" fg:w="37972564"/><text x="12.7533%" y="639.50"></text></g><g><title>httparse::simd::avx2::match_header_value_char_32_avx (29,051,194 samples, 0.02%)</title><rect x="12.5278%" y="629" width="0.0179%" height="15" fill="rgb(214,67,26)" fg:x="20387262822" fg:w="29051194"/><text x="12.7778%" y="639.50"></text></g><g><title>httparse::simd::avx2::match_header_value_vectored (46,609,843 samples, 0.03%)</title><rect x="12.5266%" y="645" width="0.0286%" height="15" fill="rgb(251,9,53)" fg:x="20385322406" fg:w="46609843"/><text x="12.7766%" y="655.50"></text></g><g><title>httparse::parse_headers_iter_uninit (167,300,547 samples, 0.10%)</title><rect x="12.4537%" y="677" width="0.1028%" height="15" fill="rgb(228,204,25)" fg:x="20266558123" fg:w="167300547"/><text x="12.7037%" y="687.50"></text></g><g><title>httparse::simd::runtime::match_header_value_vectored (48,536,264 samples, 0.03%)</title><rect x="12.5266%" y="661" width="0.0298%" height="15" fill="rgb(207,153,8)" fg:x="20385322406" fg:w="48536264"/><text x="12.7766%" y="671.50"></text></g><g><title>httparse::iter::Bytes::peek_n (22,705,764 samples, 0.01%)</title><rect x="12.5589%" y="661" width="0.0140%" height="15" fill="rgb(242,9,16)" fg:x="20437905167" fg:w="22705764"/><text x="12.8089%" y="671.50"></text></g><g><title>httparse::parse_method (31,068,008 samples, 0.02%)</title><rect x="12.5565%" y="677" width="0.0191%" height="15" fill="rgb(217,211,10)" fg:x="20433858670" fg:w="31068008"/><text x="12.8065%" y="687.50"></text></g><g><title>httparse::simd::avx2::match_uri_vectored (34,565,218 samples, 0.02%)</title><rect x="12.5767%" y="645" width="0.0212%" height="15" fill="rgb(219,228,52)" fg:x="20466766967" fg:w="34565218"/><text x="12.8267%" y="655.50"></text></g><g><title>httparse::simd::swar::match_uri_vectored (17,116,827 samples, 0.01%)</title><rect x="12.5874%" y="629" width="0.0105%" height="15" fill="rgb(231,92,29)" fg:x="20484215358" fg:w="17116827"/><text x="12.8374%" y="639.50"></text></g><g><title>httparse::parse_uri (43,974,163 samples, 0.03%)</title><rect x="12.5756%" y="677" width="0.0270%" height="15" fill="rgb(232,8,23)" fg:x="20464926678" fg:w="43974163"/><text x="12.8256%" y="687.50"></text></g><g><title>httparse::simd::runtime::match_uri_vectored (43,974,163 samples, 0.03%)</title><rect x="12.5756%" y="661" width="0.0270%" height="15" fill="rgb(216,211,34)" fg:x="20464926678" fg:w="43974163"/><text x="12.8256%" y="671.50"></text></g><g><title>httparse::Request::parse_with_uninit_headers (284,255,419 samples, 0.17%)</title><rect x="12.4382%" y="709" width="0.1747%" height="15" fill="rgb(236,151,0)" fg:x="20241412705" fg:w="284255419"/><text x="12.6882%" y="719.50"></text></g><g><title>httparse::Request::parse_with_config_and_uninit_headers (281,781,014 samples, 0.17%)</title><rect x="12.4397%" y="693" width="0.1732%" height="15" fill="rgb(209,168,3)" fg:x="20243887110" fg:w="281781014"/><text x="12.6897%" y="703.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (16,274,312 samples, 0.01%)</title><rect x="12.6169%" y="677" width="0.0100%" height="15" fill="rgb(208,129,28)" fg:x="20532287165" fg:w="16274312"/><text x="12.8669%" y="687.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (16,274,312 samples, 0.01%)</title><rect x="12.6169%" y="661" width="0.0100%" height="15" fill="rgb(229,78,22)" fg:x="20532287165" fg:w="16274312"/><text x="12.8669%" y="671.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim (33,067,437 samples, 0.02%)</title><rect x="12.6341%" y="677" width="0.0203%" height="15" fill="rgb(228,187,13)" fg:x="20560123152" fg:w="33067437"/><text x="12.8841%" y="687.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (33,067,437 samples, 0.02%)</title><rect x="12.6341%" y="661" width="0.0203%" height="15" fill="rgb(240,119,24)" fg:x="20560123152" fg:w="33067437"/><text x="12.8841%" y="671.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_reject (17,817,148 samples, 0.01%)</title><rect x="12.6434%" y="645" width="0.0109%" height="15" fill="rgb(209,194,42)" fg:x="20575373441" fg:w="17817148"/><text x="12.8934%" y="655.50"></text></g><g><title>hyper::headers::connection_close (82,657,157 samples, 0.05%)</title><rect x="12.6129%" y="709" width="0.0508%" height="15" fill="rgb(247,200,46)" fg:x="20525668124" fg:w="82657157"/><text x="12.8629%" y="719.50"></text></g><g><title>hyper::headers::connection_has (82,657,157 samples, 0.05%)</title><rect x="12.6129%" y="693" width="0.0508%" height="15" fill="rgb(218,76,16)" fg:x="20525668124" fg:w="82657157"/><text x="12.8629%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (20,190,183 samples, 0.01%)</title><rect x="12.6741%" y="693" width="0.0124%" height="15" fill="rgb(225,21,48)" fg:x="20625252155" fg:w="20190183"/><text x="12.9241%" y="703.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (20,190,183 samples, 0.01%)</title><rect x="12.6741%" y="677" width="0.0124%" height="15" fill="rgb(239,223,50)" fg:x="20625252155" fg:w="20190183"/><text x="12.9241%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (18,788,758 samples, 0.01%)</title><rect x="12.6749%" y="661" width="0.0115%" height="15" fill="rgb(244,45,21)" fg:x="20626653580" fg:w="18788758"/><text x="12.9249%" y="671.50"></text></g><g><title>hyper::proto::h1::role::record_header_indices (37,282,097 samples, 0.02%)</title><rect x="12.6663%" y="709" width="0.0229%" height="15" fill="rgb(232,33,43)" fg:x="20612564113" fg:w="37282097"/><text x="12.9163%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (18,601,550 samples, 0.01%)</title><rect x="12.6974%" y="693" width="0.0114%" height="15" fill="rgb(209,8,3)" fg:x="20663242228" fg:w="18601550"/><text x="12.9474%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (21,350,829 samples, 0.01%)</title><rect x="12.7124%" y="677" width="0.0131%" height="15" fill="rgb(214,25,53)" fg:x="20687609710" fg:w="21350829"/><text x="12.9624%" y="687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (43,495,873 samples, 0.03%)</title><rect x="12.7088%" y="693" width="0.0267%" height="15" fill="rgb(254,186,54)" fg:x="20681843778" fg:w="43495873"/><text x="12.9588%" y="703.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (16,379,112 samples, 0.01%)</title><rect x="12.7255%" y="677" width="0.0101%" height="15" fill="rgb(208,174,49)" fg:x="20708960539" fg:w="16379112"/><text x="12.9755%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (16,379,112 samples, 0.01%)</title><rect x="12.7255%" y="661" width="0.0101%" height="15" fill="rgb(233,191,51)" fg:x="20708960539" fg:w="16379112"/><text x="12.9755%" y="671.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (1,435,930,698 samples, 0.88%)</title><rect x="11.8576%" y="725" width="0.8824%" height="15" fill="rgb(222,134,10)" fg:x="19296480554" fg:w="1435930698"/><text x="12.1076%" y="735.50"></text></g><g><title>smallvec::SmallVec&lt;[T: N]&gt;::from_const (82,565,042 samples, 0.05%)</title><rect x="12.6892%" y="709" width="0.0507%" height="15" fill="rgb(230,226,20)" fg:x="20649846210" fg:w="82565042"/><text x="12.9392%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23,532,347 samples, 0.01%)</title><rect x="12.7728%" y="677" width="0.0145%" height="15" fill="rgb(251,111,25)" fg:x="20785886806" fg:w="23532347"/><text x="13.0228%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (33,975,383 samples, 0.02%)</title><rect x="12.7686%" y="693" width="0.0209%" height="15" fill="rgb(224,40,46)" fg:x="20779133450" fg:w="33975383"/><text x="13.0186%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (63,520,095 samples, 0.04%)</title><rect x="12.7539%" y="709" width="0.0390%" height="15" fill="rgb(236,108,47)" fg:x="20755180267" fg:w="63520095"/><text x="13.0039%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (34,163,131 samples, 0.02%)</title><rect x="12.7929%" y="709" width="0.0210%" height="15" fill="rgb(234,93,0)" fg:x="20818700362" fg:w="34163131"/><text x="13.0429%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,127,712 samples, 0.01%)</title><rect x="12.8139%" y="709" width="0.0118%" height="15" fill="rgb(224,213,32)" fg:x="20852863493" fg:w="19127712"/><text x="13.0639%" y="719.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (1,925,461,905 samples, 1.18%)</title><rect x="11.6547%" y="773" width="1.1832%" height="15" fill="rgb(251,11,48)" fg:x="18966421658" fg:w="1925461905"/><text x="11.9047%" y="783.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (1,827,692,768 samples, 1.12%)</title><rect x="11.7148%" y="757" width="1.1231%" height="15" fill="rgb(236,173,5)" fg:x="19064190795" fg:w="1827692768"/><text x="11.9648%" y="767.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (1,599,230,769 samples, 0.98%)</title><rect x="11.8552%" y="741" width="0.9827%" height="15" fill="rgb(230,95,12)" fg:x="19292652794" fg:w="1599230769"/><text x="12.1052%" y="751.50"></text></g><g><title>hyper::proto::h1::role::is_complete_fast (153,758,508 samples, 0.09%)</title><rect x="12.7434%" y="725" width="0.0945%" height="15" fill="rgb(232,209,1)" fg:x="20738125055" fg:w="153758508"/><text x="12.9934%" y="735.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (2,364,843,172 samples, 1.45%)</title><rect x="11.3877%" y="805" width="1.4532%" height="15" fill="rgb(232,6,1)" fg:x="18531894187" fg:w="2364843172"/><text x="11.6377%" y="815.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (2,294,817,992 samples, 1.41%)</title><rect x="11.4307%" y="789" width="1.4101%" height="15" fill="rgb(210,224,50)" fg:x="18601919367" fg:w="2294817992"/><text x="11.6807%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by_key (35,036,295 samples, 0.02%)</title><rect x="12.9475%" y="405" width="0.0215%" height="15" fill="rgb(228,127,35)" fg:x="21070136051" fg:w="35036295"/><text x="13.1975%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (33,016,557 samples, 0.02%)</title><rect x="12.9487%" y="389" width="0.0203%" height="15" fill="rgb(245,102,45)" fg:x="21072155789" fg:w="33016557"/><text x="13.1987%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (33,016,557 samples, 0.02%)</title><rect x="12.9487%" y="373" width="0.0203%" height="15" fill="rgb(214,1,49)" fg:x="21072155789" fg:w="33016557"/><text x="13.1987%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (31,041,429 samples, 0.02%)</title><rect x="12.9499%" y="357" width="0.0191%" height="15" fill="rgb(226,163,40)" fg:x="21074130917" fg:w="31041429"/><text x="13.1999%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (29,065,214 samples, 0.02%)</title><rect x="12.9511%" y="341" width="0.0179%" height="15" fill="rgb(239,212,28)" fg:x="21076107132" fg:w="29065214"/><text x="13.2011%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (24,749,964 samples, 0.02%)</title><rect x="12.9538%" y="325" width="0.0152%" height="15" fill="rgb(220,20,13)" fg:x="21080422382" fg:w="24749964"/><text x="13.2038%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24,749,964 samples, 0.02%)</title><rect x="12.9538%" y="309" width="0.0152%" height="15" fill="rgb(210,164,35)" fg:x="21080422382" fg:w="24749964"/><text x="13.2038%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24,749,964 samples, 0.02%)</title><rect x="12.9538%" y="293" width="0.0152%" height="15" fill="rgb(248,109,41)" fg:x="21080422382" fg:w="24749964"/><text x="13.2038%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18,998,769 samples, 0.01%)</title><rect x="12.9573%" y="277" width="0.0117%" height="15" fill="rgb(238,23,50)" fg:x="21086173577" fg:w="18998769"/><text x="13.2073%" y="287.50"></text></g><g><title>tower_http::content_encoding::Encoding::preferred_encoding (43,824,566 samples, 0.03%)</title><rect x="12.9447%" y="421" width="0.0269%" height="15" fill="rgb(211,48,49)" fg:x="21065580684" fg:w="43824566"/><text x="13.1947%" y="431.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (21,449,485 samples, 0.01%)</title><rect x="12.9876%" y="389" width="0.0132%" height="15" fill="rgb(223,36,21)" fg:x="21135509747" fg:w="21449485"/><text x="13.2376%" y="399.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (21,449,485 samples, 0.01%)</title><rect x="12.9876%" y="373" width="0.0132%" height="15" fill="rgb(207,123,46)" fg:x="21135509747" fg:w="21449485"/><text x="13.2376%" y="383.50"></text></g><g><title>&lt;tower_http::compression::service::Compression&lt;S,P&gt; as tower_service::Service&lt;http::request::Request&lt;ReqBody&gt;&gt;&gt;::call (115,440,098 samples, 0.07%)</title><rect x="12.9336%" y="453" width="0.0709%" height="15" fill="rgb(240,218,32)" fg:x="21047592641" fg:w="115440098"/><text x="13.1836%" y="463.50"></text></g><g><title>tower_http::content_encoding::Encoding::from_headers (107,640,494 samples, 0.07%)</title><rect x="12.9384%" y="437" width="0.0661%" height="15" fill="rgb(252,5,43)" fg:x="21055392245" fg:w="107640494"/><text x="13.1884%" y="447.50"></text></g><g><title>tower_http::content_encoding::encodings (53,627,489 samples, 0.03%)</title><rect x="12.9716%" y="421" width="0.0330%" height="15" fill="rgb(252,84,19)" fg:x="21109405250" fg:w="53627489"/><text x="13.2216%" y="431.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get_all (30,943,052 samples, 0.02%)</title><rect x="12.9855%" y="405" width="0.0190%" height="15" fill="rgb(243,152,39)" fg:x="21132089687" fg:w="30943052"/><text x="13.2355%" y="415.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (125,449,890 samples, 0.08%)</title><rect x="12.9336%" y="485" width="0.0771%" height="15" fill="rgb(234,160,15)" fg:x="21047592641" fg:w="125449890"/><text x="13.1836%" y="495.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as tower_service::Service&lt;Request&gt;&gt;::call (125,449,890 samples, 0.08%)</title><rect x="12.9336%" y="469" width="0.0771%" height="15" fill="rgb(237,34,20)" fg:x="21047592641" fg:w="125449890"/><text x="13.1836%" y="479.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as tower_service::Service&lt;T&gt;&gt;::call (140,151,370 samples, 0.09%)</title><rect x="12.9319%" y="533" width="0.0861%" height="15" fill="rgb(229,97,13)" fg:x="21044872297" fg:w="140151370"/><text x="13.1819%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (140,151,370 samples, 0.09%)</title><rect x="12.9319%" y="517" width="0.0861%" height="15" fill="rgb(234,71,50)" fg:x="21044872297" fg:w="140151370"/><text x="13.1819%" y="527.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (140,151,370 samples, 0.09%)</title><rect x="12.9319%" y="501" width="0.0861%" height="15" fill="rgb(253,155,4)" fg:x="21044872297" fg:w="140151370"/><text x="13.1819%" y="511.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (194,066,457 samples, 0.12%)</title><rect x="12.9217%" y="549" width="0.1193%" height="15" fill="rgb(222,185,37)" fg:x="21028169676" fg:w="194066457"/><text x="13.1717%" y="559.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (30,372,459 samples, 0.02%)</title><rect x="13.0223%" y="533" width="0.0187%" height="15" fill="rgb(251,177,13)" fg:x="21191863674" fg:w="30372459"/><text x="13.2723%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;,http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt; (22,262,302 samples, 0.01%)</title><rect x="13.0272%" y="517" width="0.0137%" height="15" fill="rgb(250,179,40)" fg:x="21199973831" fg:w="22262302"/><text x="13.2772%" y="527.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (205,369,165 samples, 0.13%)</title><rect x="12.9168%" y="565" width="0.1262%" height="15" fill="rgb(242,44,2)" fg:x="21020282674" fg:w="205369165"/><text x="13.1668%" y="575.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::poll (21,329,932 samples, 0.01%)</title><rect x="13.0457%" y="517" width="0.0131%" height="15" fill="rgb(216,177,13)" fg:x="21229955104" fg:w="21329932"/><text x="13.2957%" y="527.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (19,600,143 samples, 0.01%)</title><rect x="13.0467%" y="501" width="0.0120%" height="15" fill="rgb(216,106,43)" fg:x="21231684893" fg:w="19600143"/><text x="13.2967%" y="511.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (19,600,143 samples, 0.01%)</title><rect x="13.0467%" y="485" width="0.0120%" height="15" fill="rgb(216,183,2)" fg:x="21231684893" fg:w="19600143"/><text x="13.2967%" y="495.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (51,517,178 samples, 0.03%)</title><rect x="13.0624%" y="501" width="0.0317%" height="15" fill="rgb(249,75,3)" fg:x="21257219596" fg:w="51517178"/><text x="13.3124%" y="511.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::insert (27,803,392 samples, 0.02%)</title><rect x="13.0770%" y="485" width="0.0171%" height="15" fill="rgb(219,67,39)" fg:x="21280933382" fg:w="27803392"/><text x="13.3270%" y="495.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (86,503,986 samples, 0.05%)</title><rect x="13.0588%" y="517" width="0.0532%" height="15" fill="rgb(253,228,2)" fg:x="21251285036" fg:w="86503986"/><text x="13.3088%" y="527.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (113,009,673 samples, 0.07%)</title><rect x="13.0442%" y="533" width="0.0694%" height="15" fill="rgb(235,138,27)" fg:x="21227652173" fg:w="113009673"/><text x="13.2942%" y="543.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (118,194,972 samples, 0.07%)</title><rect x="13.0430%" y="565" width="0.0726%" height="15" fill="rgb(236,97,51)" fg:x="21225651839" fg:w="118194972"/><text x="13.2930%" y="575.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (118,194,972 samples, 0.07%)</title><rect x="13.0430%" y="549" width="0.0726%" height="15" fill="rgb(240,80,30)" fg:x="21225651839" fg:w="118194972"/><text x="13.2930%" y="559.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (337,765,568 samples, 0.21%)</title><rect x="12.9091%" y="613" width="0.2076%" height="15" fill="rgb(230,178,19)" fg:x="21007730567" fg:w="337765568"/><text x="13.1591%" y="623.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (329,695,901 samples, 0.20%)</title><rect x="12.9141%" y="597" width="0.2026%" height="15" fill="rgb(210,190,27)" fg:x="21015800234" fg:w="329695901"/><text x="13.1641%" y="607.50"></text></g><g><title>&lt;tower_http::timeout::service::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (327,946,115 samples, 0.20%)</title><rect x="12.9151%" y="581" width="0.2015%" height="15" fill="rgb(222,107,31)" fg:x="21017550020" fg:w="327946115"/><text x="13.1651%" y="591.50"></text></g><g><title>&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (54,123,832 samples, 0.03%)</title><rect x="13.1393%" y="485" width="0.0333%" height="15" fill="rgb(216,127,34)" fg:x="21382409827" fg:w="54123832"/><text x="13.3893%" y="495.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::cancel (54,123,832 samples, 0.03%)</title><rect x="13.1393%" y="469" width="0.0333%" height="15" fill="rgb(234,116,52)" fg:x="21382409827" fg:w="54123832"/><text x="13.3893%" y="479.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (46,338,382 samples, 0.03%)</title><rect x="13.1441%" y="453" width="0.0285%" height="15" fill="rgb(222,124,15)" fg:x="21390195277" fg:w="46338382"/><text x="13.3941%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;futures_util::future::try_future::into_future::IntoFuture&lt;tower_http::timeout::service::ResponseFuture&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt;&gt;&gt;,())&gt; (101,322,700 samples, 0.06%)</title><rect x="13.1255%" y="597" width="0.0623%" height="15" fill="rgb(231,179,28)" fg:x="21359949690" fg:w="101322700"/><text x="13.3755%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;futures_util::future::try_future::into_future::IntoFuture&lt;tower_http::timeout::service::ResponseFuture&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt;&gt;&gt;&gt; (99,183,652 samples, 0.06%)</title><rect x="13.1269%" y="581" width="0.0609%" height="15" fill="rgb(226,93,45)" fg:x="21362088738" fg:w="99183652"/><text x="13.3769%" y="591.50"></text></g><g><title>&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (97,363,842 samples, 0.06%)</title><rect x="13.1280%" y="565" width="0.0598%" height="15" fill="rgb(215,8,51)" fg:x="21363908548" fg:w="97363842"/><text x="13.3780%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::try_future::into_future::IntoFuture&lt;tower_http::timeout::service::ResponseFuture&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt;&gt;&gt; (97,363,842 samples, 0.06%)</title><rect x="13.1280%" y="549" width="0.0598%" height="15" fill="rgb(223,106,5)" fg:x="21363908548" fg:w="97363842"/><text x="13.3780%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower_http::timeout::service::ResponseFuture&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt;&gt; (94,881,847 samples, 0.06%)</title><rect x="13.1295%" y="533" width="0.0583%" height="15" fill="rgb(250,191,5)" fg:x="21366390543" fg:w="94881847"/><text x="13.3795%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (85,659,834 samples, 0.05%)</title><rect x="13.1352%" y="517" width="0.0526%" height="15" fill="rgb(242,132,44)" fg:x="21375612556" fg:w="85659834"/><text x="13.3852%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::time::entry::TimerEntry&gt; (85,659,834 samples, 0.05%)</title><rect x="13.1352%" y="501" width="0.0526%" height="15" fill="rgb(251,152,29)" fg:x="21375612556" fg:w="85659834"/><text x="13.3852%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Handle&gt; (20,449,720 samples, 0.01%)</title><rect x="13.1752%" y="485" width="0.0126%" height="15" fill="rgb(218,179,5)" fg:x="21440822670" fg:w="20449720"/><text x="13.4252%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt; (20,449,720 samples, 0.01%)</title><rect x="13.1752%" y="469" width="0.0126%" height="15" fill="rgb(227,67,19)" fg:x="21440822670" fg:w="20449720"/><text x="13.4252%" y="479.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (478,087,711 samples, 0.29%)</title><rect x="12.9014%" y="645" width="0.2938%" height="15" fill="rgb(233,119,31)" fg:x="20995146814" fg:w="478087711"/><text x="13.1514%" y="655.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (475,797,409 samples, 0.29%)</title><rect x="12.9028%" y="629" width="0.2924%" height="15" fill="rgb(241,120,22)" fg:x="20997437116" fg:w="475797409"/><text x="13.1528%" y="639.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (115,642,655 samples, 0.07%)</title><rect x="13.1241%" y="613" width="0.0711%" height="15" fill="rgb(224,102,30)" fg:x="21357591870" fg:w="115642655"/><text x="13.3741%" y="623.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (485,642,008 samples, 0.30%)</title><rect x="12.8990%" y="661" width="0.2984%" height="15" fill="rgb(210,164,37)" fg:x="20991208629" fg:w="485642008"/><text x="13.1490%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (500,561,980 samples, 0.31%)</title><rect x="12.8913%" y="709" width="0.3076%" height="15" fill="rgb(226,191,16)" fg:x="20978718222" fg:w="500561980"/><text x="13.1413%" y="719.50"></text></g><g><title>&lt;axum::util::MapIntoResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (500,561,980 samples, 0.31%)</title><rect x="12.8913%" y="693" width="0.3076%" height="15" fill="rgb(214,40,45)" fg:x="20978718222" fg:w="500561980"/><text x="13.1413%" y="703.50"></text></g><g><title>&lt;tower::util::map_err::MapErrFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (489,788,800 samples, 0.30%)</title><rect x="12.8979%" y="677" width="0.3010%" height="15" fill="rgb(244,29,26)" fg:x="20989491402" fg:w="489788800"/><text x="13.1479%" y="687.50"></text></g><g><title>tokio::time::instant::Instant::now (21,150,261 samples, 0.01%)</title><rect x="13.2172%" y="597" width="0.0130%" height="15" fill="rgb(216,16,5)" fg:x="21509050415" fg:w="21150261"/><text x="13.4672%" y="607.50"></text></g><g><title>tokio::time::instant::variant::now (21,150,261 samples, 0.01%)</title><rect x="13.2172%" y="581" width="0.0130%" height="15" fill="rgb(249,76,35)" fg:x="21509050415" fg:w="21150261"/><text x="13.4672%" y="591.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (18,882,978 samples, 0.01%)</title><rect x="13.2186%" y="565" width="0.0116%" height="15" fill="rgb(207,11,44)" fg:x="21511317698" fg:w="18882978"/><text x="13.4686%" y="575.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (16,566,032 samples, 0.01%)</title><rect x="13.2200%" y="549" width="0.0102%" height="15" fill="rgb(228,190,49)" fg:x="21513634644" fg:w="16566032"/><text x="13.4700%" y="559.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (19,234,710 samples, 0.01%)</title><rect x="13.2302%" y="581" width="0.0118%" height="15" fill="rgb(214,173,12)" fg:x="21530200676" fg:w="19234710"/><text x="13.4802%" y="591.50"></text></g><g><title>tokio::runtime::context::current::with_current (19,234,710 samples, 0.01%)</title><rect x="13.2302%" y="565" width="0.0118%" height="15" fill="rgb(218,26,35)" fg:x="21530200676" fg:w="19234710"/><text x="13.4802%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19,234,710 samples, 0.01%)</title><rect x="13.2302%" y="549" width="0.0118%" height="15" fill="rgb(220,200,19)" fg:x="21530200676" fg:w="19234710"/><text x="13.4802%" y="559.50"></text></g><g><title>tokio::runtime::context::current::with_current::_{{closure}} (17,530,840 samples, 0.01%)</title><rect x="13.2312%" y="533" width="0.0108%" height="15" fill="rgb(239,95,49)" fg:x="21531904546" fg:w="17530840"/><text x="13.4812%" y="543.50"></text></g><g><title>&lt;tower_http::timeout::service::Timeout&lt;S&gt; as tower_service::Service&lt;http::request::Request&lt;ReqBody&gt;&gt;&gt;::call (59,671,132 samples, 0.04%)</title><rect x="13.2088%" y="629" width="0.0367%" height="15" fill="rgb(235,85,53)" fg:x="21495427348" fg:w="59671132"/><text x="13.4588%" y="639.50"></text></g><g><title>tokio::time::sleep::sleep (46,048,065 samples, 0.03%)</title><rect x="13.2172%" y="613" width="0.0283%" height="15" fill="rgb(233,133,31)" fg:x="21509050415" fg:w="46048065"/><text x="13.4672%" y="623.50"></text></g><g><title>tokio::time::sleep::Sleep::new_timeout (24,897,804 samples, 0.02%)</title><rect x="13.2302%" y="597" width="0.0153%" height="15" fill="rgb(218,25,20)" fg:x="21530200676" fg:w="24897804"/><text x="13.4802%" y="607.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (81,100,794 samples, 0.05%)</title><rect x="13.2057%" y="661" width="0.0498%" height="15" fill="rgb(252,210,38)" fg:x="21490464768" fg:w="81100794"/><text x="13.4557%" y="671.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as tower_service::Service&lt;Request&gt;&gt;::call (81,100,794 samples, 0.05%)</title><rect x="13.2057%" y="645" width="0.0498%" height="15" fill="rgb(242,134,21)" fg:x="21490464768" fg:w="81100794"/><text x="13.4557%" y="655.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as tower_service::Service&lt;T&gt;&gt;::call (97,125,877 samples, 0.06%)</title><rect x="13.2005%" y="709" width="0.0597%" height="15" fill="rgb(213,28,48)" fg:x="21482015863" fg:w="97125877"/><text x="13.4505%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (93,229,993 samples, 0.06%)</title><rect x="13.2029%" y="693" width="0.0573%" height="15" fill="rgb(250,196,2)" fg:x="21485911747" fg:w="93229993"/><text x="13.4529%" y="703.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (93,229,993 samples, 0.06%)</title><rect x="13.2029%" y="677" width="0.0573%" height="15" fill="rgb(227,5,17)" fg:x="21485911747" fg:w="93229993"/><text x="13.4529%" y="687.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as tower_service::Service&lt;T&gt;&gt;::poll_ready (17,407,236 samples, 0.01%)</title><rect x="13.2602%" y="709" width="0.0107%" height="15" fill="rgb(221,226,24)" fg:x="21579141740" fg:w="17407236"/><text x="13.5102%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (17,407,236 samples, 0.01%)</title><rect x="13.2602%" y="693" width="0.0107%" height="15" fill="rgb(211,5,48)" fg:x="21579141740" fg:w="17407236"/><text x="13.5102%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::Route&gt; (19,836,561 samples, 0.01%)</title><rect x="13.2981%" y="469" width="0.0122%" height="15" fill="rgb(219,150,6)" fg:x="21640773225" fg:w="19836561"/><text x="13.5481%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (19,836,561 samples, 0.01%)</title><rect x="13.2981%" y="453" width="0.0122%" height="15" fill="rgb(251,46,16)" fg:x="21640773225" fg:w="19836561"/><text x="13.5481%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Error = core::convert::Infallible+Response = http::response::Response&lt;axum_core::body::Body&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (19,836,561 samples, 0.01%)</title><rect x="13.2981%" y="437" width="0.0122%" height="15" fill="rgb(220,204,40)" fg:x="21640773225" fg:w="19836561"/><text x="13.5481%" y="447.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (75,914,882 samples, 0.05%)</title><rect x="13.2736%" y="709" width="0.0466%" height="15" fill="rgb(211,85,2)" fg:x="21600861240" fg:w="75914882"/><text x="13.5236%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;,http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt; (70,053,187 samples, 0.04%)</title><rect x="13.2772%" y="693" width="0.0430%" height="15" fill="rgb(229,17,7)" fg:x="21606722935" fg:w="70053187"/><text x="13.5272%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (61,952,179 samples, 0.04%)</title><rect x="13.2822%" y="677" width="0.0381%" height="15" fill="rgb(239,72,28)" fg:x="21614823943" fg:w="61952179"/><text x="13.5322%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Error = core::convert::Infallible+Response = http::response::Response&lt;axum_core::body::Body&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (60,014,297 samples, 0.04%)</title><rect x="13.2833%" y="661" width="0.0369%" height="15" fill="rgb(230,47,54)" fg:x="21616761825" fg:w="60014297"/><text x="13.5333%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt;::{{closure}}&gt;&gt; (58,066,175 samples, 0.04%)</title><rect x="13.2845%" y="645" width="0.0357%" height="15" fill="rgb(214,50,8)" fg:x="21618709947" fg:w="58066175"/><text x="13.5345%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt; (55,847,400 samples, 0.03%)</title><rect x="13.2859%" y="629" width="0.0343%" height="15" fill="rgb(216,198,43)" fg:x="21620928722" fg:w="55847400"/><text x="13.5359%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt; (50,519,909 samples, 0.03%)</title><rect x="13.2892%" y="613" width="0.0310%" height="15" fill="rgb(234,20,35)" fg:x="21626256213" fg:w="50519909"/><text x="13.5392%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;&gt; (48,644,412 samples, 0.03%)</title><rect x="13.2903%" y="597" width="0.0299%" height="15" fill="rgb(254,45,19)" fg:x="21628131710" fg:w="48644412"/><text x="13.5403%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::Route&gt; (48,644,412 samples, 0.03%)</title><rect x="13.2903%" y="581" width="0.0299%" height="15" fill="rgb(219,14,44)" fg:x="21628131710" fg:w="48644412"/><text x="13.5403%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (48,644,412 samples, 0.03%)</title><rect x="13.2903%" y="565" width="0.0299%" height="15" fill="rgb(217,220,26)" fg:x="21628131710" fg:w="48644412"/><text x="13.5403%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Error = core::convert::Infallible+Response = http::response::Response&lt;axum_core::body::Body&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (48,644,412 samples, 0.03%)</title><rect x="13.2903%" y="549" width="0.0299%" height="15" fill="rgb(213,158,28)" fg:x="21628131710" fg:w="48644412"/><text x="13.5403%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt;::{{closure}}&gt;&gt; (46,749,393 samples, 0.03%)</title><rect x="13.2915%" y="533" width="0.0287%" height="15" fill="rgb(252,51,52)" fg:x="21630026729" fg:w="46749393"/><text x="13.5415%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt; (46,749,393 samples, 0.03%)</title><rect x="13.2915%" y="517" width="0.0287%" height="15" fill="rgb(246,89,16)" fg:x="21630026729" fg:w="46749393"/><text x="13.5415%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt; (42,231,436 samples, 0.03%)</title><rect x="13.2943%" y="501" width="0.0260%" height="15" fill="rgb(216,158,49)" fg:x="21634544686" fg:w="42231436"/><text x="13.5443%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;&gt; (40,347,949 samples, 0.02%)</title><rect x="13.2954%" y="485" width="0.0248%" height="15" fill="rgb(236,107,19)" fg:x="21636428173" fg:w="40347949"/><text x="13.5454%" y="495.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (707,825,347 samples, 0.43%)</title><rect x="12.8869%" y="725" width="0.4350%" height="15" fill="rgb(228,185,30)" fg:x="20971559836" fg:w="707825347"/><text x="13.1369%" y="735.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert (74,753,871 samples, 0.05%)</title><rect x="13.3357%" y="709" width="0.0459%" height="15" fill="rgb(246,134,8)" fg:x="21701896554" fg:w="74753871"/><text x="13.5857%" y="719.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert (74,753,871 samples, 0.05%)</title><rect x="13.3357%" y="693" width="0.0459%" height="15" fill="rgb(214,143,50)" fg:x="21701896554" fg:w="74753871"/><text x="13.5857%" y="703.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_insert (72,982,953 samples, 0.04%)</title><rect x="13.3368%" y="677" width="0.0448%" height="15" fill="rgb(228,75,8)" fg:x="21703667472" fg:w="72982953"/><text x="13.5868%" y="687.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert2 (72,982,953 samples, 0.04%)</title><rect x="13.3368%" y="661" width="0.0448%" height="15" fill="rgb(207,175,4)" fg:x="21703667472" fg:w="72982953"/><text x="13.5868%" y="671.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (830,944,551 samples, 0.51%)</title><rect x="12.8773%" y="741" width="0.5106%" height="15" fill="rgb(205,108,24)" fg:x="20955988017" fg:w="830944551"/><text x="13.1273%" y="751.50"></text></g><g><title>axum::routing::route::set_content_length (97,364,373 samples, 0.06%)</title><rect x="13.3281%" y="725" width="0.0598%" height="15" fill="rgb(244,120,49)" fg:x="21689568195" fg:w="97364373"/><text x="13.5781%" y="735.50"></text></g><g><title>&lt;http::uri::Uri as core::clone::Clone&gt;::clone (29,571,207 samples, 0.02%)</title><rect x="13.4062%" y="677" width="0.0182%" height="15" fill="rgb(223,47,38)" fg:x="21816671283" fg:w="29571207"/><text x="13.6562%" y="687.50"></text></g><g><title>axum::extract::matched_path::append_nested_matched_path (37,338,809 samples, 0.02%)</title><rect x="13.4292%" y="661" width="0.0229%" height="15" fill="rgb(229,179,11)" fg:x="21854074519" fg:w="37338809"/><text x="13.6792%" y="671.50"></text></g><g><title>http::extensions::Extensions::get (17,021,586 samples, 0.01%)</title><rect x="13.4417%" y="645" width="0.0105%" height="15" fill="rgb(231,122,1)" fg:x="21874391742" fg:w="17021586"/><text x="13.6917%" y="655.50"></text></g><g><title>http::extensions::Extensions::insert (28,324,360 samples, 0.02%)</title><rect x="13.4547%" y="661" width="0.0174%" height="15" fill="rgb(245,119,9)" fg:x="21895615136" fg:w="28324360"/><text x="13.7047%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (25,257,960 samples, 0.02%)</title><rect x="13.4777%" y="645" width="0.0155%" height="15" fill="rgb(241,163,25)" fg:x="21933030342" fg:w="25257960"/><text x="13.7277%" y="655.50"></text></g><g><title>http::extensions::Extensions::remove::_{{closure}} (20,864,327 samples, 0.01%)</title><rect x="13.4804%" y="629" width="0.0128%" height="15" fill="rgb(217,214,3)" fg:x="21937423975" fg:w="20864327"/><text x="13.7304%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (19,533,919 samples, 0.01%)</title><rect x="13.4812%" y="613" width="0.0120%" height="15" fill="rgb(240,86,28)" fg:x="21938754383" fg:w="19533919"/><text x="13.7312%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (19,533,919 samples, 0.01%)</title><rect x="13.4812%" y="597" width="0.0120%" height="15" fill="rgb(215,47,9)" fg:x="21938754383" fg:w="19533919"/><text x="13.7312%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (17,295,205 samples, 0.01%)</title><rect x="13.4826%" y="581" width="0.0106%" height="15" fill="rgb(252,25,45)" fg:x="21940993097" fg:w="17295205"/><text x="13.7326%" y="591.50"></text></g><g><title>http::extensions::Extensions::remove (36,880,215 samples, 0.02%)</title><rect x="13.4721%" y="661" width="0.0227%" height="15" fill="rgb(251,164,9)" fg:x="21923939496" fg:w="36880215"/><text x="13.7221%" y="671.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (20,715,440 samples, 0.01%)</title><rect x="13.5027%" y="581" width="0.0127%" height="15" fill="rgb(233,194,0)" fg:x="21973807073" fg:w="20715440"/><text x="13.7527%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (72,732,542 samples, 0.04%)</title><rect x="13.5009%" y="613" width="0.0447%" height="15" fill="rgb(249,111,24)" fg:x="21970802961" fg:w="72732542"/><text x="13.7509%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (72,732,542 samples, 0.04%)</title><rect x="13.5009%" y="597" width="0.0447%" height="15" fill="rgb(250,223,3)" fg:x="21970802961" fg:w="72732542"/><text x="13.7509%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (44,416,747 samples, 0.03%)</title><rect x="13.5183%" y="581" width="0.0273%" height="15" fill="rgb(236,178,37)" fg:x="21999118756" fg:w="44416747"/><text x="13.7683%" y="591.50"></text></g><g><title>&lt;axum::routing::RouteId as core::hash::Hash&gt;::hash (42,651,564 samples, 0.03%)</title><rect x="13.5194%" y="565" width="0.0262%" height="15" fill="rgb(241,158,50)" fg:x="22000883939" fg:w="42651564"/><text x="13.7694%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (29,571,268 samples, 0.02%)</title><rect x="13.5274%" y="549" width="0.0182%" height="15" fill="rgb(213,121,41)" fg:x="22013964235" fg:w="29571268"/><text x="13.7774%" y="559.50"></text></g><g><title>core::hash::Hasher::write_u32 (27,942,665 samples, 0.02%)</title><rect x="13.5284%" y="533" width="0.0172%" height="15" fill="rgb(240,92,3)" fg:x="22015592838" fg:w="27942665"/><text x="13.7784%" y="543.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (27,942,665 samples, 0.02%)</title><rect x="13.5284%" y="517" width="0.0172%" height="15" fill="rgb(205,123,3)" fg:x="22015592838" fg:w="27942665"/><text x="13.7784%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (22,956,329 samples, 0.01%)</title><rect x="13.5315%" y="501" width="0.0141%" height="15" fill="rgb(205,97,47)" fg:x="22020579174" fg:w="22956329"/><text x="13.7815%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (22,956,329 samples, 0.01%)</title><rect x="13.5315%" y="485" width="0.0141%" height="15" fill="rgb(247,152,14)" fg:x="22020579174" fg:w="22956329"/><text x="13.7815%" y="495.50"></text></g><g><title>axum::extract::matched_path::set_matched_path_for_request (221,228,468 samples, 0.14%)</title><rect x="13.4257%" y="677" width="0.1359%" height="15" fill="rgb(248,195,53)" fg:x="21848370568" fg:w="221228468"/><text x="13.6757%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (108,779,325 samples, 0.07%)</title><rect x="13.4948%" y="661" width="0.0668%" height="15" fill="rgb(226,201,16)" fg:x="21960819711" fg:w="108779325"/><text x="13.7448%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (103,691,958 samples, 0.06%)</title><rect x="13.4979%" y="645" width="0.0637%" height="15" fill="rgb(205,98,0)" fg:x="21965907078" fg:w="103691958"/><text x="13.7479%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (103,691,958 samples, 0.06%)</title><rect x="13.4979%" y="629" width="0.0637%" height="15" fill="rgb(214,191,48)" fg:x="21965907078" fg:w="103691958"/><text x="13.7479%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (26,063,533 samples, 0.02%)</title><rect x="13.5456%" y="613" width="0.0160%" height="15" fill="rgb(237,112,39)" fg:x="22043535503" fg:w="26063533"/><text x="13.7956%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (26,063,533 samples, 0.02%)</title><rect x="13.5456%" y="597" width="0.0160%" height="15" fill="rgb(247,203,27)" fg:x="22043535503" fg:w="26063533"/><text x="13.7956%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (26,063,533 samples, 0.02%)</title><rect x="13.5456%" y="581" width="0.0160%" height="15" fill="rgb(235,124,28)" fg:x="22043535503" fg:w="26063533"/><text x="13.7956%" y="591.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (16,642,222 samples, 0.01%)</title><rect x="13.5993%" y="437" width="0.0102%" height="15" fill="rgb(208,207,46)" fg:x="22130953057" fg:w="16642222"/><text x="13.8493%" y="447.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as core::clone::Clone&gt;::clone (41,438,624 samples, 0.03%)</title><rect x="13.5920%" y="485" width="0.0255%" height="15" fill="rgb(234,176,4)" fg:x="22119020082" fg:w="41438624"/><text x="13.8420%" y="495.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as core::clone::Clone&gt;::clone (37,047,560 samples, 0.02%)</title><rect x="13.5947%" y="469" width="0.0228%" height="15" fill="rgb(230,133,28)" fg:x="22123411146" fg:w="37047560"/><text x="13.8447%" y="479.50"></text></g><g><title>&lt;tower_http::compression::service::Compression&lt;S,P&gt; as core::clone::Clone&gt;::clone (31,745,371 samples, 0.02%)</title><rect x="13.5979%" y="453" width="0.0195%" height="15" fill="rgb(211,137,40)" fg:x="22128713335" fg:w="31745371"/><text x="13.8479%" y="463.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (45,192,012 samples, 0.03%)</title><rect x="13.5909%" y="501" width="0.0278%" height="15" fill="rgb(254,35,13)" fg:x="22117208212" fg:w="45192012"/><text x="13.8409%" y="511.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (69,351,359 samples, 0.04%)</title><rect x="13.5811%" y="613" width="0.0426%" height="15" fill="rgb(225,49,51)" fg:x="22101320180" fg:w="69351359"/><text x="13.8311%" y="623.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as core::clone::Clone&gt;::clone (67,296,931 samples, 0.04%)</title><rect x="13.5824%" y="597" width="0.0414%" height="15" fill="rgb(251,10,15)" fg:x="22103374608" fg:w="67296931"/><text x="13.8324%" y="607.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as core::clone::Clone&gt;::clone (62,077,364 samples, 0.04%)</title><rect x="13.5856%" y="581" width="0.0381%" height="15" fill="rgb(228,207,15)" fg:x="22108594175" fg:w="62077364"/><text x="13.8356%" y="591.50"></text></g><g><title>&lt;tower_http::timeout::service::Timeout&lt;S&gt; as core::clone::Clone&gt;::clone (57,851,150 samples, 0.04%)</title><rect x="13.5882%" y="565" width="0.0355%" height="15" fill="rgb(241,99,19)" fg:x="22112820389" fg:w="57851150"/><text x="13.8382%" y="575.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (57,851,150 samples, 0.04%)</title><rect x="13.5882%" y="549" width="0.0355%" height="15" fill="rgb(207,104,49)" fg:x="22112820389" fg:w="57851150"/><text x="13.8382%" y="559.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (57,851,150 samples, 0.04%)</title><rect x="13.5882%" y="533" width="0.0355%" height="15" fill="rgb(234,99,18)" fg:x="22112820389" fg:w="57851150"/><text x="13.8382%" y="543.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (53,463,327 samples, 0.03%)</title><rect x="13.5909%" y="517" width="0.0329%" height="15" fill="rgb(213,191,49)" fg:x="22117208212" fg:w="53463327"/><text x="13.8409%" y="527.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (85,722,812 samples, 0.05%)</title><rect x="13.5735%" y="661" width="0.0527%" height="15" fill="rgb(210,226,19)" fg:x="22088917251" fg:w="85722812"/><text x="13.8235%" y="671.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (83,405,955 samples, 0.05%)</title><rect x="13.5749%" y="645" width="0.0513%" height="15" fill="rgb(229,97,18)" fg:x="22091234108" fg:w="83405955"/><text x="13.8249%" y="655.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (75,582,602 samples, 0.05%)</title><rect x="13.5797%" y="629" width="0.0464%" height="15" fill="rgb(211,167,15)" fg:x="22099057461" fg:w="75582602"/><text x="13.8297%" y="639.50"></text></g><g><title>axum::routing::method_routing::MethodRouter&lt;S,E&gt;::call_with_state (147,226,247 samples, 0.09%)</title><rect x="13.5616%" y="677" width="0.0905%" height="15" fill="rgb(210,169,34)" fg:x="22069599036" fg:w="147226247"/><text x="13.8116%" y="687.50"></text></g><g><title>axum::routing::route::Route&lt;E&gt;::oneshot_inner_owned (31,442,398 samples, 0.02%)</title><rect x="13.6328%" y="661" width="0.0193%" height="15" fill="rgb(241,121,31)" fg:x="22185382885" fg:w="31442398"/><text x="13.8828%" y="671.50"></text></g><g><title>&lt;matchit::escape::UnescapedRoute as core::ops::deref::Deref&gt;::deref (16,518,820 samples, 0.01%)</title><rect x="13.6844%" y="629" width="0.0102%" height="15" fill="rgb(232,40,11)" fg:x="22269424678" fg:w="16518820"/><text x="13.9344%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16,518,820 samples, 0.01%)</title><rect x="13.6844%" y="613" width="0.0102%" height="15" fill="rgb(205,86,26)" fg:x="22269424678" fg:w="16518820"/><text x="13.9344%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (16,522,803 samples, 0.01%)</title><rect x="13.7410%" y="533" width="0.0102%" height="15" fill="rgb(231,126,28)" fg:x="22361491136" fg:w="16522803"/><text x="13.9910%" y="543.50"></text></g><g><title>matchit::params::Params::for_each_key_mut (56,890,985 samples, 0.03%)</title><rect x="13.7210%" y="629" width="0.0350%" height="15" fill="rgb(219,221,18)" fg:x="22328971845" fg:w="56890985"/><text x="13.9710%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (47,906,548 samples, 0.03%)</title><rect x="13.7265%" y="613" width="0.0294%" height="15" fill="rgb(211,40,0)" fg:x="22337956282" fg:w="47906548"/><text x="13.9765%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45,421,941 samples, 0.03%)</title><rect x="13.7280%" y="597" width="0.0279%" height="15" fill="rgb(239,85,43)" fg:x="22340440889" fg:w="45421941"/><text x="13.9780%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41,337,284 samples, 0.03%)</title><rect x="13.7306%" y="581" width="0.0254%" height="15" fill="rgb(231,55,21)" fg:x="22344525546" fg:w="41337284"/><text x="13.9806%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41,337,284 samples, 0.03%)</title><rect x="13.7306%" y="565" width="0.0254%" height="15" fill="rgb(225,184,43)" fg:x="22344525546" fg:w="41337284"/><text x="13.9806%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_fold (39,551,876 samples, 0.02%)</title><rect x="13.7317%" y="549" width="0.0243%" height="15" fill="rgb(251,158,41)" fg:x="22346310954" fg:w="39551876"/><text x="13.9817%" y="559.50"></text></g><g><title>axum::routing::path_router::Node::at (176,775,900 samples, 0.11%)</title><rect x="13.6521%" y="677" width="0.1086%" height="15" fill="rgb(234,159,37)" fg:x="22216825283" fg:w="176775900"/><text x="13.9021%" y="687.50"></text></g><g><title>matchit::router::Router&lt;T&gt;::at (171,417,211 samples, 0.11%)</title><rect x="13.6554%" y="661" width="0.1053%" height="15" fill="rgb(216,204,22)" fg:x="22222183972" fg:w="171417211"/><text x="13.9054%" y="671.50"></text></g><g><title>matchit::tree::Node&lt;T&gt;::at (165,257,729 samples, 0.10%)</title><rect x="13.6592%" y="645" width="0.1015%" height="15" fill="rgb(214,17,3)" fg:x="22228343454" fg:w="165257729"/><text x="13.9092%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (16,855,796 samples, 0.01%)</title><rect x="13.8066%" y="277" width="0.0104%" height="15" fill="rgb(212,111,17)" fg:x="22468324282" fg:w="16855796"/><text x="14.0566%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as alloc::sync::ArcFromSlice&lt;T&gt;&gt;::from_slice (16,855,796 samples, 0.01%)</title><rect x="13.8066%" y="261" width="0.0104%" height="15" fill="rgb(221,157,24)" fg:x="22468324282" fg:w="16855796"/><text x="14.0566%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::copy_from_slice (16,855,796 samples, 0.01%)</title><rect x="13.8066%" y="245" width="0.0104%" height="15" fill="rgb(252,16,13)" fg:x="22468324282" fg:w="16855796"/><text x="14.0566%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (28,423,076 samples, 0.02%)</title><rect x="13.8038%" y="341" width="0.0175%" height="15" fill="rgb(221,62,2)" fg:x="22463653651" fg:w="28423076"/><text x="14.0538%" y="351.50"></text></g><g><title>axum::util::PercentDecodedStr::new::_{{closure}} (26,378,848 samples, 0.02%)</title><rect x="13.8050%" y="325" width="0.0162%" height="15" fill="rgb(247,87,22)" fg:x="22465697879" fg:w="26378848"/><text x="14.0550%" y="335.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (26,378,848 samples, 0.02%)</title><rect x="13.8050%" y="309" width="0.0162%" height="15" fill="rgb(215,73,9)" fg:x="22465697879" fg:w="26378848"/><text x="14.0550%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (26,378,848 samples, 0.02%)</title><rect x="13.8050%" y="293" width="0.0162%" height="15" fill="rgb(207,175,33)" fg:x="22465697879" fg:w="26378848"/><text x="14.0550%" y="303.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (36,876,626 samples, 0.02%)</title><rect x="13.8212%" y="325" width="0.0227%" height="15" fill="rgb(243,129,54)" fg:x="22492076727" fg:w="36876626"/><text x="14.0712%" y="335.50"></text></g><g><title>percent_encoding::&lt;impl core::convert::From&lt;percent_encoding::PercentDecode&gt; for alloc::borrow::Cow&lt;[u8]&gt;&gt;::from (32,507,877 samples, 0.02%)</title><rect x="13.8239%" y="309" width="0.0200%" height="15" fill="rgb(227,119,45)" fg:x="22496445476" fg:w="32507877"/><text x="14.0739%" y="319.50"></text></g><g><title>percent_encoding::PercentDecode::decode_utf8 (40,383,150 samples, 0.02%)</title><rect x="13.8212%" y="341" width="0.0248%" height="15" fill="rgb(205,109,36)" fg:x="22492076727" fg:w="40383150"/><text x="14.0712%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (104,834,332 samples, 0.06%)</title><rect x="13.7842%" y="453" width="0.0644%" height="15" fill="rgb(205,6,39)" fg:x="22431754467" fg:w="104834332"/><text x="14.0342%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (100,878,283 samples, 0.06%)</title><rect x="13.7866%" y="437" width="0.0620%" height="15" fill="rgb(221,32,16)" fg:x="22435710516" fg:w="100878283"/><text x="14.0366%" y="447.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (92,902,835 samples, 0.06%)</title><rect x="13.7915%" y="421" width="0.0571%" height="15" fill="rgb(228,144,50)" fg:x="22443685964" fg:w="92902835"/><text x="14.0415%" y="431.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (87,063,382 samples, 0.05%)</title><rect x="13.7951%" y="405" width="0.0535%" height="15" fill="rgb(229,201,53)" fg:x="22449525417" fg:w="87063382"/><text x="14.0451%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (87,063,382 samples, 0.05%)</title><rect x="13.7951%" y="389" width="0.0535%" height="15" fill="rgb(249,153,27)" fg:x="22449525417" fg:w="87063382"/><text x="14.0451%" y="399.50"></text></g><g><title>axum::routing::url_params::insert_url_params::_{{closure}} (74,750,045 samples, 0.05%)</title><rect x="13.8026%" y="373" width="0.0459%" height="15" fill="rgb(227,106,25)" fg:x="22461838754" fg:w="74750045"/><text x="14.0526%" y="383.50"></text></g><g><title>axum::util::PercentDecodedStr::new (72,935,148 samples, 0.04%)</title><rect x="13.8038%" y="357" width="0.0448%" height="15" fill="rgb(230,65,29)" fg:x="22463653651" fg:w="72935148"/><text x="14.0538%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (109,593,832 samples, 0.07%)</title><rect x="13.7828%" y="533" width="0.0673%" height="15" fill="rgb(221,57,46)" fg:x="22429606137" fg:w="109593832"/><text x="14.0328%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (109,593,832 samples, 0.07%)</title><rect x="13.7828%" y="517" width="0.0673%" height="15" fill="rgb(229,161,17)" fg:x="22429606137" fg:w="109593832"/><text x="14.0328%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (109,593,832 samples, 0.07%)</title><rect x="13.7828%" y="501" width="0.0673%" height="15" fill="rgb(222,213,11)" fg:x="22429606137" fg:w="109593832"/><text x="14.0328%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (109,593,832 samples, 0.07%)</title><rect x="13.7828%" y="485" width="0.0673%" height="15" fill="rgb(235,35,13)" fg:x="22429606137" fg:w="109593832"/><text x="14.0328%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (107,445,502 samples, 0.07%)</title><rect x="13.7842%" y="469" width="0.0660%" height="15" fill="rgb(233,158,34)" fg:x="22431754467" fg:w="107445502"/><text x="14.0342%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (142,790,782 samples, 0.09%)</title><rect x="13.7650%" y="661" width="0.0877%" height="15" fill="rgb(215,151,48)" fg:x="22400621256" fg:w="142790782"/><text x="14.0150%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (140,221,511 samples, 0.09%)</title><rect x="13.7666%" y="645" width="0.0862%" height="15" fill="rgb(229,84,14)" fg:x="22403190527" fg:w="140221511"/><text x="14.0166%" y="655.50"></text></g><g><title>core::iter::adapters::try_process (140,221,511 samples, 0.09%)</title><rect x="13.7666%" y="629" width="0.0862%" height="15" fill="rgb(229,68,14)" fg:x="22403190527" fg:w="140221511"/><text x="14.0166%" y="639.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (138,327,517 samples, 0.09%)</title><rect x="13.7678%" y="613" width="0.0850%" height="15" fill="rgb(243,106,26)" fg:x="22405084521" fg:w="138327517"/><text x="14.0178%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (138,327,517 samples, 0.09%)</title><rect x="13.7678%" y="597" width="0.0850%" height="15" fill="rgb(206,45,38)" fg:x="22405084521" fg:w="138327517"/><text x="14.0178%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (138,327,517 samples, 0.09%)</title><rect x="13.7678%" y="581" width="0.0850%" height="15" fill="rgb(226,6,15)" fg:x="22405084521" fg:w="138327517"/><text x="14.0178%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (124,507,533 samples, 0.08%)</title><rect x="13.7763%" y="565" width="0.0765%" height="15" fill="rgb(232,22,54)" fg:x="22418904505" fg:w="124507533"/><text x="14.0263%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (124,507,533 samples, 0.08%)</title><rect x="13.7763%" y="549" width="0.0765%" height="15" fill="rgb(229,222,32)" fg:x="22418904505" fg:w="124507533"/><text x="14.0263%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (27,081,589 samples, 0.02%)</title><rect x="13.8720%" y="581" width="0.0166%" height="15" fill="rgb(228,62,29)" fg:x="22574629347" fg:w="27081589"/><text x="14.1220%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (27,081,589 samples, 0.02%)</title><rect x="13.8720%" y="565" width="0.0166%" height="15" fill="rgb(251,103,34)" fg:x="22574629347" fg:w="27081589"/><text x="14.1220%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (27,081,589 samples, 0.02%)</title><rect x="13.8720%" y="549" width="0.0166%" height="15" fill="rgb(233,12,30)" fg:x="22574629347" fg:w="27081589"/><text x="14.1220%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (23,199,675 samples, 0.01%)</title><rect x="13.8743%" y="533" width="0.0143%" height="15" fill="rgb(238,52,0)" fg:x="22578511261" fg:w="23199675"/><text x="14.1243%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (31,536,099 samples, 0.02%)</title><rect x="13.8720%" y="613" width="0.0194%" height="15" fill="rgb(223,98,5)" fg:x="22574629347" fg:w="31536099"/><text x="14.1220%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (31,536,099 samples, 0.02%)</title><rect x="13.8720%" y="597" width="0.0194%" height="15" fill="rgb(228,75,37)" fg:x="22574629347" fg:w="31536099"/><text x="14.1220%" y="607.50"></text></g><g><title>http::extensions::Extensions::insert (48,076,189 samples, 0.03%)</title><rect x="13.8632%" y="661" width="0.0295%" height="15" fill="rgb(205,115,49)" fg:x="22560368200" fg:w="48076189"/><text x="14.1132%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (33,815,042 samples, 0.02%)</title><rect x="13.8720%" y="645" width="0.0208%" height="15" fill="rgb(250,154,43)" fg:x="22574629347" fg:w="33815042"/><text x="14.1220%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (33,815,042 samples, 0.02%)</title><rect x="13.8720%" y="629" width="0.0208%" height="15" fill="rgb(226,43,29)" fg:x="22574629347" fg:w="33815042"/><text x="14.1220%" y="639.50"></text></g><g><title>axum::routing::url_params::insert_url_params (229,639,049 samples, 0.14%)</title><rect x="13.7607%" y="677" width="0.1411%" height="15" fill="rgb(249,228,39)" fg:x="22393601183" fg:w="229639049"/><text x="14.0107%" y="687.50"></text></g><g><title>http::extensions::Extensions::get (29,787,326 samples, 0.02%)</title><rect x="13.9018%" y="677" width="0.0183%" height="15" fill="rgb(216,79,43)" fg:x="22623240232" fg:w="29787326"/><text x="14.1518%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (29,787,326 samples, 0.02%)</title><rect x="13.9018%" y="661" width="0.0183%" height="15" fill="rgb(228,95,12)" fg:x="22623240232" fg:w="29787326"/><text x="14.1518%" y="671.50"></text></g><g><title>http::extensions::Extensions::get::_{{closure}} (29,787,326 samples, 0.02%)</title><rect x="13.9018%" y="645" width="0.0183%" height="15" fill="rgb(249,221,15)" fg:x="22623240232" fg:w="29787326"/><text x="14.1518%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (29,787,326 samples, 0.02%)</title><rect x="13.9018%" y="629" width="0.0183%" height="15" fill="rgb(233,34,13)" fg:x="22623240232" fg:w="29787326"/><text x="14.1518%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (28,402,834 samples, 0.02%)</title><rect x="13.9027%" y="613" width="0.0175%" height="15" fill="rgb(214,103,39)" fg:x="22624624724" fg:w="28402834"/><text x="14.1527%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (28,402,834 samples, 0.02%)</title><rect x="13.9027%" y="597" width="0.0175%" height="15" fill="rgb(251,126,39)" fg:x="22624624724" fg:w="28402834"/><text x="14.1527%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22,372,078 samples, 0.01%)</title><rect x="13.9064%" y="581" width="0.0137%" height="15" fill="rgb(214,216,36)" fg:x="22630655480" fg:w="22372078"/><text x="14.1564%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22,372,078 samples, 0.01%)</title><rect x="13.9064%" y="565" width="0.0137%" height="15" fill="rgb(220,221,8)" fg:x="22630655480" fg:w="22372078"/><text x="14.1564%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (20,290,683 samples, 0.01%)</title><rect x="13.9077%" y="549" width="0.0125%" height="15" fill="rgb(240,216,3)" fg:x="22632736875" fg:w="20290683"/><text x="14.1577%" y="559.50"></text></g><g><title>http::uri::Uri::path (17,472,521 samples, 0.01%)</title><rect x="13.9332%" y="677" width="0.0107%" height="15" fill="rgb(232,218,17)" fg:x="22674299185" fg:w="17472521"/><text x="14.1832%" y="687.50"></text></g><g><title>http::uri::path::PathAndQuery::path (17,472,521 samples, 0.01%)</title><rect x="13.9332%" y="661" width="0.0107%" height="15" fill="rgb(229,163,45)" fg:x="22674299185" fg:w="17472521"/><text x="14.1832%" y="671.50"></text></g><g><title>axum::routing::Router&lt;S&gt;::call_with_state (933,343,662 samples, 0.57%)</title><rect x="13.3879%" y="709" width="0.5735%" height="15" fill="rgb(231,110,42)" fg:x="21786932568" fg:w="933343662"/><text x="13.6379%" y="719.50"></text></g><g><title>axum::routing::path_router::PathRouter&lt;S,_&gt;::call_with_state (915,719,497 samples, 0.56%)</title><rect x="13.3987%" y="693" width="0.5627%" height="15" fill="rgb(208,170,48)" fg:x="21804556733" fg:w="915719497"/><text x="13.6487%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (28,504,524 samples, 0.02%)</title><rect x="13.9439%" y="677" width="0.0175%" height="15" fill="rgb(239,116,25)" fg:x="22691771706" fg:w="28504524"/><text x="14.1939%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (28,504,524 samples, 0.02%)</title><rect x="13.9439%" y="661" width="0.0175%" height="15" fill="rgb(219,200,50)" fg:x="22691771706" fg:w="28504524"/><text x="14.1939%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (28,504,524 samples, 0.02%)</title><rect x="13.9439%" y="645" width="0.0175%" height="15" fill="rgb(245,200,0)" fg:x="22691771706" fg:w="28504524"/><text x="14.1939%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19,121,421 samples, 0.01%)</title><rect x="13.9497%" y="629" width="0.0117%" height="15" fill="rgb(245,119,33)" fg:x="22701154809" fg:w="19121421"/><text x="14.1997%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19,121,421 samples, 0.01%)</title><rect x="13.9497%" y="613" width="0.0117%" height="15" fill="rgb(231,125,12)" fg:x="22701154809" fg:w="19121421"/><text x="14.1997%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (16,812,519 samples, 0.01%)</title><rect x="13.9511%" y="597" width="0.0103%" height="15" fill="rgb(216,96,41)" fg:x="22703463711" fg:w="16812519"/><text x="14.2011%" y="607.50"></text></g><g><title>axum_core::body::try_downcast (29,336,129 samples, 0.02%)</title><rect x="13.9647%" y="661" width="0.0180%" height="15" fill="rgb(248,43,45)" fg:x="22725505080" fg:w="29336129"/><text x="14.2147%" y="671.50"></text></g><g><title>&lt;axum::routing::Router as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (969,886,092 samples, 0.60%)</title><rect x="13.3879%" y="725" width="0.5960%" height="15" fill="rgb(217,222,7)" fg:x="21786932568" fg:w="969886092"/><text x="13.6379%" y="735.50"></text></g><g><title>http::request::Request&lt;T&gt;::map (36,542,430 samples, 0.02%)</title><rect x="13.9614%" y="709" width="0.0225%" height="15" fill="rgb(233,28,6)" fg:x="22720276230" fg:w="36542430"/><text x="14.2114%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (33,723,252 samples, 0.02%)</title><rect x="13.9632%" y="693" width="0.0207%" height="15" fill="rgb(231,218,15)" fg:x="22723095408" fg:w="33723252"/><text x="14.2132%" y="703.50"></text></g><g><title>axum_core::body::Body::new (33,723,252 samples, 0.02%)</title><rect x="13.9632%" y="677" width="0.0207%" height="15" fill="rgb(226,171,48)" fg:x="22723095408" fg:w="33723252"/><text x="14.2132%" y="687.50"></text></g><g><title>&lt;tower::util::map_request::MapRequest&lt;S,F&gt; as tower_service::Service&lt;R1&gt;&gt;::call (1,008,837,288 samples, 0.62%)</title><rect x="13.3879%" y="741" width="0.6199%" height="15" fill="rgb(235,201,9)" fg:x="21786932568" fg:w="1008837288"/><text x="13.6379%" y="751.50"></text></g><g><title>axum::serve::handle_connection::_{{closure}}::_{{closure}} (37,189,857 samples, 0.02%)</title><rect x="13.9850%" y="725" width="0.0229%" height="15" fill="rgb(217,80,15)" fg:x="22758579999" fg:w="37189857"/><text x="14.2350%" y="735.50"></text></g><g><title>http::request::Request&lt;T&gt;::map (37,189,857 samples, 0.02%)</title><rect x="13.9850%" y="709" width="0.0229%" height="15" fill="rgb(219,152,8)" fg:x="22758579999" fg:w="37189857"/><text x="14.2350%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (37,189,857 samples, 0.02%)</title><rect x="13.9850%" y="693" width="0.0229%" height="15" fill="rgb(243,107,38)" fg:x="22758579999" fg:w="37189857"/><text x="14.2350%" y="703.50"></text></g><g><title>axum_core::body::Body::new (33,700,537 samples, 0.02%)</title><rect x="13.9871%" y="677" width="0.0207%" height="15" fill="rgb(231,17,5)" fg:x="22762069319" fg:w="33700537"/><text x="14.2371%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (23,521,727 samples, 0.01%)</title><rect x="13.9934%" y="661" width="0.0145%" height="15" fill="rgb(209,25,54)" fg:x="22772248129" fg:w="23521727"/><text x="14.2434%" y="671.50"></text></g><g><title>axum_core::body::Body::new::_{{closure}} (19,359,102 samples, 0.01%)</title><rect x="13.9959%" y="645" width="0.0119%" height="15" fill="rgb(219,0,2)" fg:x="22776410754" fg:w="19359102"/><text x="14.2459%" y="655.50"></text></g><g><title>axum_core::body::boxed (19,359,102 samples, 0.01%)</title><rect x="13.9959%" y="629" width="0.0119%" height="15" fill="rgb(246,9,5)" fg:x="22776410754" fg:w="19359102"/><text x="14.2459%" y="639.50"></text></g><g><title>&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;S,R&gt; as core::future::future::Future&gt;::poll (1,867,382,932 samples, 1.15%)</title><rect x="12.8761%" y="773" width="1.1475%" height="15" fill="rgb(226,159,4)" fg:x="20954045203" fg:w="1867382932"/><text x="13.1261%" y="783.50"></text></g><g><title>&lt;hyper_util::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1,867,382,932 samples, 1.15%)</title><rect x="12.8761%" y="757" width="1.1475%" height="15" fill="rgb(219,175,34)" fg:x="20954045203" fg:w="1867382932"/><text x="13.1261%" y="767.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (1,880,066,323 samples, 1.16%)</title><rect x="12.8707%" y="789" width="1.1553%" height="15" fill="rgb(236,10,46)" fg:x="20945289736" fg:w="1880066323"/><text x="13.1207%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::dispatch::OptGuard&lt;axum_core::body::Body&gt;&gt; (17,726,877 samples, 0.01%)</title><rect x="14.0357%" y="789" width="0.0109%" height="15" fill="rgb(240,211,16)" fg:x="22841044693" fg:w="17726877"/><text x="14.2857%" y="799.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::can_write_head (23,218,907 samples, 0.01%)</title><rect x="14.0692%" y="757" width="0.0143%" height="15" fill="rgb(205,3,43)" fg:x="22895610404" fg:w="23218907"/><text x="14.3192%" y="767.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_headers_buf (17,323,397 samples, 0.01%)</title><rect x="14.0728%" y="741" width="0.0106%" height="15" fill="rgb(245,7,22)" fg:x="22901505914" fg:w="17323397"/><text x="14.3228%" y="751.50"></text></g><g><title>bytes::buf::buf_impl::Buf::has_remaining (17,323,397 samples, 0.01%)</title><rect x="14.0728%" y="725" width="0.0106%" height="15" fill="rgb(239,132,32)" fg:x="22901505914" fg:w="17323397"/><text x="14.3228%" y="735.50"></text></g><g><title>&lt;http::header::map::Drain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22,754,337 samples, 0.01%)</title><rect x="14.1626%" y="693" width="0.0140%" height="15" fill="rgb(228,202,34)" fg:x="23047568562" fg:w="22754337"/><text x="14.4126%" y="703.50"></text></g><g><title>http::header::name::HeaderName::as_str (22,202,544 samples, 0.01%)</title><rect x="14.1779%" y="677" width="0.0136%" height="15" fill="rgb(254,200,22)" fg:x="23072545123" fg:w="22202544"/><text x="14.4279%" y="687.50"></text></g><g><title>http::header::name::StandardHeader::as_str (19,974,106 samples, 0.01%)</title><rect x="14.1793%" y="661" width="0.0123%" height="15" fill="rgb(219,10,39)" fg:x="23074773561" fg:w="19974106"/><text x="14.4293%" y="671.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server::encode_headers_with_lower_case::LowercaseWriter as hyper::proto::h1::role::HeaderNameWriter&gt;::write_header_name (31,625,536 samples, 0.02%)</title><rect x="14.1766%" y="693" width="0.0194%" height="15" fill="rgb(226,210,39)" fg:x="23070322899" fg:w="31625536"/><text x="14.4266%" y="703.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::drain (34,351,833 samples, 0.02%)</title><rect x="14.2163%" y="693" width="0.0211%" height="15" fill="rgb(208,219,16)" fg:x="23134967373" fg:w="34351833"/><text x="14.4663%" y="703.50"></text></g><g><title>hyper::common::date::extend (31,978,093 samples, 0.02%)</title><rect x="14.2426%" y="693" width="0.0197%" height="15" fill="rgb(216,158,51)" fg:x="23177748312" fg:w="31978093"/><text x="14.4926%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (31,978,093 samples, 0.02%)</title><rect x="14.2426%" y="677" width="0.0197%" height="15" fill="rgb(233,14,44)" fg:x="23177748312" fg:w="31978093"/><text x="14.4926%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24,688,598 samples, 0.02%)</title><rect x="14.2470%" y="661" width="0.0152%" height="15" fill="rgb(237,97,39)" fg:x="23185037807" fg:w="24688598"/><text x="14.4970%" y="671.50"></text></g><g><title>hyper::headers::content_length_parse (17,834,534 samples, 0.01%)</title><rect x="14.2622%" y="693" width="0.0110%" height="15" fill="rgb(218,198,43)" fg:x="23209726405" fg:w="17834534"/><text x="14.5122%" y="703.50"></text></g><g><title>hyper::headers::from_digits (17,834,534 samples, 0.01%)</title><rect x="14.2622%" y="677" width="0.0110%" height="15" fill="rgb(231,104,20)" fg:x="23209726405" fg:w="17834534"/><text x="14.5122%" y="687.50"></text></g><g><title>hyper::proto::h1::role::Server::can_have_body (20,333,634 samples, 0.01%)</title><rect x="14.2828%" y="693" width="0.0125%" height="15" fill="rgb(254,36,13)" fg:x="23243259089" fg:w="20333634"/><text x="14.5328%" y="703.50"></text></g><g><title>hyper::proto::h1::role::Server::can_chunked (20,333,634 samples, 0.01%)</title><rect x="14.2828%" y="677" width="0.0125%" height="15" fill="rgb(248,14,50)" fg:x="23243259089" fg:w="20333634"/><text x="14.5328%" y="687.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (386,559,210 samples, 0.24%)</title><rect x="14.0614%" y="789" width="0.2375%" height="15" fill="rgb(217,107,29)" fg:x="22882897829" fg:w="386559210"/><text x="14.3114%" y="799.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (377,336,982 samples, 0.23%)</title><rect x="14.0670%" y="773" width="0.2319%" height="15" fill="rgb(251,169,33)" fg:x="22892120057" fg:w="377336982"/><text x="14.3170%" y="783.50"></text></g><g><title>hyper::proto::h1::role::encode_headers (337,971,890 samples, 0.21%)</title><rect x="14.0912%" y="757" width="0.2077%" height="15" fill="rgb(217,108,32)" fg:x="22931485149" fg:w="337971890"/><text x="14.3412%" y="767.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (337,971,890 samples, 0.21%)</title><rect x="14.0912%" y="741" width="0.2077%" height="15" fill="rgb(219,66,42)" fg:x="22931485149" fg:w="337971890"/><text x="14.3412%" y="751.50"></text></g><g><title>hyper::proto::h1::role::Server::encode_headers_with_lower_case (263,023,259 samples, 0.16%)</title><rect x="14.1373%" y="725" width="0.1616%" height="15" fill="rgb(206,180,7)" fg:x="23006433780" fg:w="263023259"/><text x="14.3873%" y="735.50"></text></g><g><title>hyper::proto::h1::role::Server::encode_headers (260,806,433 samples, 0.16%)</title><rect x="14.1387%" y="709" width="0.1603%" height="15" fill="rgb(208,226,31)" fg:x="23008650606" fg:w="260806433"/><text x="14.3887%" y="719.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (4,956,295,385 samples, 3.05%)</title><rect x="11.2559%" y="869" width="3.0456%" height="15" fill="rgb(218,26,49)" fg:x="18317314712" fg:w="4956295385"/><text x="11.5059%" y="879.50">&lt;hy..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (4,942,800,298 samples, 3.04%)</title><rect x="11.2642%" y="853" width="3.0373%" height="15" fill="rgb(233,197,48)" fg:x="18330809799" fg:w="4942800298"/><text x="11.5142%" y="863.50">hyp..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (4,940,525,445 samples, 3.04%)</title><rect x="11.2656%" y="837" width="3.0359%" height="15" fill="rgb(252,181,51)" fg:x="18333084652" fg:w="4940525445"/><text x="11.5156%" y="847.50">hyp..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (4,872,241,409 samples, 2.99%)</title><rect x="11.3075%" y="821" width="2.9940%" height="15" fill="rgb(253,90,19)" fg:x="18401368688" fg:w="4872241409"/><text x="11.5575%" y="831.50">hyp..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (2,376,872,738 samples, 1.46%)</title><rect x="12.8409%" y="805" width="1.4606%" height="15" fill="rgb(215,171,30)" fg:x="20896737359" fg:w="2376872738"/><text x="13.0909%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::Fallback&lt;()&gt;&gt; (46,910,755 samples, 0.03%)</title><rect x="14.3713%" y="549" width="0.0288%" height="15" fill="rgb(214,222,9)" fg:x="23387245786" fg:w="46910755"/><text x="14.6213%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::Route&gt; (46,910,755 samples, 0.03%)</title><rect x="14.3713%" y="533" width="0.0288%" height="15" fill="rgb(223,3,22)" fg:x="23387245786" fg:w="46910755"/><text x="14.6213%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (46,910,755 samples, 0.03%)</title><rect x="14.3713%" y="517" width="0.0288%" height="15" fill="rgb(225,196,46)" fg:x="23387245786" fg:w="46910755"/><text x="14.6213%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Error = core::convert::Infallible+Response = http::response::Response&lt;axum_core::body::Body&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (46,910,755 samples, 0.03%)</title><rect x="14.3713%" y="501" width="0.0288%" height="15" fill="rgb(209,110,37)" fg:x="23387245786" fg:w="46910755"/><text x="14.6213%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt;::{{closure}}&gt;&gt; (44,723,799 samples, 0.03%)</title><rect x="14.3726%" y="485" width="0.0275%" height="15" fill="rgb(249,89,12)" fg:x="23389432742" fg:w="44723799"/><text x="14.6226%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt; (44,723,799 samples, 0.03%)</title><rect x="14.3726%" y="469" width="0.0275%" height="15" fill="rgb(226,27,33)" fg:x="23389432742" fg:w="44723799"/><text x="14.6226%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt; (44,723,799 samples, 0.03%)</title><rect x="14.3726%" y="453" width="0.0275%" height="15" fill="rgb(213,82,22)" fg:x="23389432742" fg:w="44723799"/><text x="14.6226%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;&gt; (44,723,799 samples, 0.03%)</title><rect x="14.3726%" y="437" width="0.0275%" height="15" fill="rgb(248,140,0)" fg:x="23389432742" fg:w="44723799"/><text x="14.6226%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::Route&gt; (44,723,799 samples, 0.03%)</title><rect x="14.3726%" y="421" width="0.0275%" height="15" fill="rgb(228,106,3)" fg:x="23389432742" fg:w="44723799"/><text x="14.6226%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (44,723,799 samples, 0.03%)</title><rect x="14.3726%" y="405" width="0.0275%" height="15" fill="rgb(209,23,37)" fg:x="23389432742" fg:w="44723799"/><text x="14.6226%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Error = core::convert::Infallible+Response = http::response::Response&lt;axum_core::body::Body&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (44,723,799 samples, 0.03%)</title><rect x="14.3726%" y="389" width="0.0275%" height="15" fill="rgb(241,93,50)" fg:x="23389432742" fg:w="44723799"/><text x="14.6226%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt;::{{closure}}&gt;&gt; (30,862,084 samples, 0.02%)</title><rect x="14.3812%" y="373" width="0.0190%" height="15" fill="rgb(253,46,43)" fg:x="23403294457" fg:w="30862084"/><text x="14.6312%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt; (30,862,084 samples, 0.02%)</title><rect x="14.3812%" y="357" width="0.0190%" height="15" fill="rgb(226,206,43)" fg:x="23403294457" fg:w="30862084"/><text x="14.6312%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt; (30,862,084 samples, 0.02%)</title><rect x="14.3812%" y="341" width="0.0190%" height="15" fill="rgb(217,54,7)" fg:x="23403294457" fg:w="30862084"/><text x="14.6312%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;&gt; (30,862,084 samples, 0.02%)</title><rect x="14.3812%" y="325" width="0.0190%" height="15" fill="rgb(223,5,52)" fg:x="23403294457" fg:w="30862084"/><text x="14.6312%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower_http::compression::predicate::DefaultPredicate&gt; (21,296,452 samples, 0.01%)</title><rect x="14.3870%" y="309" width="0.0131%" height="15" fill="rgb(206,52,46)" fg:x="23412860089" fg:w="21296452"/><text x="14.6370%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower_http::compression::predicate::And&lt;tower_http::compression::predicate::And&lt;tower_http::compression::predicate::And&lt;tower_http::compression::predicate::SizeAbove,tower_http::compression::predicate::NotForContentType&gt;,tower_http::compression::predicate::NotForContentType&gt;,tower_http::compression::predicate::NotForContentType&gt;&gt; (21,296,452 samples, 0.01%)</title><rect x="14.3870%" y="293" width="0.0131%" height="15" fill="rgb(253,136,11)" fg:x="23412860089" fg:w="21296452"/><text x="14.6370%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower_http::compression::predicate::And&lt;tower_http::compression::predicate::And&lt;tower_http::compression::predicate::SizeAbove,tower_http::compression::predicate::NotForContentType&gt;,tower_http::compression::predicate::NotForContentType&gt;&gt; (21,296,452 samples, 0.01%)</title><rect x="14.3870%" y="277" width="0.0131%" height="15" fill="rgb(208,106,33)" fg:x="23412860089" fg:w="21296452"/><text x="14.6370%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::method_routing::AllowHeader&gt; (40,131,407 samples, 0.02%)</title><rect x="14.4001%" y="549" width="0.0247%" height="15" fill="rgb(206,54,4)" fg:x="23434156541" fg:w="40131407"/><text x="14.6501%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (36,923,120 samples, 0.02%)</title><rect x="14.4021%" y="533" width="0.0227%" height="15" fill="rgb(213,3,15)" fg:x="23437364828" fg:w="36923120"/><text x="14.6521%" y="543.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (34,603,234 samples, 0.02%)</title><rect x="14.4035%" y="517" width="0.0213%" height="15" fill="rgb(252,211,39)" fg:x="23439684714" fg:w="34603234"/><text x="14.6535%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::method_routing::MethodRouter&gt; (136,473,879 samples, 0.08%)</title><rect x="14.3688%" y="565" width="0.0839%" height="15" fill="rgb(223,6,36)" fg:x="23383165877" fg:w="136473879"/><text x="14.6188%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::method_routing::MethodEndpoint&lt;(),core::convert::Infallible&gt;&gt; (45,351,808 samples, 0.03%)</title><rect x="14.4248%" y="549" width="0.0279%" height="15" fill="rgb(252,169,45)" fg:x="23474287948" fg:w="45351808"/><text x="14.6748%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::Route&gt; (38,942,160 samples, 0.02%)</title><rect x="14.4287%" y="533" width="0.0239%" height="15" fill="rgb(212,48,26)" fg:x="23480697596" fg:w="38942160"/><text x="14.6787%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (38,942,160 samples, 0.02%)</title><rect x="14.4287%" y="517" width="0.0239%" height="15" fill="rgb(251,102,48)" fg:x="23480697596" fg:w="38942160"/><text x="14.6787%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Error = core::convert::Infallible+Response = http::response::Response&lt;axum_core::body::Body&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (38,942,160 samples, 0.02%)</title><rect x="14.4287%" y="501" width="0.0239%" height="15" fill="rgb(243,208,16)" fg:x="23480697596" fg:w="38942160"/><text x="14.6787%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt;::{{closure}}&gt;&gt; (36,216,426 samples, 0.02%)</title><rect x="14.4304%" y="485" width="0.0223%" height="15" fill="rgb(219,96,24)" fg:x="23483423330" fg:w="36216426"/><text x="14.6804%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt; (34,055,040 samples, 0.02%)</title><rect x="14.4317%" y="469" width="0.0209%" height="15" fill="rgb(219,33,29)" fg:x="23485584716" fg:w="34055040"/><text x="14.6817%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt; (34,055,040 samples, 0.02%)</title><rect x="14.4317%" y="453" width="0.0209%" height="15" fill="rgb(223,176,5)" fg:x="23485584716" fg:w="34055040"/><text x="14.6817%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;&gt; (34,055,040 samples, 0.02%)</title><rect x="14.4317%" y="437" width="0.0209%" height="15" fill="rgb(228,140,14)" fg:x="23485584716" fg:w="34055040"/><text x="14.6817%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::Route&gt; (34,055,040 samples, 0.02%)</title><rect x="14.4317%" y="421" width="0.0209%" height="15" fill="rgb(217,179,31)" fg:x="23485584716" fg:w="34055040"/><text x="14.6817%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (34,055,040 samples, 0.02%)</title><rect x="14.4317%" y="405" width="0.0209%" height="15" fill="rgb(230,9,30)" fg:x="23485584716" fg:w="34055040"/><text x="14.6817%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Error = core::convert::Infallible+Response = http::response::Response&lt;axum_core::body::Body&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (34,055,040 samples, 0.02%)</title><rect x="14.4317%" y="389" width="0.0209%" height="15" fill="rgb(230,136,20)" fg:x="23485584716" fg:w="34055040"/><text x="14.6817%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt;::{{closure}}&gt;&gt; (22,778,153 samples, 0.01%)</title><rect x="14.4387%" y="373" width="0.0140%" height="15" fill="rgb(215,210,22)" fg:x="23496861603" fg:w="22778153"/><text x="14.6887%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt; (22,778,153 samples, 0.01%)</title><rect x="14.4387%" y="357" width="0.0140%" height="15" fill="rgb(218,43,5)" fg:x="23496861603" fg:w="22778153"/><text x="14.6887%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt; (20,416,487 samples, 0.01%)</title><rect x="14.4401%" y="341" width="0.0125%" height="15" fill="rgb(216,11,5)" fg:x="23499223269" fg:w="20416487"/><text x="14.6901%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;&gt; (18,417,892 samples, 0.01%)</title><rect x="14.4413%" y="325" width="0.0113%" height="15" fill="rgb(209,82,29)" fg:x="23501221864" fg:w="18417892"/><text x="14.6913%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,280,062 samples, 0.01%)</title><rect x="14.4882%" y="293" width="0.0106%" height="15" fill="rgb(244,115,12)" fg:x="23577431241" fg:w="17280062"/><text x="14.7382%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::method_routing::AllowHeader&gt; (23,573,639 samples, 0.01%)</title><rect x="14.5108%" y="213" width="0.0145%" height="15" fill="rgb(222,82,18)" fg:x="23614334368" fg:w="23573639"/><text x="14.7608%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (21,698,092 samples, 0.01%)</title><rect x="14.5120%" y="197" width="0.0133%" height="15" fill="rgb(249,227,8)" fg:x="23616209915" fg:w="21698092"/><text x="14.7620%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (30,224,024 samples, 0.02%)</title><rect x="14.5320%" y="101" width="0.0186%" height="15" fill="rgb(253,141,45)" fg:x="23648835768" fg:w="30224024"/><text x="14.7820%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (25,899,081 samples, 0.02%)</title><rect x="14.5347%" y="85" width="0.0159%" height="15" fill="rgb(234,184,4)" fg:x="23653160711" fg:w="25899081"/><text x="14.7847%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::os_str::bytes::Buf&gt; (22,119,959 samples, 0.01%)</title><rect x="14.5370%" y="69" width="0.0136%" height="15" fill="rgb(218,194,23)" fg:x="23656939833" fg:w="22119959"/><text x="14.7870%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (22,119,959 samples, 0.01%)</title><rect x="14.5370%" y="53" width="0.0136%" height="15" fill="rgb(235,66,41)" fg:x="23656939833" fg:w="22119959"/><text x="14.7870%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20,404,606 samples, 0.01%)</title><rect x="14.5381%" y="37" width="0.0125%" height="15" fill="rgb(245,217,1)" fg:x="23658655186" fg:w="20404606"/><text x="14.7881%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::Route&gt; (128,548,318 samples, 0.08%)</title><rect x="14.4777%" y="341" width="0.0790%" height="15" fill="rgb(229,91,1)" fg:x="23560408972" fg:w="128548318"/><text x="14.7277%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (128,548,318 samples, 0.08%)</title><rect x="14.4777%" y="325" width="0.0790%" height="15" fill="rgb(207,101,30)" fg:x="23560408972" fg:w="128548318"/><text x="14.7277%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Error = core::convert::Infallible+Response = http::response::Response&lt;axum_core::body::Body&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (128,548,318 samples, 0.08%)</title><rect x="14.4777%" y="309" width="0.0790%" height="15" fill="rgb(223,82,49)" fg:x="23560408972" fg:w="128548318"/><text x="14.7277%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;axum::routing::strip_prefix::StripPrefix&lt;axum::extract::nested_path::SetNestedPath&lt;axum::routing::method_routing::MethodRouter&gt;&gt;&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;axum::routing::strip_prefix::StripPrefix&lt;axum::extract::nested_path::SetNestedPath&lt;axum::routing::method_routing::MethodRouter&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt; (94,245,987 samples, 0.06%)</title><rect x="14.4988%" y="293" width="0.0579%" height="15" fill="rgb(218,167,17)" fg:x="23594711303" fg:w="94245987"/><text x="14.7488%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;axum::routing::strip_prefix::StripPrefix&lt;axum::extract::nested_path::SetNestedPath&lt;axum::routing::method_routing::MethodRouter&gt;&gt;&gt;&gt; (94,245,987 samples, 0.06%)</title><rect x="14.4988%" y="277" width="0.0579%" height="15" fill="rgb(208,103,14)" fg:x="23594711303" fg:w="94245987"/><text x="14.7488%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::strip_prefix::StripPrefix&lt;axum::extract::nested_path::SetNestedPath&lt;axum::routing::method_routing::MethodRouter&gt;&gt;&gt; (91,857,449 samples, 0.06%)</title><rect x="14.5003%" y="261" width="0.0564%" height="15" fill="rgb(238,20,8)" fg:x="23597099841" fg:w="91857449"/><text x="14.7503%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::extract::nested_path::SetNestedPath&lt;axum::routing::method_routing::MethodRouter&gt;&gt; (83,910,335 samples, 0.05%)</title><rect x="14.5051%" y="245" width="0.0516%" height="15" fill="rgb(218,80,54)" fg:x="23605046955" fg:w="83910335"/><text x="14.7551%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::method_routing::MethodRouter&gt; (78,635,173 samples, 0.05%)</title><rect x="14.5084%" y="229" width="0.0483%" height="15" fill="rgb(240,144,17)" fg:x="23610322117" fg:w="78635173"/><text x="14.7584%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::method_routing::MethodEndpoint&lt;(),core::convert::Infallible&gt;&gt; (51,049,283 samples, 0.03%)</title><rect x="14.5253%" y="213" width="0.0314%" height="15" fill="rgb(245,27,50)" fg:x="23637908007" fg:w="51049283"/><text x="14.7753%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::Route&gt; (46,804,793 samples, 0.03%)</title><rect x="14.5279%" y="197" width="0.0288%" height="15" fill="rgb(251,51,7)" fg:x="23642152497" fg:w="46804793"/><text x="14.7779%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (46,804,793 samples, 0.03%)</title><rect x="14.5279%" y="181" width="0.0288%" height="15" fill="rgb(245,217,29)" fg:x="23642152497" fg:w="46804793"/><text x="14.7779%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Error = core::convert::Infallible+Response = http::response::Response&lt;axum_core::body::Body&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (46,804,793 samples, 0.03%)</title><rect x="14.5279%" y="165" width="0.0288%" height="15" fill="rgb(221,176,29)" fg:x="23642152497" fg:w="46804793"/><text x="14.7779%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;tower_http::services::fs::serve_dir::ServeDir&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;tower_http::services::fs::serve_dir::ServeDir&gt;&gt;::{{closure}}&gt;&gt; (41,821,687 samples, 0.03%)</title><rect x="14.5310%" y="149" width="0.0257%" height="15" fill="rgb(212,180,24)" fg:x="23647135603" fg:w="41821687"/><text x="14.7810%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;tower_http::services::fs::serve_dir::ServeDir&gt;&gt; (41,821,687 samples, 0.03%)</title><rect x="14.5310%" y="133" width="0.0257%" height="15" fill="rgb(254,24,2)" fg:x="23647135603" fg:w="41821687"/><text x="14.7810%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower_http::services::fs::serve_dir::ServeDir&gt; (40,121,522 samples, 0.02%)</title><rect x="14.5320%" y="117" width="0.0247%" height="15" fill="rgb(230,100,2)" fg:x="23648835768" fg:w="40121522"/><text x="14.7820%" y="127.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (351,017,226 samples, 0.22%)</title><rect x="14.3494%" y="629" width="0.2157%" height="15" fill="rgb(219,142,25)" fg:x="23351649300" fg:w="351017226"/><text x="14.5994%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (351,017,226 samples, 0.22%)</title><rect x="14.3494%" y="613" width="0.2157%" height="15" fill="rgb(240,73,43)" fg:x="23351649300" fg:w="351017226"/><text x="14.5994%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(axum::routing::RouteId,axum::routing::Endpoint&lt;()&gt;)&gt; (351,017,226 samples, 0.22%)</title><rect x="14.3494%" y="597" width="0.2157%" height="15" fill="rgb(214,114,15)" fg:x="23351649300" fg:w="351017226"/><text x="14.5994%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::Endpoint&lt;()&gt;&gt; (338,448,167 samples, 0.21%)</title><rect x="14.3571%" y="581" width="0.2080%" height="15" fill="rgb(207,130,4)" fg:x="23364218359" fg:w="338448167"/><text x="14.6071%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::Route&gt; (183,026,770 samples, 0.11%)</title><rect x="14.4527%" y="565" width="0.1125%" height="15" fill="rgb(221,25,40)" fg:x="23519639756" fg:w="183026770"/><text x="14.7027%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (183,026,770 samples, 0.11%)</title><rect x="14.4527%" y="549" width="0.1125%" height="15" fill="rgb(241,184,7)" fg:x="23519639756" fg:w="183026770"/><text x="14.7027%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Error = core::convert::Infallible+Response = http::response::Response&lt;axum_core::body::Body&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (181,490,247 samples, 0.11%)</title><rect x="14.4536%" y="533" width="0.1115%" height="15" fill="rgb(235,159,4)" fg:x="23521176279" fg:w="181490247"/><text x="14.7036%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt;::{{closure}}&gt;&gt; (168,653,191 samples, 0.10%)</title><rect x="14.4615%" y="517" width="0.1036%" height="15" fill="rgb(214,87,48)" fg:x="23534013335" fg:w="168653191"/><text x="14.7115%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt; (167,318,972 samples, 0.10%)</title><rect x="14.4623%" y="501" width="0.1028%" height="15" fill="rgb(246,198,24)" fg:x="23535347554" fg:w="167318972"/><text x="14.7123%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_err::MapErr&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt; (164,067,398 samples, 0.10%)</title><rect x="14.4643%" y="485" width="0.1008%" height="15" fill="rgb(209,66,40)" fg:x="23538599128" fg:w="164067398"/><text x="14.7143%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower_http::timeout::service::Timeout&lt;axum::routing::route::Route&gt;&gt; (164,067,398 samples, 0.10%)</title><rect x="14.4643%" y="469" width="0.1008%" height="15" fill="rgb(233,147,39)" fg:x="23538599128" fg:w="164067398"/><text x="14.7143%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::Route&gt; (164,067,398 samples, 0.10%)</title><rect x="14.4643%" y="453" width="0.1008%" height="15" fill="rgb(231,145,52)" fg:x="23538599128" fg:w="164067398"/><text x="14.7143%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (162,511,144 samples, 0.10%)</title><rect x="14.4653%" y="437" width="0.0999%" height="15" fill="rgb(206,20,26)" fg:x="23540155382" fg:w="162511144"/><text x="14.7153%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Error = core::convert::Infallible+Response = http::response::Response&lt;axum_core::body::Body&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (162,511,144 samples, 0.10%)</title><rect x="14.4653%" y="421" width="0.0999%" height="15" fill="rgb(238,220,4)" fg:x="23540155382" fg:w="162511144"/><text x="14.7153%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt;::{{closure}}&gt;&gt; (149,698,830 samples, 0.09%)</title><rect x="14.4731%" y="405" width="0.0920%" height="15" fill="rgb(252,195,42)" fg:x="23552967696" fg:w="149698830"/><text x="14.7231%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt; (143,709,306 samples, 0.09%)</title><rect x="14.4768%" y="389" width="0.0883%" height="15" fill="rgb(209,10,6)" fg:x="23558957220" fg:w="143709306"/><text x="14.7268%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_err::MapErr&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt; (143,709,306 samples, 0.09%)</title><rect x="14.4768%" y="373" width="0.0883%" height="15" fill="rgb(229,3,52)" fg:x="23558957220" fg:w="143709306"/><text x="14.7268%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower_http::compression::service::Compression&lt;axum::routing::route::Route&gt;&gt; (142,257,554 samples, 0.09%)</title><rect x="14.4777%" y="357" width="0.0874%" height="15" fill="rgb(253,49,37)" fg:x="23560408972" fg:w="142257554"/><text x="14.7277%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (368,897,530 samples, 0.23%)</title><rect x="14.3434%" y="645" width="0.2267%" height="15" fill="rgb(240,103,49)" fg:x="23341776693" fg:w="368897530"/><text x="14.5934%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::dispatch::Server&lt;hyper_util::service::glue::TowerToHyperService&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,axum::serve::handle_connection&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router&gt;::{{closure}}::{{closure}}&gt;&gt;,hyper::body::incoming::Incoming&gt;&gt; (423,802,495 samples, 0.26%)</title><rect x="14.3165%" y="869" width="0.2604%" height="15" fill="rgb(250,182,30)" fg:x="23298083365" fg:w="423802495"/><text x="14.5665%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper_util::service::glue::TowerToHyperService&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,axum::serve::handle_connection&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router&gt;::{{closure}}::{{closure}}&gt;&gt;&gt; (416,724,204 samples, 0.26%)</title><rect x="14.3209%" y="853" width="0.2561%" height="15" fill="rgb(248,8,30)" fg:x="23305161656" fg:w="416724204"/><text x="14.5709%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,axum::serve::handle_connection&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router&gt;::{{closure}}::{{closure}}&gt;&gt; (416,724,204 samples, 0.26%)</title><rect x="14.3209%" y="837" width="0.2561%" height="15" fill="rgb(237,120,30)" fg:x="23305161656" fg:w="416724204"/><text x="14.5709%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::Router&gt; (416,724,204 samples, 0.26%)</title><rect x="14.3209%" y="821" width="0.2561%" height="15" fill="rgb(221,146,34)" fg:x="23305161656" fg:w="416724204"/><text x="14.5709%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;axum::routing::RouterInner&lt;()&gt;&gt;&gt; (416,724,204 samples, 0.26%)</title><rect x="14.3209%" y="805" width="0.2561%" height="15" fill="rgb(242,55,13)" fg:x="23305161656" fg:w="416724204"/><text x="14.5709%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (411,985,228 samples, 0.25%)</title><rect x="14.3238%" y="789" width="0.2532%" height="15" fill="rgb(242,112,31)" fg:x="23309900632" fg:w="411985228"/><text x="14.5738%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (410,509,257 samples, 0.25%)</title><rect x="14.3247%" y="773" width="0.2523%" height="15" fill="rgb(249,192,27)" fg:x="23311376603" fg:w="410509257"/><text x="14.5747%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::RouterInner&lt;()&gt;&gt; (407,808,152 samples, 0.25%)</title><rect x="14.3263%" y="757" width="0.2506%" height="15" fill="rgb(208,204,44)" fg:x="23314077708" fg:w="407808152"/><text x="14.5763%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::path_router::PathRouter&lt;(),_&gt;&gt; (400,599,976 samples, 0.25%)</title><rect x="14.3308%" y="741" width="0.2462%" height="15" fill="rgb(208,93,54)" fg:x="23321285884" fg:w="400599976"/><text x="14.5808%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;axum::routing::RouteId,axum::routing::Endpoint&lt;()&gt;&gt;&gt; (398,520,531 samples, 0.24%)</title><rect x="14.3320%" y="725" width="0.2449%" height="15" fill="rgb(242,1,31)" fg:x="23323365329" fg:w="398520531"/><text x="14.5820%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;axum::routing::RouteId,axum::routing::Endpoint&lt;()&gt;,std::hash::random::RandomState&gt;&gt; (398,520,531 samples, 0.24%)</title><rect x="14.3320%" y="709" width="0.2449%" height="15" fill="rgb(241,83,25)" fg:x="23323365329" fg:w="398520531"/><text x="14.5820%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(axum::routing::RouteId,axum::routing::Endpoint&lt;()&gt;)&gt;&gt; (395,541,990 samples, 0.24%)</title><rect x="14.3339%" y="693" width="0.2431%" height="15" fill="rgb(205,169,50)" fg:x="23326343870" fg:w="395541990"/><text x="14.5839%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (395,541,990 samples, 0.24%)</title><rect x="14.3339%" y="677" width="0.2431%" height="15" fill="rgb(239,186,37)" fg:x="23326343870" fg:w="395541990"/><text x="14.5839%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (392,006,596 samples, 0.24%)</title><rect x="14.3360%" y="661" width="0.2409%" height="15" fill="rgb(205,221,10)" fg:x="23329879264" fg:w="392006596"/><text x="14.5860%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::conn::State&gt; (21,277,643 samples, 0.01%)</title><rect x="14.5856%" y="837" width="0.0131%" height="15" fill="rgb(218,196,15)" fg:x="23736039555" fg:w="21277643"/><text x="14.8356%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;http::header::map::HeaderMap&gt;&gt; (16,347,067 samples, 0.01%)</title><rect x="14.5887%" y="821" width="0.0100%" height="15" fill="rgb(218,196,35)" fg:x="23740970131" fg:w="16347067"/><text x="14.8387%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (16,347,067 samples, 0.01%)</title><rect x="14.5887%" y="805" width="0.0100%" height="15" fill="rgb(233,63,24)" fg:x="23740970131" fg:w="16347067"/><text x="14.8387%" y="815.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::into_inner (54,333,743 samples, 0.03%)</title><rect x="14.5769%" y="869" width="0.0334%" height="15" fill="rgb(225,8,4)" fg:x="23721885860" fg:w="54333743"/><text x="14.8269%" y="879.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::into_inner (41,952,281 samples, 0.03%)</title><rect x="14.5845%" y="853" width="0.0258%" height="15" fill="rgb(234,105,35)" fg:x="23734267322" fg:w="41952281"/><text x="14.8345%" y="863.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::into_inner (18,902,405 samples, 0.01%)</title><rect x="14.5987%" y="837" width="0.0116%" height="15" fill="rgb(236,21,32)" fg:x="23757317198" fg:w="18902405"/><text x="14.8487%" y="847.50"></text></g><g><title>hyper::upgrade::Pending::fulfill (52,460,069 samples, 0.03%)</title><rect x="14.6103%" y="869" width="0.0322%" height="15" fill="rgb(228,109,6)" fg:x="23776219603" fg:w="52460069"/><text x="14.8603%" y="879.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (49,264,803 samples, 0.03%)</title><rect x="14.6123%" y="853" width="0.0303%" height="15" fill="rgb(229,215,31)" fg:x="23779414869" fg:w="49264803"/><text x="14.8623%" y="863.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (5,528,564,093 samples, 3.40%)</title><rect x="11.2527%" y="885" width="3.3973%" height="15" fill="rgb(221,52,54)" fg:x="18312183532" fg:w="5528564093"/><text x="11.5027%" y="895.50">&lt;hy..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (40,606,607 samples, 0.02%)</title><rect x="14.6638%" y="853" width="0.0250%" height="15" fill="rgb(252,129,43)" fg:x="23863203364" fg:w="40606607"/><text x="14.9138%" y="863.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (37,247,611 samples, 0.02%)</title><rect x="14.6658%" y="837" width="0.0229%" height="15" fill="rgb(248,183,27)" fg:x="23866562360" fg:w="37247611"/><text x="14.9158%" y="847.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (37,247,611 samples, 0.02%)</title><rect x="14.6658%" y="821" width="0.0229%" height="15" fill="rgb(250,0,22)" fg:x="23866562360" fg:w="37247611"/><text x="14.9158%" y="831.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (28,040,781 samples, 0.02%)</title><rect x="14.6715%" y="805" width="0.0172%" height="15" fill="rgb(213,166,10)" fg:x="23875769190" fg:w="28040781"/><text x="14.9215%" y="815.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (25,682,797 samples, 0.02%)</title><rect x="14.6729%" y="789" width="0.0158%" height="15" fill="rgb(207,163,36)" fg:x="23878127174" fg:w="25682797"/><text x="14.9229%" y="799.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (51,109,242 samples, 0.03%)</title><rect x="14.6638%" y="869" width="0.0314%" height="15" fill="rgb(208,122,22)" fg:x="23863203364" fg:w="51109242"/><text x="14.9138%" y="879.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::ReadVersion&lt;I&gt; as core::future::future::Future&gt;::poll (105,093,536 samples, 0.06%)</title><rect x="14.6500%" y="885" width="0.0646%" height="15" fill="rgb(207,104,49)" fg:x="23840747625" fg:w="105093536"/><text x="14.9000%" y="895.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (19,867,165 samples, 0.01%)</title><rect x="14.7746%" y="837" width="0.0122%" height="15" fill="rgb(248,211,50)" fg:x="24043572613" fg:w="19867165"/><text x="15.0246%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (16,632,889 samples, 0.01%)</title><rect x="14.7868%" y="821" width="0.0102%" height="15" fill="rgb(217,13,45)" fg:x="24063439778" fg:w="16632889"/><text x="15.0368%" y="831.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::new (78,673,488 samples, 0.05%)</title><rect x="14.7516%" y="869" width="0.0483%" height="15" fill="rgb(211,216,49)" fg:x="24006107613" fg:w="78673488"/><text x="15.0016%" y="879.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::new (63,236,629 samples, 0.04%)</title><rect x="14.7611%" y="853" width="0.0389%" height="15" fill="rgb(221,58,53)" fg:x="24021544472" fg:w="63236629"/><text x="15.0111%" y="863.50"></text></g><g><title>hyper::proto::h1::io::WriteBuf&lt;B&gt;::new (21,341,323 samples, 0.01%)</title><rect x="14.7868%" y="837" width="0.0131%" height="15" fill="rgb(220,112,41)" fg:x="24063439778" fg:w="21341323"/><text x="15.0368%" y="847.50"></text></g><g><title>&lt;hyper::common::buf::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (24,621,299 samples, 0.02%)</title><rect x="14.8033%" y="805" width="0.0151%" height="15" fill="rgb(236,38,28)" fg:x="24090200246" fg:w="24621299"/><text x="15.0533%" y="815.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::set_flush_pipeline (36,393,326 samples, 0.02%)</title><rect x="14.7999%" y="869" width="0.0224%" height="15" fill="rgb(227,195,22)" fg:x="24084781101" fg:w="36393326"/><text x="15.0499%" y="879.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::set_flush_pipeline (36,393,326 samples, 0.02%)</title><rect x="14.7999%" y="853" width="0.0224%" height="15" fill="rgb(214,55,33)" fg:x="24084781101" fg:w="36393326"/><text x="15.0499%" y="863.50"></text></g><g><title>bytes::buf::buf_impl::Buf::has_remaining (34,500,007 samples, 0.02%)</title><rect x="14.8011%" y="837" width="0.0212%" height="15" fill="rgb(248,80,13)" fg:x="24086674420" fg:w="34500007"/><text x="15.0511%" y="847.50"></text></g><g><title>&lt;hyper::proto::h1::io::WriteBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (34,500,007 samples, 0.02%)</title><rect x="14.8011%" y="821" width="0.0212%" height="15" fill="rgb(238,52,6)" fg:x="24086674420" fg:w="34500007"/><text x="15.0511%" y="831.50"></text></g><g><title>hyper::server::conn::http1::Builder::serve_connection (192,723,653 samples, 0.12%)</title><rect x="14.7261%" y="885" width="0.1184%" height="15" fill="rgb(224,198,47)" fg:x="23964686687" fg:w="192723653"/><text x="14.9761%" y="895.50"></text></g><g><title>hyper::proto::h1::dispatch::Server&lt;S,B&gt;::new (22,166,068 samples, 0.01%)</title><rect x="14.8309%" y="869" width="0.0136%" height="15" fill="rgb(233,171,20)" fg:x="24135244272" fg:w="22166068"/><text x="15.0809%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (18,129,764 samples, 0.01%)</title><rect x="14.8334%" y="853" width="0.0111%" height="15" fill="rgb(241,30,25)" fg:x="24139280576" fg:w="18129764"/><text x="15.0834%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18,129,764 samples, 0.01%)</title><rect x="14.8334%" y="837" width="0.0111%" height="15" fill="rgb(207,171,38)" fg:x="24139280576" fg:w="18129764"/><text x="15.0834%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (18,129,764 samples, 0.01%)</title><rect x="14.8334%" y="821" width="0.0111%" height="15" fill="rgb(234,70,1)" fg:x="24139280576" fg:w="18129764"/><text x="15.0834%" y="831.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (5,952,713,063 samples, 3.66%)</title><rect x="11.1937%" y="949" width="3.6579%" height="15" fill="rgb(232,178,18)" fg:x="18216180439" fg:w="5952713063"/><text x="11.4437%" y="959.50">&lt;cor..</text></g><g><title>axum::serve::handle_connection::_{{closure}}::_{{closure}}::_{{closure}} (5,950,315,247 samples, 3.66%)</title><rect x="11.1952%" y="933" width="3.6564%" height="15" fill="rgb(241,78,40)" fg:x="18218578255" fg:w="5950315247"/><text x="11.4452%" y="943.50">axum..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,885,954,126 samples, 3.62%)</title><rect x="11.2347%" y="917" width="3.6169%" height="15" fill="rgb(222,35,25)" fg:x="18282939376" fg:w="5885954126"/><text x="11.4847%" y="927.50">&lt;cor..</text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (5,881,929,563 samples, 3.61%)</title><rect x="11.2372%" y="901" width="3.6144%" height="15" fill="rgb(207,92,16)" fg:x="18286963939" fg:w="5881929563"/><text x="11.4872%" y="911.50">&lt;hyp..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::fuse::Fuse&lt;tokio::sync::watch::Sender&lt;()&gt;::closed::{{closure}}&gt;&gt; (53,473,911 samples, 0.03%)</title><rect x="14.8604%" y="949" width="0.0329%" height="15" fill="rgb(216,59,51)" fg:x="24183210029" fg:w="53473911"/><text x="15.1104%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::sync::watch::Sender&lt;()&gt;::closed::{{closure}}&gt;&gt; (50,729,387 samples, 0.03%)</title><rect x="14.8621%" y="933" width="0.0312%" height="15" fill="rgb(213,80,28)" fg:x="24185954553" fg:w="50729387"/><text x="15.1121%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::watch::Sender&lt;()&gt;::closed::{{closure}}&gt; (44,443,556 samples, 0.03%)</title><rect x="14.8660%" y="917" width="0.0273%" height="15" fill="rgb(220,93,7)" fg:x="24192240384" fg:w="44443556"/><text x="15.1160%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::Coop&lt;tokio::sync::watch::Sender&lt;()&gt;::closed::{{closure}}::{{closure}}&gt;&gt; (44,443,556 samples, 0.03%)</title><rect x="14.8660%" y="901" width="0.0273%" height="15" fill="rgb(225,24,44)" fg:x="24192240384" fg:w="44443556"/><text x="15.1160%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::watch::Sender&lt;()&gt;::closed::{{closure}}::{{closure}}&gt; (40,522,938 samples, 0.02%)</title><rect x="14.8684%" y="885" width="0.0249%" height="15" fill="rgb(243,74,40)" fg:x="24196161002" fg:w="40522938"/><text x="15.1184%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::notify::Notified&gt; (38,214,075 samples, 0.02%)</title><rect x="14.8698%" y="869" width="0.0235%" height="15" fill="rgb(228,39,7)" fg:x="24198469865" fg:w="38214075"/><text x="15.1198%" y="879.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::ops::drop::Drop&gt;::drop (38,214,075 samples, 0.02%)</title><rect x="14.8698%" y="853" width="0.0235%" height="15" fill="rgb(227,79,8)" fg:x="24198469865" fg:w="38214075"/><text x="15.1198%" y="863.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (20,190,369 samples, 0.01%)</title><rect x="14.8809%" y="837" width="0.0124%" height="15" fill="rgb(236,58,11)" fg:x="24216493571" fg:w="20190369"/><text x="15.1309%" y="847.50"></text></g><g><title>hyper_util::server::conn::auto::Builder&lt;E&gt;::new (18,955,331 samples, 0.01%)</title><rect x="14.9069%" y="949" width="0.0116%" height="15" fill="rgb(249,63,35)" fg:x="24258938647" fg:w="18955331"/><text x="15.1569%" y="959.50"></text></g><g><title>axum::serve::handle_connection::_{{closure}}::_{{closure}} (6,091,697,843 samples, 3.74%)</title><rect x="11.1839%" y="965" width="3.7433%" height="15" fill="rgb(252,114,16)" fg:x="18200287233" fg:w="6091697843"/><text x="11.4339%" y="975.50">axum..</text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (83,796,242 samples, 0.05%)</title><rect x="15.1088%" y="917" width="0.0515%" height="15" fill="rgb(254,151,24)" fg:x="24587445996" fg:w="83796242"/><text x="15.3588%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (82,016,188 samples, 0.05%)</title><rect x="15.2307%" y="901" width="0.0504%" height="15" fill="rgb(253,54,39)" fg:x="24785719130" fg:w="82016188"/><text x="15.4807%" y="911.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (42,826,388 samples, 0.03%)</title><rect x="15.2547%" y="885" width="0.0263%" height="15" fill="rgb(243,25,45)" fg:x="24824908930" fg:w="42826388"/><text x="15.5047%" y="895.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (35,899,368 samples, 0.02%)</title><rect x="15.2590%" y="869" width="0.0221%" height="15" fill="rgb(234,134,9)" fg:x="24831835950" fg:w="35899368"/><text x="15.5090%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (24,092,791 samples, 0.01%)</title><rect x="15.2810%" y="901" width="0.0148%" height="15" fill="rgb(227,166,31)" fg:x="24867735318" fg:w="24092791"/><text x="15.5310%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (675,630,902 samples, 0.42%)</title><rect x="14.9273%" y="965" width="0.4152%" height="15" fill="rgb(245,143,41)" fg:x="24291985076" fg:w="675630902"/><text x="15.1773%" y="975.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (568,275,232 samples, 0.35%)</title><rect x="14.9932%" y="949" width="0.3492%" height="15" fill="rgb(238,181,32)" fg:x="24399340746" fg:w="568275232"/><text x="15.2432%" y="959.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (403,291,973 samples, 0.25%)</title><rect x="15.0946%" y="933" width="0.2478%" height="15" fill="rgb(224,113,18)" fg:x="24564324005" fg:w="403291973"/><text x="15.3446%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (296,373,740 samples, 0.18%)</title><rect x="15.1603%" y="917" width="0.1821%" height="15" fill="rgb(240,229,28)" fg:x="24671242238" fg:w="296373740"/><text x="15.4103%" y="927.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (75,787,869 samples, 0.05%)</title><rect x="15.2959%" y="901" width="0.0466%" height="15" fill="rgb(250,185,3)" fg:x="24891828109" fg:w="75787869"/><text x="15.5459%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (45,621,517 samples, 0.03%)</title><rect x="15.3144%" y="885" width="0.0280%" height="15" fill="rgb(212,59,25)" fg:x="24921994461" fg:w="45621517"/><text x="15.5644%" y="895.50"></text></g><g><title>core::mem::replace (16,465,651 samples, 0.01%)</title><rect x="15.3323%" y="869" width="0.0101%" height="15" fill="rgb(221,87,20)" fg:x="24951150327" fg:w="16465651"/><text x="15.5823%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (50,663,015 samples, 0.03%)</title><rect x="15.4116%" y="933" width="0.0311%" height="15" fill="rgb(213,74,28)" fg:x="25080143011" fg:w="50663015"/><text x="15.6616%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once (72,647,181 samples, 0.04%)</title><rect x="15.5147%" y="917" width="0.0446%" height="15" fill="rgb(224,132,34)" fg:x="25247925763" fg:w="72647181"/><text x="15.7647%" y="927.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (39,824,536 samples, 0.02%)</title><rect x="15.5348%" y="901" width="0.0245%" height="15" fill="rgb(222,101,24)" fg:x="25280748408" fg:w="39824536"/><text x="15.7848%" y="911.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (24,454,591 samples, 0.02%)</title><rect x="15.5443%" y="885" width="0.0150%" height="15" fill="rgb(254,142,4)" fg:x="25296118353" fg:w="24454591"/><text x="15.7943%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (16,403,715 samples, 0.01%)</title><rect x="15.5593%" y="917" width="0.0101%" height="15" fill="rgb(230,229,49)" fg:x="25320572944" fg:w="16403715"/><text x="15.8093%" y="927.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (432,937,347 samples, 0.27%)</title><rect x="15.3424%" y="965" width="0.2660%" height="15" fill="rgb(238,70,47)" fg:x="24967615978" fg:w="432937347"/><text x="15.5924%" y="975.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (345,630,080 samples, 0.21%)</title><rect x="15.3961%" y="949" width="0.2124%" height="15" fill="rgb(231,160,17)" fg:x="25054923245" fg:w="345630080"/><text x="15.6461%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (269,747,299 samples, 0.17%)</title><rect x="15.4427%" y="933" width="0.1658%" height="15" fill="rgb(218,68,53)" fg:x="25130806026" fg:w="269747299"/><text x="15.6927%" y="943.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (58,371,336 samples, 0.04%)</title><rect x="15.5726%" y="917" width="0.0359%" height="15" fill="rgb(236,111,10)" fg:x="25342181989" fg:w="58371336"/><text x="15.8226%" y="927.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (33,437,173 samples, 0.02%)</title><rect x="15.5879%" y="901" width="0.0205%" height="15" fill="rgb(224,34,41)" fg:x="25367116152" fg:w="33437173"/><text x="15.8379%" y="911.50"></text></g><g><title>__memmove_avx_unaligned (589,130,808 samples, 0.36%)</title><rect x="18.8665%" y="933" width="0.3620%" height="15" fill="rgb(241,118,19)" fg:x="30702586151" fg:w="589130808"/><text x="19.1165%" y="943.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (828,096,754 samples, 0.51%)</title><rect x="18.7264%" y="949" width="0.5089%" height="15" fill="rgb(238,129,25)" fg:x="30474503073" fg:w="828096754"/><text x="18.9764%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (144,989,279 samples, 0.09%)</title><rect x="19.2352%" y="949" width="0.0891%" height="15" fill="rgb(238,22,31)" fg:x="31302599827" fg:w="144989279"/><text x="19.4852%" y="959.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (108,927,364 samples, 0.07%)</title><rect x="19.2574%" y="933" width="0.0669%" height="15" fill="rgb(222,174,48)" fg:x="31338661742" fg:w="108927364"/><text x="19.5074%" y="943.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (108,927,364 samples, 0.07%)</title><rect x="19.2574%" y="917" width="0.0669%" height="15" fill="rgb(206,152,40)" fg:x="31338661742" fg:w="108927364"/><text x="19.5074%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw (39,624,095 samples, 0.02%)</title><rect x="19.5420%" y="885" width="0.0243%" height="15" fill="rgb(218,99,54)" fg:x="31801761810" fg:w="39624095"/><text x="19.7920%" y="895.50"></text></g><g><title>bytes::bytes::ptr_map (63,266,863 samples, 0.04%)</title><rect x="19.5663%" y="885" width="0.0389%" height="15" fill="rgb(220,174,26)" fg:x="31841385905" fg:w="63266863"/><text x="19.8163%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (25,895,095 samples, 0.02%)</title><rect x="19.6052%" y="885" width="0.0159%" height="15" fill="rgb(245,116,9)" fg:x="31904652768" fg:w="25895095"/><text x="19.8552%" y="895.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;::from (264,398,633 samples, 0.16%)</title><rect x="19.4746%" y="901" width="0.1625%" height="15" fill="rgb(209,72,35)" fg:x="31692215770" fg:w="264398633"/><text x="19.7246%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::new (26,066,540 samples, 0.02%)</title><rect x="19.6211%" y="885" width="0.0160%" height="15" fill="rgb(226,126,21)" fg:x="31930547863" fg:w="26066540"/><text x="19.8711%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (45,223,320 samples, 0.03%)</title><rect x="19.6371%" y="901" width="0.0278%" height="15" fill="rgb(227,192,1)" fg:x="31956614403" fg:w="45223320"/><text x="19.8871%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (19,646,734 samples, 0.01%)</title><rect x="19.6649%" y="901" width="0.0121%" height="15" fill="rgb(237,180,29)" fg:x="32001837723" fg:w="19646734"/><text x="19.9149%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::from_raw_in (27,522,461 samples, 0.02%)</title><rect x="19.7418%" y="869" width="0.0169%" height="15" fill="rgb(230,197,35)" fg:x="32126971380" fg:w="27522461"/><text x="19.9918%" y="879.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (27,522,461 samples, 0.02%)</title><rect x="19.7418%" y="853" width="0.0169%" height="15" fill="rgb(246,193,31)" fg:x="32126971380" fg:w="27522461"/><text x="19.9918%" y="863.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (27,522,461 samples, 0.02%)</title><rect x="19.7418%" y="837" width="0.0169%" height="15" fill="rgb(241,36,4)" fg:x="32126971380" fg:w="27522461"/><text x="19.9918%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked::precondition_check (21,749,669 samples, 0.01%)</title><rect x="19.7453%" y="821" width="0.0134%" height="15" fill="rgb(241,130,17)" fg:x="32132744172" fg:w="21749669"/><text x="19.9953%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::into_box (58,801,645 samples, 0.04%)</title><rect x="19.7264%" y="885" width="0.0361%" height="15" fill="rgb(206,137,32)" fg:x="32101930076" fg:w="58801645"/><text x="19.9764%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (18,135,475 samples, 0.01%)</title><rect x="19.7638%" y="885" width="0.0111%" height="15" fill="rgb(237,228,51)" fg:x="32162770849" fg:w="18135475"/><text x="20.0138%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (168,688,990 samples, 0.10%)</title><rect x="19.6770%" y="901" width="0.1037%" height="15" fill="rgb(243,6,42)" fg:x="32021484457" fg:w="168688990"/><text x="19.9270%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (37,270,398 samples, 0.02%)</title><rect x="19.7806%" y="901" width="0.0229%" height="15" fill="rgb(251,74,28)" fg:x="32190173447" fg:w="37270398"/><text x="20.0306%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (718,926,900 samples, 0.44%)</title><rect x="19.3654%" y="933" width="0.4418%" height="15" fill="rgb(218,20,49)" fg:x="31514405408" fg:w="718926900"/><text x="19.6154%" y="943.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (648,566,698 samples, 0.40%)</title><rect x="19.4086%" y="917" width="0.3985%" height="15" fill="rgb(238,28,14)" fg:x="31584765610" fg:w="648566698"/><text x="19.6586%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (50,653,049 samples, 0.03%)</title><rect x="19.9902%" y="853" width="0.0311%" height="15" fill="rgb(229,40,46)" fg:x="32531129950" fg:w="50653049"/><text x="20.2402%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (16,788,454 samples, 0.01%)</title><rect x="20.3481%" y="757" width="0.0103%" height="15" fill="rgb(244,195,20)" fg:x="33113615030" fg:w="16788454"/><text x="20.5981%" y="767.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::_{{closure}} (198,109,333 samples, 0.12%)</title><rect x="20.3584%" y="757" width="0.1217%" height="15" fill="rgb(253,56,35)" fg:x="33130403484" fg:w="198109333"/><text x="20.6084%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (142,010,294 samples, 0.09%)</title><rect x="20.3929%" y="741" width="0.0873%" height="15" fill="rgb(210,149,44)" fg:x="33186502523" fg:w="142010294"/><text x="20.6429%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (55,014,189 samples, 0.03%)</title><rect x="20.4463%" y="725" width="0.0338%" height="15" fill="rgb(240,135,12)" fg:x="33273498628" fg:w="55014189"/><text x="20.6963%" y="735.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked::precondition_check (24,238,339 samples, 0.01%)</title><rect x="20.5030%" y="725" width="0.0149%" height="15" fill="rgb(251,24,50)" fg:x="33365733656" fg:w="24238339"/><text x="20.7530%" y="735.50"></text></g><g><title>core::array::iter::iter_inner::PolymorphicIter&lt;[core::mem::maybe_uninit::MaybeUninit&lt;T&gt;]&gt;::try_fold::_{{closure}} (397,057,192 samples, 0.24%)</title><rect x="20.2804%" y="773" width="0.2440%" height="15" fill="rgb(243,200,47)" fg:x="33003402294" fg:w="397057192"/><text x="20.5304%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (71,946,669 samples, 0.04%)</title><rect x="20.4801%" y="757" width="0.0442%" height="15" fill="rgb(224,166,26)" fg:x="33328512817" fg:w="71946669"/><text x="20.7301%" y="767.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (71,946,669 samples, 0.04%)</title><rect x="20.4801%" y="741" width="0.0442%" height="15" fill="rgb(233,0,47)" fg:x="33328512817" fg:w="71946669"/><text x="20.7301%" y="751.50"></text></g><g><title>core::ops::index_range::IndexRange::assume_range (76,097,908 samples, 0.05%)</title><rect x="20.5243%" y="773" width="0.0468%" height="15" fill="rgb(253,80,5)" fg:x="33400459486" fg:w="76097908"/><text x="20.7743%" y="783.50"></text></g><g><title>core::hint::assert_unchecked (65,860,266 samples, 0.04%)</title><rect x="20.5306%" y="757" width="0.0405%" height="15" fill="rgb(214,133,25)" fg:x="33410697128" fg:w="65860266"/><text x="20.7806%" y="767.50"></text></g><g><title>core::hint::assert_unchecked::precondition_check (56,572,565 samples, 0.03%)</title><rect x="20.5363%" y="741" width="0.0348%" height="15" fill="rgb(209,27,14)" fg:x="33419984829" fg:w="56572565"/><text x="20.7863%" y="751.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (133,331,458 samples, 0.08%)</title><rect x="20.5711%" y="773" width="0.0819%" height="15" fill="rgb(219,102,51)" fg:x="33476557394" fg:w="133331458"/><text x="20.8211%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (106,038,837 samples, 0.07%)</title><rect x="20.5879%" y="757" width="0.0652%" height="15" fill="rgb(237,18,16)" fg:x="33503850015" fg:w="106038837"/><text x="20.8379%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add::precondition_check (30,503,008 samples, 0.02%)</title><rect x="20.6343%" y="741" width="0.0187%" height="15" fill="rgb(241,85,17)" fg:x="33579385844" fg:w="30503008"/><text x="20.8843%" y="751.50"></text></g><g><title>core::array::iter::iter_inner::PolymorphicIter&lt;[core::mem::maybe_uninit::MaybeUninit&lt;T&gt;]&gt;::try_fold (1,219,711,953 samples, 0.75%)</title><rect x="20.0570%" y="805" width="0.7495%" height="15" fill="rgb(236,90,42)" fg:x="32639986433" fg:w="1219711953"/><text x="20.3070%" y="815.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::try_fold (1,194,697,842 samples, 0.73%)</title><rect x="20.0724%" y="789" width="0.7341%" height="15" fill="rgb(249,57,21)" fg:x="32665000544" fg:w="1194697842"/><text x="20.3224%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::array::iter::iter_inner::PolymorphicIter&lt;[core::mem::maybe_uninit::MaybeUninit&lt;u8&gt;]&gt;::try_fold&lt;(),core::ops::try_trait::NeverShortCircuit&lt;()&gt;::wrap_mut_2&lt;(),u8,core::iter::traits::iterator::Iterator::for_each::call&lt;u8,alloc::vec::Vec&lt;u8&gt;::extend_trusted&lt;core::array::iter::IntoIter&lt;u8,8_usize&gt;&gt;::{{closure}}&gt;::{{closure}}&gt;::{{closure}},core::ops::try_trait::NeverShortCircuit&lt;()&gt;&gt;::{{closure}}&gt; (249,809,534 samples, 0.15%)</title><rect x="20.6530%" y="773" width="0.1535%" height="15" fill="rgb(243,12,36)" fg:x="33609888852" fg:w="249809534"/><text x="20.9030%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::ops::try_trait::NeverShortCircuit&lt;()&gt;::wrap_mut_2&lt;(),u8,core::iter::traits::iterator::Iterator::for_each::call&lt;u8,alloc::vec::Vec&lt;u8&gt;::extend_trusted&lt;core::array::iter::IntoIter&lt;u8,8_usize&gt;&gt;::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt; (210,899,351 samples, 0.13%)</title><rect x="20.6770%" y="757" width="0.1296%" height="15" fill="rgb(253,128,47)" fg:x="33648799035" fg:w="210899351"/><text x="20.9270%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;u8,alloc::vec::Vec&lt;u8&gt;::extend_trusted&lt;core::array::iter::IntoIter&lt;u8,8_usize&gt;&gt;::{{closure}}&gt;::{{closure}}&gt; (160,345,073 samples, 0.10%)</title><rect x="20.7080%" y="741" width="0.0985%" height="15" fill="rgb(207,33,20)" fg:x="33699353313" fg:w="160345073"/><text x="20.9580%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;::extend_trusted&lt;core::array::iter::IntoIter&lt;u8,8_usize&gt;&gt;::{{closure}}&gt; (127,064,288 samples, 0.08%)</title><rect x="20.7285%" y="725" width="0.0781%" height="15" fill="rgb(233,215,35)" fg:x="33732634098" fg:w="127064288"/><text x="20.9785%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (91,071,153 samples, 0.06%)</title><rect x="20.7506%" y="709" width="0.0560%" height="15" fill="rgb(249,188,52)" fg:x="33768627233" fg:w="91071153"/><text x="21.0006%" y="719.50"></text></g><g><title>&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (37,743,306 samples, 0.02%)</title><rect x="20.7834%" y="693" width="0.0232%" height="15" fill="rgb(225,12,32)" fg:x="33821955080" fg:w="37743306"/><text x="21.0334%" y="703.50"></text></g><g><title>core::array::iter::iter_inner::PolymorphicIter&lt;[core::mem::maybe_uninit::MaybeUninit&lt;T&gt;]&gt;::fold (1,225,668,353 samples, 0.75%)</title><rect x="20.0570%" y="821" width="0.7532%" height="15" fill="rgb(247,98,14)" fg:x="32639986433" fg:w="1225668353"/><text x="20.3070%" y="831.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,640,922,864 samples, 1.01%)</title><rect x="20.0322%" y="837" width="1.0083%" height="15" fill="rgb(247,219,48)" fg:x="32599611902" fg:w="1640922864"/><text x="20.2822%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::array::iter::IntoIter&lt;u8,8_usize&gt;&gt; (374,879,980 samples, 0.23%)</title><rect x="20.8102%" y="821" width="0.2304%" height="15" fill="rgb(253,60,48)" fg:x="33865654786" fg:w="374879980"/><text x="21.0602%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::array::iter::iter_inner::PolymorphicIter&lt;[core::mem::maybe_uninit::MaybeUninit&lt;u8&gt;: 8]&gt;&gt; (306,493,573 samples, 0.19%)</title><rect x="20.8522%" y="805" width="0.1883%" height="15" fill="rgb(245,15,52)" fg:x="33934041193" fg:w="306493573"/><text x="21.1022%" y="815.50"></text></g><g><title>&lt;core::array::iter::iter_inner::PolymorphicIter&lt;DATA&gt; as core::ops::drop::Drop&gt;::drop (259,392,615 samples, 0.16%)</title><rect x="20.8812%" y="789" width="0.1594%" height="15" fill="rgb(220,133,28)" fg:x="33981142151" fg:w="259392615"/><text x="21.1312%" y="799.50"></text></g><g><title>&lt;[core::mem::maybe_uninit::MaybeUninit&lt;T&gt;: N] as core::array::iter::iter_inner::PartialDrop&gt;::partial_drop (194,013,357 samples, 0.12%)</title><rect x="20.9213%" y="773" width="0.1192%" height="15" fill="rgb(217,180,4)" fg:x="34046521409" fg:w="194013357"/><text x="21.1713%" y="783.50"></text></g><g><title>&lt;[core::mem::maybe_uninit::MaybeUninit&lt;T&gt;] as core::array::iter::iter_inner::PartialDrop&gt;::partial_drop (119,410,491 samples, 0.07%)</title><rect x="20.9672%" y="757" width="0.0734%" height="15" fill="rgb(251,24,1)" fg:x="34121124275" fg:w="119410491"/><text x="21.2172%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (59,824,858 samples, 0.04%)</title><rect x="21.0038%" y="741" width="0.0368%" height="15" fill="rgb(212,185,49)" fg:x="34180709908" fg:w="59824858"/><text x="21.2538%" y="751.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (57,793,029 samples, 0.04%)</title><rect x="21.0051%" y="725" width="0.0355%" height="15" fill="rgb(215,175,22)" fg:x="34182741737" fg:w="57793029"/><text x="21.2551%" y="735.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut::precondition_check (40,604,269 samples, 0.02%)</title><rect x="21.0156%" y="709" width="0.0250%" height="15" fill="rgb(250,205,14)" fg:x="34199930497" fg:w="40604269"/><text x="21.2656%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,866,862,683 samples, 1.15%)</title><rect x="19.9091%" y="885" width="1.1472%" height="15" fill="rgb(225,211,22)" fg:x="32399289985" fg:w="1866862683"/><text x="20.1591%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,837,433,707 samples, 1.13%)</title><rect x="19.9272%" y="869" width="1.1291%" height="15" fill="rgb(251,179,42)" fg:x="32428718961" fg:w="1837433707"/><text x="20.1772%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,675,788,395 samples, 1.03%)</title><rect x="20.0265%" y="853" width="1.0298%" height="15" fill="rgb(208,216,51)" fg:x="32590364273" fg:w="1675788395"/><text x="20.2765%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call (25,617,902 samples, 0.02%)</title><rect x="21.0406%" y="837" width="0.0157%" height="15" fill="rgb(235,36,11)" fg:x="34240534766" fg:w="25617902"/><text x="21.2906%" y="847.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (22,866,205 samples, 0.01%)</title><rect x="21.0563%" y="885" width="0.0141%" height="15" fill="rgb(213,189,28)" fg:x="34266152668" fg:w="22866205"/><text x="21.3063%" y="895.50"></text></g><g><title>__rustc::__rdl_alloc (73,453,076 samples, 0.05%)</title><rect x="21.2012%" y="805" width="0.0451%" height="15" fill="rgb(227,203,42)" fg:x="34501889718" fg:w="73453076"/><text x="21.4512%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (579,624,958 samples, 0.36%)</title><rect x="21.1016%" y="821" width="0.3562%" height="15" fill="rgb(244,72,36)" fg:x="34339926166" fg:w="579624958"/><text x="21.3516%" y="831.50"></text></g><g><title>malloc (332,573,329 samples, 0.20%)</title><rect x="21.2535%" y="805" width="0.2044%" height="15" fill="rgb(213,53,17)" fg:x="34586977795" fg:w="332573329"/><text x="21.5035%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (671,270,301 samples, 0.41%)</title><rect x="21.0704%" y="885" width="0.4125%" height="15" fill="rgb(207,167,3)" fg:x="34289018873" fg:w="671270301"/><text x="21.3204%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (671,270,301 samples, 0.41%)</title><rect x="21.0704%" y="869" width="0.4125%" height="15" fill="rgb(216,98,30)" fg:x="34289018873" fg:w="671270301"/><text x="21.3204%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (669,084,704 samples, 0.41%)</title><rect x="21.0717%" y="853" width="0.4111%" height="15" fill="rgb(236,123,15)" fg:x="34291204470" fg:w="669084704"/><text x="21.3217%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (665,507,983 samples, 0.41%)</title><rect x="21.0739%" y="837" width="0.4089%" height="15" fill="rgb(248,81,50)" fg:x="34294781191" fg:w="665507983"/><text x="21.3239%" y="847.50"></text></g><g><title>core::hint::assert_unchecked (40,738,050 samples, 0.03%)</title><rect x="21.4578%" y="821" width="0.0250%" height="15" fill="rgb(214,120,4)" fg:x="34919551124" fg:w="40738050"/><text x="21.7078%" y="831.50"></text></g><g><title>core::hint::assert_unchecked::precondition_check (40,738,050 samples, 0.03%)</title><rect x="21.4578%" y="805" width="0.0250%" height="15" fill="rgb(208,179,34)" fg:x="34919551124" fg:w="40738050"/><text x="21.7078%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,689,934,985 samples, 1.65%)</title><rect x="19.8311%" y="917" width="1.6529%" height="15" fill="rgb(227,140,7)" fg:x="32272300874" fg:w="2689934985"/><text x="20.0811%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,661,620,780 samples, 1.64%)</title><rect x="19.8485%" y="901" width="1.6355%" height="15" fill="rgb(214,22,6)" fg:x="32300615079" fg:w="2661620780"/><text x="20.0985%" y="911.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::iter::traits::collect::FromIterator&lt;u8&gt;&gt;::from_iter (3,562,533,665 samples, 2.19%)</title><rect x="19.3243%" y="949" width="2.1892%" height="15" fill="rgb(207,137,27)" fg:x="31447589106" fg:w="3562533665"/><text x="19.5743%" y="959.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,776,790,463 samples, 1.71%)</title><rect x="19.8072%" y="933" width="1.7063%" height="15" fill="rgb(210,8,46)" fg:x="32233332308" fg:w="2776790463"/><text x="20.0572%" y="943.50"></text></g><g><title>core::array::iter::_&lt;impl core::iter::traits::collect::IntoIterator for [T: N]&gt;::into_iter (47,886,912 samples, 0.03%)</title><rect x="21.4840%" y="917" width="0.0294%" height="15" fill="rgb(240,16,54)" fg:x="34962235859" fg:w="47886912"/><text x="21.7340%" y="927.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (293,588,641 samples, 0.18%)</title><rect x="23.6473%" y="917" width="0.1804%" height="15" fill="rgb(211,209,29)" fg:x="38482689608" fg:w="293588641"/><text x="23.8973%" y="927.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (934,993,495 samples, 0.57%)</title><rect x="24.6260%" y="885" width="0.5745%" height="15" fill="rgb(226,228,24)" fg:x="40075263804" fg:w="934993495"/><text x="24.8760%" y="895.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (629,367,779 samples, 0.39%)</title><rect x="24.8138%" y="869" width="0.3867%" height="15" fill="rgb(222,84,9)" fg:x="40380889520" fg:w="629367779"/><text x="25.0638%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add::precondition_check (622,416,540 samples, 0.38%)</title><rect x="24.8180%" y="853" width="0.3825%" height="15" fill="rgb(234,203,30)" fg:x="40387840759" fg:w="622416540"/><text x="25.0680%" y="863.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,258,795,313 samples, 1.39%)</title><rect x="23.8306%" y="917" width="1.3880%" height="15" fill="rgb(238,109,14)" fg:x="38780858532" fg:w="2258795313"/><text x="24.0806%" y="927.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,836,522,377 samples, 1.13%)</title><rect x="24.0900%" y="901" width="1.1285%" height="15" fill="rgb(233,206,34)" fg:x="39203131468" fg:w="1836522377"/><text x="24.3400%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (25,637,459 samples, 0.02%)</title><rect x="25.2028%" y="885" width="0.0158%" height="15" fill="rgb(220,167,47)" fg:x="41014016386" fg:w="25637459"/><text x="25.4528%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (627,449,627 samples, 0.39%)</title><rect x="25.4323%" y="869" width="0.3856%" height="15" fill="rgb(238,105,10)" fg:x="41387468849" fg:w="627449627"/><text x="25.6823%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (31,764,534 samples, 0.02%)</title><rect x="26.4314%" y="837" width="0.0195%" height="15" fill="rgb(213,227,17)" fg:x="43013307278" fg:w="31764534"/><text x="26.6814%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (885,304,461 samples, 0.54%)</title><rect x="26.4509%" y="837" width="0.5440%" height="15" fill="rgb(217,132,38)" fg:x="43045071812" fg:w="885304461"/><text x="26.7009%" y="847.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (595,968,701 samples, 0.37%)</title><rect x="26.6287%" y="821" width="0.3662%" height="15" fill="rgb(242,146,4)" fg:x="43334407572" fg:w="595968701"/><text x="26.8787%" y="831.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (484,929,166 samples, 0.30%)</title><rect x="26.6969%" y="805" width="0.2980%" height="15" fill="rgb(212,61,9)" fg:x="43445447107" fg:w="484929166"/><text x="26.9469%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (60,307,348 samples, 0.04%)</title><rect x="26.9578%" y="789" width="0.0371%" height="15" fill="rgb(247,126,22)" fg:x="43870068925" fg:w="60307348"/><text x="27.2078%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (74,464,269 samples, 0.05%)</title><rect x="26.9949%" y="837" width="0.0458%" height="15" fill="rgb(220,196,2)" fg:x="43930376273" fg:w="74464269"/><text x="27.2449%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::as_ref (89,202,325 samples, 0.05%)</title><rect x="27.0407%" y="837" width="0.0548%" height="15" fill="rgb(208,46,4)" fg:x="44004840542" fg:w="89202325"/><text x="27.2907%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (113,783,845 samples, 0.07%)</title><rect x="27.3666%" y="805" width="0.0699%" height="15" fill="rgb(252,104,46)" fg:x="44535301906" fg:w="113783845"/><text x="27.6166%" y="815.50"></text></g><g><title>tokio::macros::support::poll_budget_available (4,428,636,359 samples, 2.72%)</title><rect x="25.2186%" y="917" width="2.7214%" height="15" fill="rgb(237,152,48)" fg:x="41039653845" fg:w="4428636359"/><text x="25.4686%" y="927.50">to..</text></g><g><title>tokio::task::coop::poll_budget_available (4,299,187,995 samples, 2.64%)</title><rect x="25.2981%" y="901" width="2.6418%" height="15" fill="rgb(221,59,37)" fg:x="41169102209" fg:w="4299187995"/><text x="25.5481%" y="911.50">to..</text></g><g><title>tokio::task::coop::has_budget_remaining (4,111,994,506 samples, 2.53%)</title><rect x="25.4132%" y="885" width="2.5268%" height="15" fill="rgb(209,202,51)" fg:x="41356295698" fg:w="4111994506"/><text x="25.6632%" y="895.50">to..</text></g><g><title>tokio::runtime::context::budget (3,453,371,728 samples, 2.12%)</title><rect x="25.8179%" y="869" width="2.1221%" height="15" fill="rgb(228,81,30)" fg:x="42014918476" fg:w="3453371728"/><text x="26.0679%" y="879.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,210,119,671 samples, 1.97%)</title><rect x="25.9673%" y="853" width="1.9726%" height="15" fill="rgb(227,42,39)" fg:x="42258170533" fg:w="3210119671"/><text x="26.2173%" y="863.50">s..</text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1,374,247,337 samples, 0.84%)</title><rect x="27.0955%" y="837" width="0.8445%" height="15" fill="rgb(221,26,2)" fg:x="44094042867" fg:w="1374247337"/><text x="27.3455%" y="847.50"></text></g><g><title>tokio::task::coop::has_budget_remaining::_{{closure}} (1,243,722,384 samples, 0.76%)</title><rect x="27.1757%" y="821" width="0.7643%" height="15" fill="rgb(254,61,31)" fg:x="44224567820" fg:w="1243722384"/><text x="27.4257%" y="831.50"></text></g><g><title>tokio::task::coop::Budget::has_remaining (819,204,453 samples, 0.50%)</title><rect x="27.4365%" y="805" width="0.5034%" height="15" fill="rgb(222,173,38)" fg:x="44649085751" fg:w="819204453"/><text x="27.6865%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (724,228,672 samples, 0.45%)</title><rect x="27.4949%" y="789" width="0.4450%" height="15" fill="rgb(218,50,12)" fg:x="44744061532" fg:w="724228672"/><text x="27.7449%" y="799.50"></text></g><g><title>tokio::task::coop::Budget::has_remaining::_{{closure}} (55,013,089 samples, 0.03%)</title><rect x="27.9061%" y="773" width="0.0338%" height="15" fill="rgb(223,88,40)" fg:x="45413277115" fg:w="55013089"/><text x="28.1561%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (45,598,298 samples, 0.03%)</title><rect x="28.7328%" y="853" width="0.0280%" height="15" fill="rgb(237,54,19)" fg:x="46758495651" fg:w="45598298"/><text x="28.9828%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (470,802,685 samples, 0.29%)</title><rect x="28.7608%" y="853" width="0.2893%" height="15" fill="rgb(251,129,25)" fg:x="46804093949" fg:w="470802685"/><text x="29.0108%" y="863.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (263,689,204 samples, 0.16%)</title><rect x="28.8881%" y="837" width="0.1620%" height="15" fill="rgb(238,97,19)" fg:x="47011207430" fg:w="263689204"/><text x="29.1381%" y="847.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (225,741,023 samples, 0.14%)</title><rect x="28.9114%" y="821" width="0.1387%" height="15" fill="rgb(240,169,18)" fg:x="47049155611" fg:w="225741023"/><text x="29.1614%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (24,804,046 samples, 0.02%)</title><rect x="29.0348%" y="805" width="0.0152%" height="15" fill="rgb(230,187,49)" fg:x="47250092588" fg:w="24804046"/><text x="29.2848%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (95,823,496 samples, 0.06%)</title><rect x="29.0501%" y="853" width="0.0589%" height="15" fill="rgb(209,44,26)" fg:x="47274896634" fg:w="95823496"/><text x="29.3001%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::as_ref (33,645,442 samples, 0.02%)</title><rect x="29.1090%" y="853" width="0.0207%" height="15" fill="rgb(244,0,6)" fg:x="47370720130" fg:w="33645442"/><text x="29.3590%" y="863.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (237,613,260 samples, 0.15%)</title><rect x="29.2651%" y="837" width="0.1460%" height="15" fill="rgb(248,18,21)" fg:x="47624863046" fg:w="237613260"/><text x="29.5151%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (370,446,568 samples, 0.23%)</title><rect x="29.4112%" y="837" width="0.2276%" height="15" fill="rgb(245,180,19)" fg:x="47862476306" fg:w="370446568"/><text x="29.6612%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (309,311,988 samples, 0.19%)</title><rect x="29.4487%" y="821" width="0.1901%" height="15" fill="rgb(252,118,36)" fg:x="47923610886" fg:w="309311988"/><text x="29.6987%" y="831.50"></text></g><g><title>core::mem::replace (309,311,988 samples, 0.19%)</title><rect x="29.4487%" y="805" width="0.1901%" height="15" fill="rgb(210,224,19)" fg:x="47923610886" fg:w="309311988"/><text x="29.6987%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (380,851,719 samples, 0.23%)</title><rect x="29.6388%" y="837" width="0.2340%" height="15" fill="rgb(218,30,24)" fg:x="48232922874" fg:w="380851719"/><text x="29.8888%" y="847.50"></text></g><g><title>tokio::macros::support::thread_rng_n (3,789,485,449 samples, 2.33%)</title><rect x="27.9399%" y="917" width="2.3286%" height="15" fill="rgb(219,75,50)" fg:x="45468290204" fg:w="3789485449"/><text x="28.1899%" y="927.50">t..</text></g><g><title>tokio::runtime::context::thread_rng_n (3,442,874,261 samples, 2.12%)</title><rect x="28.1529%" y="901" width="2.1156%" height="15" fill="rgb(234,72,50)" fg:x="45814901392" fg:w="3442874261"/><text x="28.4029%" y="911.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,252,878,243 samples, 2.00%)</title><rect x="28.2697%" y="885" width="1.9989%" height="15" fill="rgb(219,100,48)" fg:x="46004897410" fg:w="3252878243"/><text x="28.5197%" y="895.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,905,370,671 samples, 1.79%)</title><rect x="28.4832%" y="869" width="1.7853%" height="15" fill="rgb(253,5,41)" fg:x="46352404982" fg:w="2905370671"/><text x="28.7332%" y="879.50">s..</text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (1,853,410,081 samples, 1.14%)</title><rect x="29.1296%" y="853" width="1.1389%" height="15" fill="rgb(247,181,11)" fg:x="47404365572" fg:w="1853410081"/><text x="29.3796%" y="863.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (644,001,060 samples, 0.40%)</title><rect x="29.8728%" y="837" width="0.3957%" height="15" fill="rgb(222,223,25)" fg:x="48613774593" fg:w="644001060"/><text x="30.1228%" y="847.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (414,655,759 samples, 0.25%)</title><rect x="30.0138%" y="821" width="0.2548%" height="15" fill="rgb(214,198,28)" fg:x="48843119894" fg:w="414655759"/><text x="30.2638%" y="831.50"></text></g><g><title>__memmove_avx_unaligned (322,872,197 samples, 0.20%)</title><rect x="31.2273%" y="885" width="0.1984%" height="15" fill="rgb(230,46,43)" fg:x="50817947594" fg:w="322872197"/><text x="31.4773%" y="895.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (362,690,118 samples, 0.22%)</title><rect x="31.2078%" y="901" width="0.2229%" height="15" fill="rgb(233,65,53)" fg:x="50786181535" fg:w="362690118"/><text x="31.4578%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (233,094,010 samples, 0.14%)</title><rect x="32.8939%" y="869" width="0.1432%" height="15" fill="rgb(221,121,27)" fg:x="53530214573" fg:w="233094010"/><text x="33.1439%" y="879.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (254,962,923 samples, 0.16%)</title><rect x="33.3128%" y="837" width="0.1567%" height="15" fill="rgb(247,70,47)" fg:x="54211828849" fg:w="254962923"/><text x="33.5628%" y="847.50"></text></g><g><title>&lt;tokio::loom::std::parking_lot::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (126,034,008 samples, 0.08%)</title><rect x="33.4695%" y="837" width="0.0774%" height="15" fill="rgb(228,85,35)" fg:x="54466791772" fg:w="126034008"/><text x="33.7195%" y="847.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (50,160,133 samples, 0.03%)</title><rect x="33.5161%" y="821" width="0.0308%" height="15" fill="rgb(209,50,18)" fg:x="54542665647" fg:w="50160133"/><text x="33.7661%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (643,171,948 samples, 0.40%)</title><rect x="33.5469%" y="837" width="0.3952%" height="15" fill="rgb(250,19,35)" fg:x="54592825780" fg:w="643171948"/><text x="33.7969%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_sub (558,543,626 samples, 0.34%)</title><rect x="33.5989%" y="821" width="0.3432%" height="15" fill="rgb(253,107,29)" fg:x="54677454102" fg:w="558543626"/><text x="33.8489%" y="831.50"></text></g><g><title>&lt;tokio::sync::broadcast::RecvGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,266,895,317 samples, 0.78%)</title><rect x="33.1648%" y="853" width="0.7785%" height="15" fill="rgb(252,179,29)" fg:x="53970997590" fg:w="1266895317"/><text x="33.4148%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (114,079,198 samples, 0.07%)</title><rect x="34.4246%" y="789" width="0.0701%" height="15" fill="rgb(238,194,6)" fg:x="56021160666" fg:w="114079198"/><text x="34.6746%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1,092,668,086 samples, 0.67%)</title><rect x="34.4947%" y="789" width="0.6714%" height="15" fill="rgb(238,164,29)" fg:x="56135239864" fg:w="1092668086"/><text x="34.7447%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,019,072,635 samples, 0.63%)</title><rect x="34.5399%" y="773" width="0.6262%" height="15" fill="rgb(224,25,9)" fg:x="56208835315" fg:w="1019072635"/><text x="34.7899%" y="783.50"></text></g><g><title>core::fmt::rt::&lt;impl core::fmt::Arguments&gt;::new_const (16,273,668 samples, 0.01%)</title><rect x="35.1561%" y="757" width="0.0100%" height="15" fill="rgb(244,153,23)" fg:x="57211634282" fg:w="16273668"/><text x="35.4061%" y="767.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (29,788,839 samples, 0.02%)</title><rect x="35.1963%" y="757" width="0.0183%" height="15" fill="rgb(212,203,14)" fg:x="57276974572" fg:w="29788839"/><text x="35.4463%" y="767.50"></text></g><g><title>syscall (29,788,839 samples, 0.02%)</title><rect x="35.1963%" y="741" width="0.0183%" height="15" fill="rgb(220,164,20)" fg:x="57276974572" fg:w="29788839"/><text x="35.4463%" y="751.50"></text></g><g><title>[unknown] (26,352,673 samples, 0.02%)</title><rect x="35.1984%" y="725" width="0.0162%" height="15" fill="rgb(222,203,48)" fg:x="57280410738" fg:w="26352673"/><text x="35.4484%" y="735.50"></text></g><g><title>[unknown] (26,138,288 samples, 0.02%)</title><rect x="35.1985%" y="709" width="0.0161%" height="15" fill="rgb(215,159,22)" fg:x="57280625123" fg:w="26138288"/><text x="35.4485%" y="719.50"></text></g><g><title>[unknown] (21,811,308 samples, 0.01%)</title><rect x="35.2012%" y="693" width="0.0134%" height="15" fill="rgb(216,183,47)" fg:x="57284952103" fg:w="21811308"/><text x="35.4512%" y="703.50"></text></g><g><title>[unknown] (17,805,766 samples, 0.01%)</title><rect x="35.2037%" y="677" width="0.0109%" height="15" fill="rgb(229,195,25)" fg:x="57288957645" fg:w="17805766"/><text x="35.4537%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (23,070,532 samples, 0.01%)</title><rect x="35.2185%" y="757" width="0.0142%" height="15" fill="rgb(224,132,51)" fg:x="57313138893" fg:w="23070532"/><text x="35.4685%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (23,070,532 samples, 0.01%)</title><rect x="35.2185%" y="741" width="0.0142%" height="15" fill="rgb(240,63,7)" fg:x="57313138893" fg:w="23070532"/><text x="35.4685%" y="751.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (39,351,313 samples, 0.02%)</title><rect x="35.2327%" y="757" width="0.0242%" height="15" fill="rgb(249,182,41)" fg:x="57336209425" fg:w="39351313"/><text x="35.4827%" y="767.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (39,351,313 samples, 0.02%)</title><rect x="35.2327%" y="741" width="0.0242%" height="15" fill="rgb(243,47,26)" fg:x="57336209425" fg:w="39351313"/><text x="35.4827%" y="751.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (39,351,313 samples, 0.02%)</title><rect x="35.2327%" y="725" width="0.0242%" height="15" fill="rgb(233,48,2)" fg:x="57336209425" fg:w="39351313"/><text x="35.4827%" y="735.50"></text></g><g><title>__vdso_clock_gettime (32,144,373 samples, 0.02%)</title><rect x="35.2371%" y="709" width="0.0198%" height="15" fill="rgb(244,165,34)" fg:x="57343416365" fg:w="32144373"/><text x="35.4871%" y="719.50"></text></g><g><title>[unknown] (30,319,762 samples, 0.02%)</title><rect x="35.2382%" y="693" width="0.0186%" height="15" fill="rgb(207,89,7)" fg:x="57345240976" fg:w="30319762"/><text x="35.4882%" y="703.50"></text></g><g><title>[unknown] (30,319,762 samples, 0.02%)</title><rect x="35.2382%" y="677" width="0.0186%" height="15" fill="rgb(244,117,36)" fg:x="57345240976" fg:w="30319762"/><text x="35.4882%" y="687.50"></text></g><g><title>[unknown] (24,831,957 samples, 0.02%)</title><rect x="35.2416%" y="661" width="0.0153%" height="15" fill="rgb(226,144,34)" fg:x="57350728781" fg:w="24831957"/><text x="35.4916%" y="671.50"></text></g><g><title>[unknown] (18,860,258 samples, 0.01%)</title><rect x="35.2453%" y="645" width="0.0116%" height="15" fill="rgb(213,23,19)" fg:x="57356700480" fg:w="18860258"/><text x="35.4953%" y="655.50"></text></g><g><title>[unknown] (17,206,184 samples, 0.01%)</title><rect x="35.2463%" y="629" width="0.0106%" height="15" fill="rgb(217,75,12)" fg:x="57358354554" fg:w="17206184"/><text x="35.4963%" y="639.50"></text></g><g><title>[unknown] (17,206,184 samples, 0.01%)</title><rect x="35.2463%" y="613" width="0.0106%" height="15" fill="rgb(224,159,17)" fg:x="57358354554" fg:w="17206184"/><text x="35.4963%" y="623.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (37,503,896 samples, 0.02%)</title><rect x="35.2569%" y="757" width="0.0230%" height="15" fill="rgb(217,118,1)" fg:x="57375560738" fg:w="37503896"/><text x="35.5069%" y="767.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (189,022,641 samples, 0.12%)</title><rect x="35.1661%" y="789" width="0.1162%" height="15" fill="rgb(232,180,48)" fg:x="57227907950" fg:w="189022641"/><text x="35.4161%" y="799.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (184,270,620 samples, 0.11%)</title><rect x="35.1691%" y="773" width="0.1132%" height="15" fill="rgb(230,27,33)" fg:x="57232659971" fg:w="184270620"/><text x="35.4191%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::broadcast::RecvGuard&lt;i64&gt;&gt; (3,713,869,188 samples, 2.28%)</title><rect x="33.0372%" y="869" width="2.2821%" height="15" fill="rgb(205,31,21)" fg:x="53763308583" fg:w="3713869188"/><text x="33.2872%" y="879.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::sync::broadcast::Slot&lt;i64&gt;&gt;&gt; (2,239,284,059 samples, 1.38%)</title><rect x="33.9433%" y="853" width="1.3760%" height="15" fill="rgb(253,59,4)" fg:x="55237893712" fg:w="2239284059"/><text x="34.1933%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::broadcast::Slot&lt;i64&gt;&gt;&gt; (2,016,564,271 samples, 1.24%)</title><rect x="34.0802%" y="837" width="1.2392%" height="15" fill="rgb(224,201,9)" fg:x="55460613500" fg:w="2016564271"/><text x="34.3302%" y="847.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,836,699,228 samples, 1.13%)</title><rect x="34.1907%" y="821" width="1.1286%" height="15" fill="rgb(229,206,30)" fg:x="55640478543" fg:w="1836699228"/><text x="34.4407%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1,742,457,407 samples, 1.07%)</title><rect x="34.2486%" y="805" width="1.0707%" height="15" fill="rgb(212,67,47)" fg:x="55734720364" fg:w="1742457407"/><text x="34.4986%" y="815.50"></text></g><g><title>parking_lot_core::parking_lot::deadlock::release_resource (60,247,180 samples, 0.04%)</title><rect x="35.2823%" y="789" width="0.0370%" height="15" fill="rgb(211,96,50)" fg:x="57416930591" fg:w="60247180"/><text x="35.5323%" y="799.50"></text></g><g><title>core::task::wake::Context::waker (202,261,842 samples, 0.12%)</title><rect x="35.3193%" y="869" width="0.1243%" height="15" fill="rgb(252,114,18)" fg:x="57477177771" fg:w="202261842"/><text x="35.5693%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (277,581,732 samples, 0.17%)</title><rect x="37.6501%" y="853" width="0.1706%" height="15" fill="rgb(223,58,37)" fg:x="61270135107" fg:w="277581732"/><text x="37.9001%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (224,836,838 samples, 0.14%)</title><rect x="37.6825%" y="837" width="0.1382%" height="15" fill="rgb(237,70,4)" fg:x="61322880001" fg:w="224836838"/><text x="37.9325%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (224,836,838 samples, 0.14%)</title><rect x="37.6825%" y="821" width="0.1382%" height="15" fill="rgb(244,85,46)" fg:x="61322880001" fg:w="224836838"/><text x="37.9325%" y="831.50"></text></g><g><title>&lt;tokio::loom::std::parking_lot::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (243,736,836 samples, 0.15%)</title><rect x="37.8206%" y="853" width="0.1498%" height="15" fill="rgb(223,39,52)" fg:x="61547716839" fg:w="243736836"/><text x="38.0706%" y="863.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (119,850,837 samples, 0.07%)</title><rect x="37.8968%" y="837" width="0.0736%" height="15" fill="rgb(218,200,14)" fg:x="61671602838" fg:w="119850837"/><text x="38.1468%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (49,211,581 samples, 0.03%)</title><rect x="38.0673%" y="837" width="0.0302%" height="15" fill="rgb(208,171,16)" fg:x="61949198858" fg:w="49211581"/><text x="38.3173%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (41,261,699 samples, 0.03%)</title><rect x="38.3427%" y="773" width="0.0254%" height="15" fill="rgb(234,200,18)" fg:x="62397314321" fg:w="41261699"/><text x="38.5927%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (458,809,512 samples, 0.28%)</title><rect x="38.3681%" y="773" width="0.2819%" height="15" fill="rgb(228,45,11)" fg:x="62438576020" fg:w="458809512"/><text x="38.6181%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (402,067,490 samples, 0.25%)</title><rect x="38.4029%" y="757" width="0.2471%" height="15" fill="rgb(237,182,11)" fg:x="62495318042" fg:w="402067490"/><text x="38.6529%" y="767.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (17,868,818 samples, 0.01%)</title><rect x="38.6634%" y="741" width="0.0110%" height="15" fill="rgb(241,175,49)" fg:x="62919121463" fg:w="17868818"/><text x="38.9134%" y="751.50"></text></g><g><title>syscall (17,868,818 samples, 0.01%)</title><rect x="38.6634%" y="725" width="0.0110%" height="15" fill="rgb(247,38,35)" fg:x="62919121463" fg:w="17868818"/><text x="38.9134%" y="735.50"></text></g><g><title>[unknown] (17,868,818 samples, 0.01%)</title><rect x="38.6634%" y="709" width="0.0110%" height="15" fill="rgb(228,39,49)" fg:x="62919121463" fg:w="17868818"/><text x="38.9134%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (25,733,770 samples, 0.02%)</title><rect x="38.6864%" y="725" width="0.0158%" height="15" fill="rgb(226,101,26)" fg:x="62956656878" fg:w="25733770"/><text x="38.9364%" y="735.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (25,733,770 samples, 0.02%)</title><rect x="38.6864%" y="709" width="0.0158%" height="15" fill="rgb(206,141,19)" fg:x="62956656878" fg:w="25733770"/><text x="38.9364%" y="719.50"></text></g><g><title>__vdso_clock_gettime (23,572,437 samples, 0.01%)</title><rect x="38.6878%" y="693" width="0.0145%" height="15" fill="rgb(211,200,13)" fg:x="62958818211" fg:w="23572437"/><text x="38.9378%" y="703.50"></text></g><g><title>[unknown] (23,572,437 samples, 0.01%)</title><rect x="38.6878%" y="677" width="0.0145%" height="15" fill="rgb(241,121,6)" fg:x="62958818211" fg:w="23572437"/><text x="38.9378%" y="687.50"></text></g><g><title>[unknown] (23,572,437 samples, 0.01%)</title><rect x="38.6878%" y="661" width="0.0145%" height="15" fill="rgb(234,221,29)" fg:x="62958818211" fg:w="23572437"/><text x="38.9378%" y="671.50"></text></g><g><title>[unknown] (18,858,606 samples, 0.01%)</title><rect x="38.6906%" y="645" width="0.0116%" height="15" fill="rgb(229,136,5)" fg:x="62963532042" fg:w="18858606"/><text x="38.9406%" y="655.50"></text></g><g><title>[unknown] (18,858,606 samples, 0.01%)</title><rect x="38.6906%" y="629" width="0.0116%" height="15" fill="rgb(238,36,11)" fg:x="62963532042" fg:w="18858606"/><text x="38.9406%" y="639.50"></text></g><g><title>[unknown] (18,858,606 samples, 0.01%)</title><rect x="38.6906%" y="613" width="0.0116%" height="15" fill="rgb(251,55,41)" fg:x="62963532042" fg:w="18858606"/><text x="38.9406%" y="623.50"></text></g><g><title>[unknown] (18,858,606 samples, 0.01%)</title><rect x="38.6906%" y="597" width="0.0116%" height="15" fill="rgb(242,34,40)" fg:x="62963532042" fg:w="18858606"/><text x="38.9406%" y="607.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (31,868,947 samples, 0.02%)</title><rect x="38.6836%" y="741" width="0.0196%" height="15" fill="rgb(215,42,17)" fg:x="62952140292" fg:w="31868947"/><text x="38.9336%" y="751.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (28,758,804 samples, 0.02%)</title><rect x="38.7032%" y="741" width="0.0177%" height="15" fill="rgb(207,44,46)" fg:x="62984009239" fg:w="28758804"/><text x="38.9532%" y="751.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (120,019,127 samples, 0.07%)</title><rect x="38.6500%" y="773" width="0.0738%" height="15" fill="rgb(211,206,28)" fg:x="62897385532" fg:w="120019127"/><text x="38.9000%" y="783.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (116,042,071 samples, 0.07%)</title><rect x="38.6524%" y="757" width="0.0713%" height="15" fill="rgb(237,167,16)" fg:x="62901362588" fg:w="116042071"/><text x="38.9024%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (926,154,320 samples, 0.57%)</title><rect x="38.1701%" y="789" width="0.5691%" height="15" fill="rgb(233,66,6)" fg:x="62116422963" fg:w="926154320"/><text x="38.4201%" y="799.50"></text></g><g><title>parking_lot_core::parking_lot::deadlock::release_resource (25,172,624 samples, 0.02%)</title><rect x="38.7238%" y="773" width="0.0155%" height="15" fill="rgb(246,123,29)" fg:x="63017404659" fg:w="25172624"/><text x="38.9738%" y="783.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (965,112,867 samples, 0.59%)</title><rect x="38.1462%" y="805" width="0.5931%" height="15" fill="rgb(209,62,40)" fg:x="62077464611" fg:w="965112867"/><text x="38.3962%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::sync::broadcast::Slot&lt;i64&gt;&gt;&gt; (1,046,549,038 samples, 0.64%)</title><rect x="38.0976%" y="837" width="0.6431%" height="15" fill="rgb(218,4,25)" fg:x="61998410439" fg:w="1046549038"/><text x="38.3476%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::broadcast::Slot&lt;i64&gt;&gt;&gt; (990,152,995 samples, 0.61%)</title><rect x="38.1322%" y="821" width="0.6084%" height="15" fill="rgb(253,91,49)" fg:x="62054806482" fg:w="990152995"/><text x="38.3822%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (404,122,220 samples, 0.25%)</title><rect x="38.8382%" y="773" width="0.2483%" height="15" fill="rgb(228,155,29)" fg:x="63203726819" fg:w="404122220"/><text x="39.0882%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (397,270,528 samples, 0.24%)</title><rect x="38.8425%" y="757" width="0.2441%" height="15" fill="rgb(243,57,37)" fg:x="63210578511" fg:w="397270528"/><text x="39.0925%" y="767.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (133,769,246 samples, 0.08%)</title><rect x="39.1341%" y="741" width="0.0822%" height="15" fill="rgb(244,167,17)" fg:x="63685262438" fg:w="133769246"/><text x="39.3841%" y="751.50"></text></g><g><title>syscall (132,171,623 samples, 0.08%)</title><rect x="39.1351%" y="725" width="0.0812%" height="15" fill="rgb(207,181,38)" fg:x="63686860061" fg:w="132171623"/><text x="39.3851%" y="735.50"></text></g><g><title>[unknown] (132,171,623 samples, 0.08%)</title><rect x="39.1351%" y="709" width="0.0812%" height="15" fill="rgb(211,8,23)" fg:x="63686860061" fg:w="132171623"/><text x="39.3851%" y="719.50"></text></g><g><title>[unknown] (125,144,595 samples, 0.08%)</title><rect x="39.1394%" y="693" width="0.0769%" height="15" fill="rgb(235,11,44)" fg:x="63693887089" fg:w="125144595"/><text x="39.3894%" y="703.50"></text></g><g><title>[unknown] (120,763,315 samples, 0.07%)</title><rect x="39.1421%" y="677" width="0.0742%" height="15" fill="rgb(248,18,52)" fg:x="63698268369" fg:w="120763315"/><text x="39.3921%" y="687.50"></text></g><g><title>[unknown] (101,255,302 samples, 0.06%)</title><rect x="39.1541%" y="661" width="0.0622%" height="15" fill="rgb(208,4,7)" fg:x="63717776382" fg:w="101255302"/><text x="39.4041%" y="671.50"></text></g><g><title>[unknown] (96,533,895 samples, 0.06%)</title><rect x="39.1570%" y="645" width="0.0593%" height="15" fill="rgb(240,17,39)" fg:x="63722497789" fg:w="96533895"/><text x="39.4070%" y="655.50"></text></g><g><title>[unknown] (60,364,894 samples, 0.04%)</title><rect x="39.1793%" y="629" width="0.0371%" height="15" fill="rgb(207,170,3)" fg:x="63758666790" fg:w="60364894"/><text x="39.4293%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (74,918,889 samples, 0.05%)</title><rect x="39.2230%" y="741" width="0.0460%" height="15" fill="rgb(236,100,52)" fg:x="63829789011" fg:w="74918889"/><text x="39.4730%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (74,918,889 samples, 0.05%)</title><rect x="39.2230%" y="725" width="0.0460%" height="15" fill="rgb(246,78,51)" fg:x="63829789011" fg:w="74918889"/><text x="39.4730%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (152,283,046 samples, 0.09%)</title><rect x="39.2710%" y="725" width="0.0936%" height="15" fill="rgb(211,17,15)" fg:x="63907979203" fg:w="152283046"/><text x="39.5210%" y="735.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (150,126,576 samples, 0.09%)</title><rect x="39.2723%" y="709" width="0.0923%" height="15" fill="rgb(209,59,46)" fg:x="63910135673" fg:w="150126576"/><text x="39.5223%" y="719.50"></text></g><g><title>__vdso_clock_gettime (135,146,869 samples, 0.08%)</title><rect x="39.2815%" y="693" width="0.0830%" height="15" fill="rgb(210,92,25)" fg:x="63925115380" fg:w="135146869"/><text x="39.5315%" y="703.50"></text></g><g><title>[unknown] (119,818,760 samples, 0.07%)</title><rect x="39.2910%" y="677" width="0.0736%" height="15" fill="rgb(238,174,52)" fg:x="63940443489" fg:w="119818760"/><text x="39.5410%" y="687.50"></text></g><g><title>[unknown] (115,298,075 samples, 0.07%)</title><rect x="39.2937%" y="661" width="0.0708%" height="15" fill="rgb(230,73,7)" fg:x="63944964174" fg:w="115298075"/><text x="39.5437%" y="671.50"></text></g><g><title>[unknown] (92,877,162 samples, 0.06%)</title><rect x="39.3075%" y="645" width="0.0571%" height="15" fill="rgb(243,124,40)" fg:x="63967385087" fg:w="92877162"/><text x="39.5575%" y="655.50"></text></g><g><title>[unknown] (70,082,593 samples, 0.04%)</title><rect x="39.3215%" y="629" width="0.0431%" height="15" fill="rgb(244,170,11)" fg:x="63990179656" fg:w="70082593"/><text x="39.5715%" y="639.50"></text></g><g><title>[unknown] (63,192,348 samples, 0.04%)</title><rect x="39.3257%" y="613" width="0.0388%" height="15" fill="rgb(207,114,54)" fg:x="63997069901" fg:w="63192348"/><text x="39.5757%" y="623.50"></text></g><g><title>[unknown] (59,625,381 samples, 0.04%)</title><rect x="39.3279%" y="597" width="0.0366%" height="15" fill="rgb(205,42,20)" fg:x="64000636868" fg:w="59625381"/><text x="39.5779%" y="607.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (160,578,235 samples, 0.10%)</title><rect x="39.2690%" y="741" width="0.0987%" height="15" fill="rgb(230,30,28)" fg:x="63904707900" fg:w="160578235"/><text x="39.5190%" y="751.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (23,465,657 samples, 0.01%)</title><rect x="39.3717%" y="725" width="0.0144%" height="15" fill="rgb(205,73,54)" fg:x="64071883947" fg:w="23465657"/><text x="39.6217%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (47,779,138 samples, 0.03%)</title><rect x="39.3891%" y="709" width="0.0294%" height="15" fill="rgb(254,227,23)" fg:x="64100143570" fg:w="47779138"/><text x="39.6391%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (41,639,767 samples, 0.03%)</title><rect x="39.3929%" y="693" width="0.0256%" height="15" fill="rgb(228,202,34)" fg:x="64106282941" fg:w="41639767"/><text x="39.6429%" y="703.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (105,984,765 samples, 0.07%)</title><rect x="39.3677%" y="741" width="0.0651%" height="15" fill="rgb(222,225,37)" fg:x="64065286135" fg:w="105984765"/><text x="39.6177%" y="751.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (75,921,296 samples, 0.05%)</title><rect x="39.3861%" y="725" width="0.0467%" height="15" fill="rgb(221,14,54)" fg:x="64095349604" fg:w="75921296"/><text x="39.6361%" y="735.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (23,348,192 samples, 0.01%)</title><rect x="39.4184%" y="709" width="0.0143%" height="15" fill="rgb(254,102,2)" fg:x="64147922708" fg:w="23348192"/><text x="39.6684%" y="719.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (584,649,013 samples, 0.36%)</title><rect x="39.0866%" y="773" width="0.3593%" height="15" fill="rgb(232,104,17)" fg:x="63607849039" fg:w="584649013"/><text x="39.3366%" y="783.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (584,649,013 samples, 0.36%)</title><rect x="39.0866%" y="757" width="0.3593%" height="15" fill="rgb(250,220,14)" fg:x="63607849039" fg:w="584649013"/><text x="39.3366%" y="767.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (21,227,152 samples, 0.01%)</title><rect x="39.4328%" y="741" width="0.0130%" height="15" fill="rgb(241,158,9)" fg:x="64171270900" fg:w="21227152"/><text x="39.6828%" y="751.50"></text></g><g><title>core::mem::drop (2,406,739,896 samples, 1.48%)</title><rect x="37.9704%" y="853" width="1.4789%" height="15" fill="rgb(246,9,43)" fg:x="61791453956" fg:w="2406739896"/><text x="38.2204%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::sync::broadcast::Tail&gt;&gt; (1,153,234,375 samples, 0.71%)</title><rect x="38.7407%" y="837" width="0.7087%" height="15" fill="rgb(206,73,33)" fg:x="63044959477" fg:w="1153234375"/><text x="38.9907%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::broadcast::Tail&gt;&gt; (1,134,861,088 samples, 0.70%)</title><rect x="38.7520%" y="821" width="0.6974%" height="15" fill="rgb(222,79,8)" fg:x="63063332764" fg:w="1134861088"/><text x="39.0020%" y="831.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,088,033,074 samples, 0.67%)</title><rect x="38.7808%" y="805" width="0.6686%" height="15" fill="rgb(234,8,54)" fg:x="63110160778" fg:w="1088033074"/><text x="39.0308%" y="815.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1,061,268,609 samples, 0.65%)</title><rect x="38.7972%" y="789" width="0.6521%" height="15" fill="rgb(209,134,38)" fg:x="63136925243" fg:w="1061268609"/><text x="39.0472%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::sync::broadcast::Tail&gt;&gt; (29,843,909 samples, 0.02%)</title><rect x="39.4573%" y="853" width="0.0183%" height="15" fill="rgb(230,127,29)" fg:x="64211087022" fg:w="29843909"/><text x="39.7073%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::broadcast::Tail&gt;&gt; (29,843,909 samples, 0.02%)</title><rect x="39.4573%" y="837" width="0.0183%" height="15" fill="rgb(242,44,41)" fg:x="64211087022" fg:w="29843909"/><text x="39.7073%" y="847.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (29,843,909 samples, 0.02%)</title><rect x="39.4573%" y="821" width="0.0183%" height="15" fill="rgb(222,56,43)" fg:x="64211087022" fg:w="29843909"/><text x="39.7073%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (28,389,934 samples, 0.02%)</title><rect x="39.4582%" y="805" width="0.0174%" height="15" fill="rgb(238,39,47)" fg:x="64212540997" fg:w="28389934"/><text x="39.7082%" y="815.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (23,114,535 samples, 0.01%)</title><rect x="39.4614%" y="789" width="0.0142%" height="15" fill="rgb(226,79,43)" fg:x="64217816396" fg:w="23114535"/><text x="39.7114%" y="799.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (21,396,500 samples, 0.01%)</title><rect x="39.4625%" y="773" width="0.0131%" height="15" fill="rgb(242,105,53)" fg:x="64219534431" fg:w="21396500"/><text x="39.7125%" y="783.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (137,721,444 samples, 0.08%)</title><rect x="39.8888%" y="805" width="0.0846%" height="15" fill="rgb(251,132,46)" fg:x="64913376976" fg:w="137721444"/><text x="40.1388%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (29,167,181 samples, 0.02%)</title><rect x="39.9555%" y="789" width="0.0179%" height="15" fill="rgb(231,77,14)" fg:x="65021931239" fg:w="29167181"/><text x="40.2055%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3,604,269,183 samples, 2.21%)</title><rect x="39.9734%" y="805" width="2.2148%" height="15" fill="rgb(240,135,9)" fg:x="65051098420" fg:w="3604269183"/><text x="40.2234%" y="815.50">c..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3,490,109,667 samples, 2.14%)</title><rect x="40.0436%" y="789" width="2.1446%" height="15" fill="rgb(248,109,14)" fg:x="65165257936" fg:w="3490109667"/><text x="40.2936%" y="799.50">c..</text></g><g><title>core::fmt::rt::&lt;impl core::fmt::Arguments&gt;::new_const (36,576,627 samples, 0.02%)</title><rect x="42.1658%" y="773" width="0.0225%" height="15" fill="rgb(227,146,52)" fg:x="68618790976" fg:w="36576627"/><text x="42.4158%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (105,743,658 samples, 0.06%)</title><rect x="42.3298%" y="789" width="0.0650%" height="15" fill="rgb(232,54,3)" fg:x="68885797671" fg:w="105743658"/><text x="42.5798%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (102,983,033 samples, 0.06%)</title><rect x="42.3315%" y="773" width="0.0633%" height="15" fill="rgb(229,201,43)" fg:x="68888558296" fg:w="102983033"/><text x="42.5815%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (319,569,851 samples, 0.20%)</title><rect x="42.3948%" y="789" width="0.1964%" height="15" fill="rgb(252,161,33)" fg:x="68991541329" fg:w="319569851"/><text x="42.6448%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (294,468,560 samples, 0.18%)</title><rect x="42.4102%" y="773" width="0.1809%" height="15" fill="rgb(226,146,40)" fg:x="69016642620" fg:w="294468560"/><text x="42.6602%" y="783.50"></text></g><g><title>__memmove_avx_unaligned (34,461,228 samples, 0.02%)</title><rect x="42.6216%" y="757" width="0.0212%" height="15" fill="rgb(219,47,25)" fg:x="69360652824" fg:w="34461228"/><text x="42.8716%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (51,210,689 samples, 0.03%)</title><rect x="42.7682%" y="725" width="0.0315%" height="15" fill="rgb(250,135,13)" fg:x="69599145505" fg:w="51210689"/><text x="43.0182%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (43,398,006 samples, 0.03%)</title><rect x="42.7730%" y="709" width="0.0267%" height="15" fill="rgb(219,229,18)" fg:x="69606958188" fg:w="43398006"/><text x="43.0230%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (27,199,322 samples, 0.02%)</title><rect x="42.8059%" y="709" width="0.0167%" height="15" fill="rgb(217,152,27)" fg:x="69660461267" fg:w="27199322"/><text x="43.0559%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (25,075,155 samples, 0.02%)</title><rect x="42.8226%" y="709" width="0.0154%" height="15" fill="rgb(225,71,47)" fg:x="69687660589" fg:w="25075155"/><text x="43.0726%" y="719.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (372,664,594 samples, 0.23%)</title><rect x="42.7522%" y="741" width="0.2290%" height="15" fill="rgb(220,139,14)" fg:x="69573096429" fg:w="372664594"/><text x="43.0022%" y="751.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (295,404,829 samples, 0.18%)</title><rect x="42.7997%" y="725" width="0.1815%" height="15" fill="rgb(247,54,32)" fg:x="69650356194" fg:w="295404829"/><text x="43.0497%" y="735.50"></text></g><g><title>syscall (223,306,723 samples, 0.14%)</title><rect x="42.8440%" y="709" width="0.1372%" height="15" fill="rgb(252,131,39)" fg:x="69722454300" fg:w="223306723"/><text x="43.0940%" y="719.50"></text></g><g><title>[unknown] (220,362,263 samples, 0.14%)</title><rect x="42.8458%" y="693" width="0.1354%" height="15" fill="rgb(210,108,39)" fg:x="69725398760" fg:w="220362263"/><text x="43.0958%" y="703.50"></text></g><g><title>[unknown] (199,980,985 samples, 0.12%)</title><rect x="42.8583%" y="677" width="0.1229%" height="15" fill="rgb(205,23,29)" fg:x="69745780038" fg:w="199980985"/><text x="43.1083%" y="687.50"></text></g><g><title>[unknown] (177,204,695 samples, 0.11%)</title><rect x="42.8723%" y="661" width="0.1089%" height="15" fill="rgb(246,139,46)" fg:x="69768556328" fg:w="177204695"/><text x="43.1223%" y="671.50"></text></g><g><title>[unknown] (158,645,203 samples, 0.10%)</title><rect x="42.8837%" y="645" width="0.0975%" height="15" fill="rgb(250,81,26)" fg:x="69787115820" fg:w="158645203"/><text x="43.1337%" y="655.50"></text></g><g><title>[unknown] (148,883,709 samples, 0.09%)</title><rect x="42.8897%" y="629" width="0.0915%" height="15" fill="rgb(214,104,7)" fg:x="69796877314" fg:w="148883709"/><text x="43.1397%" y="639.50"></text></g><g><title>[unknown] (95,341,892 samples, 0.06%)</title><rect x="42.9226%" y="613" width="0.0586%" height="15" fill="rgb(233,189,8)" fg:x="69850419131" fg:w="95341892"/><text x="43.1726%" y="623.50"></text></g><g><title>[unknown] (71,433,701 samples, 0.04%)</title><rect x="42.9373%" y="597" width="0.0439%" height="15" fill="rgb(228,141,17)" fg:x="69874327322" fg:w="71433701"/><text x="43.1873%" y="607.50"></text></g><g><title>[unknown] (61,944,103 samples, 0.04%)</title><rect x="42.9431%" y="581" width="0.0381%" height="15" fill="rgb(247,157,1)" fg:x="69883816920" fg:w="61944103"/><text x="43.1931%" y="591.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::prepare_park (40,352,248 samples, 0.02%)</title><rect x="42.9812%" y="741" width="0.0248%" height="15" fill="rgb(249,225,5)" fg:x="69945761023" fg:w="40352248"/><text x="43.2312%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicI32::store (25,904,507 samples, 0.02%)</title><rect x="42.9901%" y="725" width="0.0159%" height="15" fill="rgb(242,55,13)" fg:x="69960208764" fg:w="25904507"/><text x="43.2401%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_store (22,504,322 samples, 0.01%)</title><rect x="42.9921%" y="709" width="0.0138%" height="15" fill="rgb(230,49,50)" fg:x="69963608949" fg:w="22504322"/><text x="43.2421%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (18,468,184 samples, 0.01%)</title><rect x="43.0060%" y="741" width="0.0113%" height="15" fill="rgb(241,111,38)" fg:x="69986113294" fg:w="18468184"/><text x="43.2560%" y="751.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (49,649,646 samples, 0.03%)</title><rect x="43.0173%" y="741" width="0.0305%" height="15" fill="rgb(252,155,4)" fg:x="70004581478" fg:w="49649646"/><text x="43.2673%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (73,920,956 samples, 0.05%)</title><rect x="43.0478%" y="741" width="0.0454%" height="15" fill="rgb(212,69,32)" fg:x="70054231124" fg:w="73920956"/><text x="43.2978%" y="751.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow::_{{closure}} (52,192,313 samples, 0.03%)</title><rect x="43.0612%" y="725" width="0.0321%" height="15" fill="rgb(243,107,47)" fg:x="70075959767" fg:w="52192313"/><text x="43.3112%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (39,556,234 samples, 0.02%)</title><rect x="43.0689%" y="709" width="0.0243%" height="15" fill="rgb(247,130,12)" fg:x="70088595846" fg:w="39556234"/><text x="43.3189%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (36,750,967 samples, 0.02%)</title><rect x="43.0707%" y="693" width="0.0226%" height="15" fill="rgb(233,74,16)" fg:x="70091401113" fg:w="36750967"/><text x="43.3207%" y="703.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (94,197,157 samples, 0.06%)</title><rect x="43.1507%" y="725" width="0.0579%" height="15" fill="rgb(208,58,18)" fg:x="70221651550" fg:w="94197157"/><text x="43.4007%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (71,791,802 samples, 0.04%)</title><rect x="43.1645%" y="709" width="0.0441%" height="15" fill="rgb(242,225,1)" fg:x="70244056905" fg:w="71791802"/><text x="43.4145%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (52,877,284 samples, 0.03%)</title><rect x="43.1761%" y="693" width="0.0325%" height="15" fill="rgb(249,39,40)" fg:x="70262971423" fg:w="52877284"/><text x="43.4261%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (121,791,197 samples, 0.07%)</title><rect x="43.2246%" y="709" width="0.0748%" height="15" fill="rgb(207,72,44)" fg:x="70341949880" fg:w="121791197"/><text x="43.4746%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (115,161,308 samples, 0.07%)</title><rect x="43.2287%" y="693" width="0.0708%" height="15" fill="rgb(215,193,12)" fg:x="70348579769" fg:w="115161308"/><text x="43.4787%" y="703.50"></text></g><g><title>&lt;usize as parking_lot_core::word_lock::LockState&gt;::is_locked (16,537,014 samples, 0.01%)</title><rect x="43.3288%" y="693" width="0.0102%" height="15" fill="rgb(248,41,39)" fg:x="70511449062" fg:w="16537014"/><text x="43.5788%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (26,187,169 samples, 0.02%)</title><rect x="43.3501%" y="693" width="0.0161%" height="15" fill="rgb(253,85,4)" fg:x="70546177731" fg:w="26187169"/><text x="43.6001%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24,279,717 samples, 0.01%)</title><rect x="43.3513%" y="677" width="0.0149%" height="15" fill="rgb(243,70,31)" fg:x="70548085183" fg:w="24279717"/><text x="43.6013%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (59,159,901 samples, 0.04%)</title><rect x="43.3662%" y="693" width="0.0364%" height="15" fill="rgb(253,195,26)" fg:x="70572364900" fg:w="59159901"/><text x="43.6162%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (53,260,430 samples, 0.03%)</title><rect x="43.3698%" y="677" width="0.0327%" height="15" fill="rgb(243,42,11)" fg:x="70578264371" fg:w="53260430"/><text x="43.6198%" y="687.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (54,269,932 samples, 0.03%)</title><rect x="43.5014%" y="629" width="0.0333%" height="15" fill="rgb(239,66,17)" fg:x="70792266867" fg:w="54269932"/><text x="43.7514%" y="639.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (39,338,996 samples, 0.02%)</title><rect x="43.5105%" y="613" width="0.0242%" height="15" fill="rgb(217,132,21)" fg:x="70807197803" fg:w="39338996"/><text x="43.7605%" y="623.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add::precondition_check (39,338,996 samples, 0.02%)</title><rect x="43.5105%" y="597" width="0.0242%" height="15" fill="rgb(252,202,21)" fg:x="70807197803" fg:w="39338996"/><text x="43.7605%" y="607.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (182,997,778 samples, 0.11%)</title><rect x="43.4232%" y="677" width="0.1125%" height="15" fill="rgb(233,98,36)" fg:x="70665039094" fg:w="182997778"/><text x="43.6732%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (91,370,716 samples, 0.06%)</title><rect x="43.4795%" y="661" width="0.0561%" height="15" fill="rgb(216,153,54)" fg:x="70756666156" fg:w="91370716"/><text x="43.7295%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (75,348,015 samples, 0.05%)</title><rect x="43.4893%" y="645" width="0.0463%" height="15" fill="rgb(250,99,7)" fg:x="70772688857" fg:w="75348015"/><text x="43.7393%" y="655.50"></text></g><g><title>__sched_yield (104,706,557 samples, 0.06%)</title><rect x="43.5378%" y="661" width="0.0643%" height="15" fill="rgb(207,56,50)" fg:x="70851560941" fg:w="104706557"/><text x="43.7878%" y="671.50"></text></g><g><title>[unknown] (95,473,805 samples, 0.06%)</title><rect x="43.5435%" y="645" width="0.0587%" height="15" fill="rgb(244,61,34)" fg:x="70860793693" fg:w="95473805"/><text x="43.7935%" y="655.50"></text></g><g><title>[unknown] (93,321,890 samples, 0.06%)</title><rect x="43.5448%" y="629" width="0.0573%" height="15" fill="rgb(241,50,38)" fg:x="70862945608" fg:w="93321890"/><text x="43.7948%" y="639.50"></text></g><g><title>[unknown] (84,582,451 samples, 0.05%)</title><rect x="43.5502%" y="613" width="0.0520%" height="15" fill="rgb(212,166,30)" fg:x="70871685047" fg:w="84582451"/><text x="43.8002%" y="623.50"></text></g><g><title>[unknown] (76,288,409 samples, 0.05%)</title><rect x="43.5552%" y="597" width="0.0469%" height="15" fill="rgb(249,127,32)" fg:x="70879979089" fg:w="76288409"/><text x="43.8052%" y="607.50"></text></g><g><title>[unknown] (68,482,885 samples, 0.04%)</title><rect x="43.5600%" y="581" width="0.0421%" height="15" fill="rgb(209,103,0)" fg:x="70887784613" fg:w="68482885"/><text x="43.8100%" y="591.50"></text></g><g><title>[unknown] (52,492,547 samples, 0.03%)</title><rect x="43.5699%" y="565" width="0.0323%" height="15" fill="rgb(238,209,51)" fg:x="70903774951" fg:w="52492547"/><text x="43.8199%" y="575.50"></text></g><g><title>[unknown] (20,515,959 samples, 0.01%)</title><rect x="43.5895%" y="549" width="0.0126%" height="15" fill="rgb(237,56,23)" fg:x="70935751539" fg:w="20515959"/><text x="43.8395%" y="559.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (317,622,397 samples, 0.20%)</title><rect x="43.4093%" y="693" width="0.1952%" height="15" fill="rgb(215,153,46)" fg:x="70642487051" fg:w="317622397"/><text x="43.6593%" y="703.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (112,072,576 samples, 0.07%)</title><rect x="43.5356%" y="677" width="0.0689%" height="15" fill="rgb(224,49,31)" fg:x="70848036872" fg:w="112072576"/><text x="43.7856%" y="687.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (22,240,343 samples, 0.01%)</title><rect x="43.6096%" y="661" width="0.0137%" height="15" fill="rgb(250,18,42)" fg:x="70968370935" fg:w="22240343"/><text x="43.8596%" y="671.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (18,186,977 samples, 0.01%)</title><rect x="43.6121%" y="645" width="0.0112%" height="15" fill="rgb(215,176,39)" fg:x="70972424301" fg:w="18186977"/><text x="43.8621%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (854,675,736 samples, 0.53%)</title><rect x="43.1089%" y="741" width="0.5252%" height="15" fill="rgb(223,77,29)" fg:x="70153573684" fg:w="854675736"/><text x="43.3589%" y="751.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (685,563,064 samples, 0.42%)</title><rect x="43.2128%" y="725" width="0.4213%" height="15" fill="rgb(234,94,52)" fg:x="70322686356" fg:w="685563064"/><text x="43.4628%" y="735.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (544,508,343 samples, 0.33%)</title><rect x="43.2995%" y="709" width="0.3346%" height="15" fill="rgb(220,154,50)" fg:x="70463741077" fg:w="544508343"/><text x="43.5495%" y="719.50"></text></g><g><title>parking_lot_core::word_lock::with_thread_data (48,139,972 samples, 0.03%)</title><rect x="43.6045%" y="693" width="0.0296%" height="15" fill="rgb(212,11,10)" fg:x="70960109448" fg:w="48139972"/><text x="43.8545%" y="703.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow::_{{closure}} (39,878,485 samples, 0.02%)</title><rect x="43.6096%" y="677" width="0.0245%" height="15" fill="rgb(205,166,19)" fg:x="70968370935" fg:w="39878485"/><text x="43.8596%" y="687.50"></text></g><g><title>&lt;usize as parking_lot_core::word_lock::LockState&gt;::queue_head (18,319,986 samples, 0.01%)</title><rect x="43.6481%" y="725" width="0.0113%" height="15" fill="rgb(244,198,16)" fg:x="71031093444" fg:w="18319986"/><text x="43.8981%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (23,843,294 samples, 0.01%)</title><rect x="43.6662%" y="725" width="0.0147%" height="15" fill="rgb(219,69,12)" fg:x="71060537651" fg:w="23843294"/><text x="43.9162%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (21,244,146 samples, 0.01%)</title><rect x="43.6678%" y="709" width="0.0131%" height="15" fill="rgb(245,30,7)" fg:x="71063136799" fg:w="21244146"/><text x="43.9178%" y="719.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (1,693,764,270 samples, 1.04%)</title><rect x="42.6553%" y="757" width="1.0408%" height="15" fill="rgb(218,221,48)" fg:x="69415387841" fg:w="1693764270"/><text x="42.9053%" y="767.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (100,902,691 samples, 0.06%)</title><rect x="43.6341%" y="741" width="0.0620%" height="15" fill="rgb(216,66,15)" fg:x="71008249420" fg:w="100902691"/><text x="43.8841%" y="751.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock_slow (24,771,166 samples, 0.02%)</title><rect x="43.6809%" y="725" width="0.0152%" height="15" fill="rgb(226,122,50)" fg:x="71084380945" fg:w="24771166"/><text x="43.9309%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (104,599,796 samples, 0.06%)</title><rect x="43.7182%" y="741" width="0.0643%" height="15" fill="rgb(239,156,16)" fg:x="71145202585" fg:w="104599796"/><text x="43.9682%" y="751.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::_{{constant}}::_{{closure}} (86,771,075 samples, 0.05%)</title><rect x="43.7292%" y="725" width="0.0533%" height="15" fill="rgb(224,27,38)" fg:x="71163031306" fg:w="86771075"/><text x="43.9792%" y="735.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (56,530,918 samples, 0.03%)</title><rect x="43.7478%" y="709" width="0.0347%" height="15" fill="rgb(224,39,27)" fg:x="71193271463" fg:w="56530918"/><text x="43.9978%" y="719.50"></text></g><g><title>parking_lot_core::parking_lot::park (1,960,453,460 samples, 1.20%)</title><rect x="42.5912%" y="789" width="1.2047%" height="15" fill="rgb(215,92,29)" fg:x="69311111180" fg:w="1960453460"/><text x="42.8412%" y="799.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1,942,135,295 samples, 1.19%)</title><rect x="42.6024%" y="773" width="1.1934%" height="15" fill="rgb(207,159,16)" fg:x="69329429345" fg:w="1942135295"/><text x="42.8524%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (162,412,529 samples, 0.10%)</title><rect x="43.6961%" y="757" width="0.0998%" height="15" fill="rgb(238,163,47)" fg:x="71109152111" fg:w="162412529"/><text x="43.9461%" y="767.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::_{{closure}} (17,203,262 samples, 0.01%)</title><rect x="43.7853%" y="741" width="0.0106%" height="15" fill="rgb(219,91,49)" fg:x="71254361378" fg:w="17203262"/><text x="44.0353%" y="751.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::new (30,344,991 samples, 0.02%)</title><rect x="43.7959%" y="789" width="0.0186%" height="15" fill="rgb(227,167,31)" fg:x="71271564640" fg:w="30344991"/><text x="44.0459%" y="799.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (160,777,746 samples, 0.10%)</title><rect x="44.1346%" y="725" width="0.0988%" height="15" fill="rgb(234,80,54)" fg:x="71822869445" fg:w="160777746"/><text x="44.3846%" y="735.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (133,505,619 samples, 0.08%)</title><rect x="44.1514%" y="709" width="0.0820%" height="15" fill="rgb(212,114,2)" fg:x="71850141572" fg:w="133505619"/><text x="44.4014%" y="719.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add::precondition_check (129,695,632 samples, 0.08%)</title><rect x="44.1537%" y="693" width="0.0797%" height="15" fill="rgb(234,50,24)" fg:x="71853951559" fg:w="129695632"/><text x="44.4037%" y="703.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (618,928,725 samples, 0.38%)</title><rect x="43.8549%" y="773" width="0.3803%" height="15" fill="rgb(221,68,8)" fg:x="71367689920" fg:w="618928725"/><text x="44.1049%" y="783.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (350,858,867 samples, 0.22%)</title><rect x="44.0197%" y="757" width="0.2156%" height="15" fill="rgb(254,180,31)" fg:x="71635759778" fg:w="350858867"/><text x="44.2697%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (289,003,058 samples, 0.18%)</title><rect x="44.0577%" y="741" width="0.1776%" height="15" fill="rgb(247,130,50)" fg:x="71697615587" fg:w="289003058"/><text x="44.3077%" y="751.50"></text></g><g><title>__sched_yield (381,997,448 samples, 0.23%)</title><rect x="44.2399%" y="757" width="0.2347%" height="15" fill="rgb(211,109,4)" fg:x="71994139443" fg:w="381997448"/><text x="44.4899%" y="767.50"></text></g><g><title>[unknown] (366,689,554 samples, 0.23%)</title><rect x="44.2493%" y="741" width="0.2253%" height="15" fill="rgb(238,50,21)" fg:x="72009447337" fg:w="366689554"/><text x="44.4993%" y="751.50"></text></g><g><title>[unknown] (347,077,141 samples, 0.21%)</title><rect x="44.2614%" y="725" width="0.2133%" height="15" fill="rgb(225,57,45)" fg:x="72029059750" fg:w="347077141"/><text x="44.5114%" y="735.50"></text></g><g><title>[unknown] (318,144,049 samples, 0.20%)</title><rect x="44.2791%" y="709" width="0.1955%" height="15" fill="rgb(209,196,50)" fg:x="72057992842" fg:w="318144049"/><text x="44.5291%" y="719.50"></text></g><g><title>[unknown] (291,528,885 samples, 0.18%)</title><rect x="44.2955%" y="693" width="0.1791%" height="15" fill="rgb(242,140,13)" fg:x="72084608006" fg:w="291528885"/><text x="44.5455%" y="703.50"></text></g><g><title>[unknown] (242,117,887 samples, 0.15%)</title><rect x="44.3258%" y="677" width="0.1488%" height="15" fill="rgb(217,111,7)" fg:x="72134019004" fg:w="242117887"/><text x="44.5758%" y="687.50"></text></g><g><title>[unknown] (195,364,016 samples, 0.12%)</title><rect x="44.3546%" y="661" width="0.1200%" height="15" fill="rgb(253,193,51)" fg:x="72180772875" fg:w="195364016"/><text x="44.6046%" y="671.50"></text></g><g><title>[unknown] (120,969,435 samples, 0.07%)</title><rect x="44.4003%" y="645" width="0.0743%" height="15" fill="rgb(252,70,29)" fg:x="72255167456" fg:w="120969435"/><text x="44.6503%" y="655.50"></text></g><g><title>[unknown] (55,281,392 samples, 0.03%)</title><rect x="44.4407%" y="629" width="0.0340%" height="15" fill="rgb(232,127,12)" fg:x="72320855499" fg:w="55281392"/><text x="44.6907%" y="639.50"></text></g><g><title>[unknown] (33,173,649 samples, 0.02%)</title><rect x="44.4542%" y="613" width="0.0204%" height="15" fill="rgb(211,180,21)" fg:x="72342963242" fg:w="33173649"/><text x="44.7042%" y="623.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (3,757,996,388 samples, 2.31%)</title><rect x="42.1882%" y="805" width="2.3093%" height="15" fill="rgb(229,72,13)" fg:x="68655367603" fg:w="3757996388"/><text x="42.4382%" y="815.50">p..</text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1,109,338,974 samples, 0.68%)</title><rect x="43.8158%" y="789" width="0.6817%" height="15" fill="rgb(240,211,49)" fg:x="71304025017" fg:w="1109338974"/><text x="44.0658%" y="799.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (426,745,346 samples, 0.26%)</title><rect x="44.2353%" y="773" width="0.2622%" height="15" fill="rgb(219,149,40)" fg:x="71986618645" fg:w="426745346"/><text x="44.4853%" y="783.50"></text></g><g><title>std::thread::yield_now (37,227,100 samples, 0.02%)</title><rect x="44.4746%" y="757" width="0.0229%" height="15" fill="rgb(210,127,46)" fg:x="72376136891" fg:w="37227100"/><text x="44.7246%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7,874,868,405 samples, 4.84%)</title><rect x="39.6693%" y="821" width="4.8391%" height="15" fill="rgb(220,106,7)" fg:x="64556218786" fg:w="7874868405"/><text x="39.9193%" y="831.50">&lt;parki..</text></g><g><title>parking_lot_core::parking_lot::deadlock::acquire_resource (17,723,200 samples, 0.01%)</title><rect x="44.4975%" y="805" width="0.0109%" height="15" fill="rgb(249,31,22)" fg:x="72413363991" fg:w="17723200"/><text x="44.7475%" y="815.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (8,233,266,803 samples, 5.06%)</title><rect x="39.4756%" y="853" width="5.0593%" height="15" fill="rgb(253,1,49)" fg:x="64240930931" fg:w="8233266803"/><text x="39.7256%" y="863.50">tokio:..</text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (8,129,635,147 samples, 5.00%)</title><rect x="39.5393%" y="837" width="4.9956%" height="15" fill="rgb(227,144,33)" fg:x="64344562587" fg:w="8129635147"/><text x="39.7893%" y="847.50">lock_a..</text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::make_guard_unchecked (43,110,543 samples, 0.03%)</title><rect x="44.5084%" y="821" width="0.0265%" height="15" fill="rgb(249,163,44)" fg:x="72431087191" fg:w="43110543"/><text x="44.7584%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (42,650,280 samples, 0.03%)</title><rect x="44.8075%" y="789" width="0.0262%" height="15" fill="rgb(234,15,39)" fg:x="72917886052" fg:w="42650280"/><text x="45.0575%" y="799.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (35,092,323 samples, 0.02%)</title><rect x="44.8559%" y="773" width="0.0216%" height="15" fill="rgb(207,66,16)" fg:x="72996527314" fg:w="35092323"/><text x="45.1059%" y="783.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (185,184,216 samples, 0.11%)</title><rect x="44.8337%" y="789" width="0.1138%" height="15" fill="rgb(233,112,24)" fg:x="72960536332" fg:w="185184216"/><text x="45.0837%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (114,100,395 samples, 0.07%)</title><rect x="44.8774%" y="773" width="0.0701%" height="15" fill="rgb(230,90,22)" fg:x="73031620153" fg:w="114100395"/><text x="45.1274%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_add (68,747,666 samples, 0.04%)</title><rect x="44.9053%" y="757" width="0.0422%" height="15" fill="rgb(229,61,13)" fg:x="73076972882" fg:w="68747666"/><text x="45.1553%" y="767.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (374,615,806 samples, 0.23%)</title><rect x="44.7456%" y="821" width="0.2302%" height="15" fill="rgb(225,57,24)" fg:x="72817088290" fg:w="374615806"/><text x="44.9956%" y="831.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (301,420,943 samples, 0.19%)</title><rect x="44.7906%" y="805" width="0.1852%" height="15" fill="rgb(208,169,48)" fg:x="72890283153" fg:w="301420943"/><text x="45.0406%" y="815.50"></text></g><g><title>tokio::runtime::task::waker::raw_waker (45,983,548 samples, 0.03%)</title><rect x="44.9475%" y="789" width="0.0283%" height="15" fill="rgb(244,218,51)" fg:x="73145720548" fg:w="45983548"/><text x="45.1975%" y="799.50"></text></g><g><title>&lt;tokio::loom::std::parking_lot::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (35,954,131 samples, 0.02%)</title><rect x="44.9758%" y="821" width="0.0221%" height="15" fill="rgb(214,148,10)" fg:x="73191704096" fg:w="35954131"/><text x="45.2258%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (46,892,350 samples, 0.03%)</title><rect x="45.0051%" y="821" width="0.0288%" height="15" fill="rgb(225,174,27)" fg:x="73239393291" fg:w="46892350"/><text x="45.2551%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (193,464,635 samples, 0.12%)</title><rect x="45.0339%" y="821" width="0.1189%" height="15" fill="rgb(230,96,26)" fg:x="73286285641" fg:w="193464635"/><text x="45.2839%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked::precondition_check (105,423,805 samples, 0.06%)</title><rect x="45.0880%" y="805" width="0.0648%" height="15" fill="rgb(232,10,30)" fg:x="73374326471" fg:w="105423805"/><text x="45.3380%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (141,970,518 samples, 0.09%)</title><rect x="45.1528%" y="821" width="0.0872%" height="15" fill="rgb(222,8,50)" fg:x="73479750276" fg:w="141970518"/><text x="45.4028%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (111,616,275 samples, 0.07%)</title><rect x="45.1714%" y="805" width="0.0686%" height="15" fill="rgb(213,81,27)" fg:x="73510104519" fg:w="111616275"/><text x="45.4214%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (148,687,324 samples, 0.09%)</title><rect x="45.2400%" y="821" width="0.0914%" height="15" fill="rgb(245,50,10)" fg:x="73621720794" fg:w="148687324"/><text x="45.4900%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_store (116,469,924 samples, 0.07%)</title><rect x="45.2598%" y="805" width="0.0716%" height="15" fill="rgb(216,100,18)" fg:x="73653938194" fg:w="116469924"/><text x="45.5098%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (136,360,147 samples, 0.08%)</title><rect x="45.4690%" y="805" width="0.0838%" height="15" fill="rgb(236,147,54)" fg:x="73994318945" fg:w="136360147"/><text x="45.7190%" y="815.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (41,447,055 samples, 0.03%)</title><rect x="45.5273%" y="789" width="0.0255%" height="15" fill="rgb(205,143,26)" fg:x="74089232037" fg:w="41447055"/><text x="45.7773%" y="799.50"></text></g><g><title>&lt;tokio::sync::broadcast::Waiter as tokio::util::linked_list::Link&gt;::as_raw (91,540,162 samples, 0.06%)</title><rect x="45.5528%" y="805" width="0.0563%" height="15" fill="rgb(236,26,9)" fg:x="74130679092" fg:w="91540162"/><text x="45.8028%" y="815.50"></text></g><g><title>&lt;tokio::sync::broadcast::Waiter as tokio::util::linked_list::Link&gt;::pointers (269,193,368 samples, 0.17%)</title><rect x="45.6090%" y="805" width="0.1654%" height="15" fill="rgb(221,165,53)" fg:x="74222219254" fg:w="269193368"/><text x="45.8590%" y="815.50"></text></g><g><title>tokio::sync::broadcast::Waiter::addr_of_pointers (132,662,823 samples, 0.08%)</title><rect x="45.6929%" y="789" width="0.0815%" height="15" fill="rgb(214,110,17)" fg:x="74358749799" fg:w="132662823"/><text x="45.9429%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (100,521,470 samples, 0.06%)</title><rect x="45.7127%" y="773" width="0.0618%" height="15" fill="rgb(237,197,12)" fg:x="74390891152" fg:w="100521470"/><text x="45.9627%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked::precondition_check (18,882,831 samples, 0.01%)</title><rect x="45.7628%" y="757" width="0.0116%" height="15" fill="rgb(205,84,17)" fg:x="74472529791" fg:w="18882831"/><text x="46.0128%" y="767.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_next (37,975,695 samples, 0.02%)</title><rect x="45.7818%" y="805" width="0.0233%" height="15" fill="rgb(237,18,45)" fg:x="74503344332" fg:w="37975695"/><text x="46.0318%" y="815.50"></text></g><g><title>tokio::sync::broadcast::Receiver&lt;T&gt;::recv_ref (17,105,617,583 samples, 10.51%)</title><rect x="35.4436%" y="869" width="10.5113%" height="15" fill="rgb(221,87,14)" fg:x="57679439613" fg:w="17105617583"/><text x="35.6936%" y="879.50">tokio::sync::br..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,310,859,462 samples, 1.42%)</title><rect x="44.5349%" y="853" width="1.4200%" height="15" fill="rgb(238,186,15)" fg:x="72474197734" fg:w="2310859462"/><text x="44.7849%" y="863.50"></text></g><g><title>tokio::sync::broadcast::Receiver&lt;T&gt;::recv_ref::_{{closure}} (2,262,602,601 samples, 1.39%)</title><rect x="44.5645%" y="837" width="1.3904%" height="15" fill="rgb(208,115,11)" fg:x="72522454595" fg:w="2262602601"/><text x="44.8145%" y="847.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (1,014,649,078 samples, 0.62%)</title><rect x="45.3314%" y="821" width="0.6235%" height="15" fill="rgb(254,175,0)" fg:x="73770408118" fg:w="1014649078"/><text x="45.5814%" y="831.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_prev (243,737,169 samples, 0.15%)</title><rect x="45.8051%" y="805" width="0.1498%" height="15" fill="rgb(227,24,42)" fg:x="74541320027" fg:w="243737169"/><text x="46.0551%" y="815.50"></text></g><g><title>tokio::sync::broadcast::Recv&lt;T&gt;::project (479,156,296 samples, 0.29%)</title><rect x="45.9549%" y="869" width="0.2944%" height="15" fill="rgb(223,211,37)" fg:x="74785057196" fg:w="479156296"/><text x="46.2049%" y="879.50"></text></g><g><title>tokio::sync::broadcast::is_unpin (199,225,109 samples, 0.12%)</title><rect x="46.1269%" y="853" width="0.1224%" height="15" fill="rgb(235,49,27)" fg:x="75064988383" fg:w="199225109"/><text x="46.3769%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (406,797,092 samples, 0.25%)</title><rect x="46.3141%" y="853" width="0.2500%" height="15" fill="rgb(254,97,51)" fg:x="75369600281" fg:w="406797092"/><text x="46.5641%" y="863.50"></text></g><g><title>tokio::sync::broadcast::RecvGuard&lt;T&gt;::clone_value (651,205,202 samples, 0.40%)</title><rect x="46.2493%" y="869" width="0.4002%" height="15" fill="rgb(249,51,40)" fg:x="75264213492" fg:w="651205202"/><text x="46.4993%" y="879.50"></text></g><g><title>&lt;tokio::loom::std::parking_lot::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (139,021,321 samples, 0.09%)</title><rect x="46.5641%" y="853" width="0.0854%" height="15" fill="rgb(210,128,45)" fg:x="75776397373" fg:w="139021321"/><text x="46.8141%" y="863.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (43,826,038 samples, 0.03%)</title><rect x="46.6226%" y="837" width="0.0269%" height="15" fill="rgb(224,137,50)" fg:x="75871592656" fg:w="43826038"/><text x="46.8726%" y="847.50"></text></g><g><title>&lt;tokio::sync::broadcast::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (23,524,949,879 samples, 14.46%)</title><rect x="32.1946%" y="885" width="14.4559%" height="15" fill="rgb(242,15,9)" fg:x="52392069869" fg:w="23524949879"/><text x="32.4446%" y="895.50">&lt;tokio::sync::broadcas..</text></g><g><title>core::cell::Cell&lt;T&gt;::get (68,914,442 samples, 0.04%)</title><rect x="46.8597%" y="853" width="0.0423%" height="15" fill="rgb(233,187,41)" fg:x="76257577338" fg:w="68914442"/><text x="47.1097%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (184,841,489 samples, 0.11%)</title><rect x="46.9883%" y="821" width="0.1136%" height="15" fill="rgb(227,2,29)" fg:x="76466836468" fg:w="184841489"/><text x="47.2383%" y="831.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (142,902,867 samples, 0.09%)</title><rect x="47.0141%" y="805" width="0.0878%" height="15" fill="rgb(222,70,3)" fg:x="76508775090" fg:w="142902867"/><text x="47.2641%" y="815.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (88,970,076 samples, 0.05%)</title><rect x="47.0472%" y="789" width="0.0547%" height="15" fill="rgb(213,11,42)" fg:x="76562707881" fg:w="88970076"/><text x="47.2972%" y="799.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (30,713,333 samples, 0.02%)</title><rect x="47.0830%" y="773" width="0.0189%" height="15" fill="rgb(225,150,9)" fg:x="76620964624" fg:w="30713333"/><text x="47.3330%" y="783.50"></text></g><g><title>tokio::runtime::context::budget (398,386,690 samples, 0.24%)</title><rect x="46.9021%" y="853" width="0.2448%" height="15" fill="rgb(230,162,45)" fg:x="76326491780" fg:w="398386690"/><text x="47.1521%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (348,092,588 samples, 0.21%)</title><rect x="46.9330%" y="837" width="0.2139%" height="15" fill="rgb(222,14,52)" fg:x="76376785882" fg:w="348092588"/><text x="47.1830%" y="847.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (67,394,937 samples, 0.04%)</title><rect x="47.1055%" y="821" width="0.0414%" height="15" fill="rgb(254,198,14)" fg:x="76657483533" fg:w="67394937"/><text x="47.3555%" y="831.50"></text></g><g><title>&lt;tokio::task::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop::_{{closure}} (59,753,218 samples, 0.04%)</title><rect x="47.1102%" y="805" width="0.0367%" height="15" fill="rgb(220,217,30)" fg:x="76665125252" fg:w="59753218"/><text x="47.3602%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (25,895,567 samples, 0.02%)</title><rect x="47.1310%" y="789" width="0.0159%" height="15" fill="rgb(215,146,41)" fg:x="76698982903" fg:w="25895567"/><text x="47.3810%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::RestoreOnPending&gt; (1,162,987,400 samples, 0.71%)</title><rect x="46.6505%" y="885" width="0.7146%" height="15" fill="rgb(217,27,36)" fg:x="75917019748" fg:w="1162987400"/><text x="46.9005%" y="895.50"></text></g><g><title>&lt;tokio::task::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1,099,128,652 samples, 0.68%)</title><rect x="46.6897%" y="869" width="0.6754%" height="15" fill="rgb(219,218,39)" fg:x="75980878496" fg:w="1099128652"/><text x="46.9397%" y="879.50"></text></g><g><title>tokio::task::coop::Budget::is_unconstrained (355,128,678 samples, 0.22%)</title><rect x="47.1469%" y="853" width="0.2182%" height="15" fill="rgb(219,4,42)" fg:x="76724878470" fg:w="355128678"/><text x="47.3969%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (193,381,978 samples, 0.12%)</title><rect x="47.2463%" y="837" width="0.1188%" height="15" fill="rgb(249,119,36)" fg:x="76886625170" fg:w="193381978"/><text x="47.4963%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (123,091,601 samples, 0.08%)</title><rect x="47.2895%" y="821" width="0.0756%" height="15" fill="rgb(209,23,33)" fg:x="76956915547" fg:w="123091601"/><text x="47.5395%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (38,686,940 samples, 0.02%)</title><rect x="47.4856%" y="869" width="0.0238%" height="15" fill="rgb(211,10,0)" fg:x="77276144584" fg:w="38686940"/><text x="47.7356%" y="879.50"></text></g><g><title>tokio::task::coop::RestoreOnPending::made_progress (471,990,032 samples, 0.29%)</title><rect x="47.3651%" y="885" width="0.2900%" height="15" fill="rgb(208,99,37)" fg:x="77080007148" fg:w="471990032"/><text x="47.6151%" y="895.50"></text></g><g><title>tokio::task::coop::Budget::unconstrained (237,165,656 samples, 0.15%)</title><rect x="47.5094%" y="869" width="0.1457%" height="15" fill="rgb(213,132,31)" fg:x="77314831524" fg:w="237165656"/><text x="47.7594%" y="879.50"></text></g><g><title>tokio::task::coop::_::&lt;impl tokio::task::coop::Coop&lt;F&gt;&gt;::project (20,086,217 samples, 0.01%)</title><rect x="47.6552%" y="885" width="0.0123%" height="15" fill="rgb(243,129,40)" fg:x="77551997180" fg:w="20086217"/><text x="47.9052%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (56,563,347 samples, 0.03%)</title><rect x="48.8254%" y="805" width="0.0348%" height="15" fill="rgb(210,66,33)" fg:x="79456340703" fg:w="56563347"/><text x="49.0754%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (1,024,154,665 samples, 0.63%)</title><rect x="48.4617%" y="869" width="0.6293%" height="15" fill="rgb(209,189,4)" fg:x="78864479540" fg:w="1024154665"/><text x="48.7117%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::poll::Poll&lt;tokio::task::coop::RestoreOnPending&gt;&gt; (691,264,262 samples, 0.42%)</title><rect x="48.6662%" y="853" width="0.4248%" height="15" fill="rgb(214,107,37)" fg:x="79197369943" fg:w="691264262"/><text x="48.9162%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::RestoreOnPending&gt; (603,996,246 samples, 0.37%)</title><rect x="48.7199%" y="837" width="0.3712%" height="15" fill="rgb(245,88,54)" fg:x="79284637959" fg:w="603996246"/><text x="48.9699%" y="847.50"></text></g><g><title>&lt;tokio::task::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (533,726,564 samples, 0.33%)</title><rect x="48.7630%" y="821" width="0.3280%" height="15" fill="rgb(205,146,20)" fg:x="79354907641" fg:w="533726564"/><text x="49.0130%" y="831.50"></text></g><g><title>tokio::task::coop::Budget::is_unconstrained (375,730,155 samples, 0.23%)</title><rect x="48.8601%" y="805" width="0.2309%" height="15" fill="rgb(220,161,25)" fg:x="79512904050" fg:w="375730155"/><text x="49.1101%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (186,039,897 samples, 0.11%)</title><rect x="48.9767%" y="789" width="0.1143%" height="15" fill="rgb(215,152,15)" fg:x="79702594308" fg:w="186039897"/><text x="49.2267%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (81,882,110 samples, 0.05%)</title><rect x="49.0407%" y="773" width="0.0503%" height="15" fill="rgb(233,192,44)" fg:x="79806752095" fg:w="81882110"/><text x="49.2907%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (52,283,764 samples, 0.03%)</title><rect x="49.8632%" y="837" width="0.0321%" height="15" fill="rgb(240,170,46)" fg:x="81145262682" fg:w="52283764"/><text x="50.1132%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (649,759,527 samples, 0.40%)</title><rect x="49.8953%" y="837" width="0.3993%" height="15" fill="rgb(207,104,33)" fg:x="81197546446" fg:w="649759527"/><text x="50.1453%" y="847.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (356,561,286 samples, 0.22%)</title><rect x="50.0755%" y="821" width="0.2191%" height="15" fill="rgb(219,21,39)" fg:x="81490744687" fg:w="356561286"/><text x="50.3255%" y="831.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (279,387,916 samples, 0.17%)</title><rect x="50.1229%" y="805" width="0.1717%" height="15" fill="rgb(214,133,29)" fg:x="81567918057" fg:w="279387916"/><text x="50.3729%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (28,128,087 samples, 0.02%)</title><rect x="50.2773%" y="789" width="0.0173%" height="15" fill="rgb(226,93,6)" fg:x="81819177886" fg:w="28128087"/><text x="50.5273%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (82,736,632 samples, 0.05%)</title><rect x="50.2946%" y="837" width="0.0508%" height="15" fill="rgb(252,222,34)" fg:x="81847305973" fg:w="82736632"/><text x="50.5446%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (117,645,295 samples, 0.07%)</title><rect x="51.0553%" y="805" width="0.0723%" height="15" fill="rgb(252,92,48)" fg:x="83085322892" fg:w="117645295"/><text x="51.3053%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::new (55,108,243 samples, 0.03%)</title><rect x="51.1276%" y="805" width="0.0339%" height="15" fill="rgb(245,223,24)" fg:x="83202968187" fg:w="55108243"/><text x="51.3776%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (87,193,821 samples, 0.05%)</title><rect x="51.1615%" y="805" width="0.0536%" height="15" fill="rgb(205,176,3)" fg:x="83258076430" fg:w="87193821"/><text x="51.4115%" y="815.50"></text></g><g><title>tokio::runtime::context::budget (3,973,514,580 samples, 2.44%)</title><rect x="49.0910%" y="869" width="2.4417%" height="15" fill="rgb(235,151,15)" fg:x="79888634205" fg:w="3973514580"/><text x="49.3410%" y="879.50">to..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,599,673,458 samples, 2.21%)</title><rect x="49.3207%" y="853" width="2.2120%" height="15" fill="rgb(237,209,11)" fg:x="80262475327" fg:w="3599673458"/><text x="49.5707%" y="863.50">s..</text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1,924,440,585 samples, 1.18%)</title><rect x="50.3501%" y="837" width="1.1826%" height="15" fill="rgb(243,227,24)" fg:x="81937708200" fg:w="1924440585"/><text x="50.6001%" y="847.50"></text></g><g><title>tokio::task::coop::poll_proceed::_{{closure}} (1,647,993,898 samples, 1.01%)</title><rect x="50.5200%" y="821" width="1.0127%" height="15" fill="rgb(239,193,16)" fg:x="82214154887" fg:w="1647993898"/><text x="50.7700%" y="831.50"></text></g><g><title>tokio::task::coop::Budget::decrement (516,878,534 samples, 0.32%)</title><rect x="51.2151%" y="805" width="0.3176%" height="15" fill="rgb(231,27,9)" fg:x="83345270251" fg:w="516878534"/><text x="51.4651%" y="815.50"></text></g><g><title>&lt;tokio::task::coop::Coop&lt;F&gt; as core::future::future::Future&gt;::poll (32,715,218,518 samples, 20.10%)</title><rect x="31.4306%" y="901" width="20.1033%" height="15" fill="rgb(219,169,10)" fg:x="51148871653" fg:w="32715218518"/><text x="31.6806%" y="911.50">&lt;tokio::task::coop::Coop&lt;F&gt; as c..</text></g><g><title>tokio::task::coop::poll_proceed (6,292,006,774 samples, 3.87%)</title><rect x="47.6675%" y="885" width="3.8664%" height="15" fill="rgb(244,229,43)" fg:x="77572083397" fg:w="6292006774"/><text x="47.9175%" y="895.50">toki..</text></g><g><title>__memmove_avx_unaligned (330,517,623 samples, 0.20%)</title><rect x="51.5364%" y="901" width="0.2031%" height="15" fill="rgb(254,38,20)" fg:x="83868142642" fg:w="330517623"/><text x="51.7864%" y="911.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (940,220,897 samples, 0.58%)</title><rect x="52.1869%" y="853" width="0.5778%" height="15" fill="rgb(250,47,30)" fg:x="84926689510" fg:w="940220897"/><text x="52.4369%" y="863.50"></text></g><g><title>&lt;tokio::sync::broadcast::Recv&lt;T&gt; as core::ops::drop::Drop&gt;::drop::_{{closure}} (787,610,936 samples, 0.48%)</title><rect x="52.2806%" y="837" width="0.4840%" height="15" fill="rgb(224,124,36)" fg:x="85079299471" fg:w="787610936"/><text x="52.5306%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (498,480,436 samples, 0.31%)</title><rect x="52.4583%" y="821" width="0.3063%" height="15" fill="rgb(246,68,51)" fg:x="85368429971" fg:w="498480436"/><text x="52.7083%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (412,881,525 samples, 0.25%)</title><rect x="52.5109%" y="805" width="0.2537%" height="15" fill="rgb(253,43,49)" fg:x="85454028882" fg:w="412881525"/><text x="52.7609%" y="815.50"></text></g><g><title>core::fmt::rt::&lt;impl core::fmt::Arguments&gt;::new_const (38,601,578 samples, 0.02%)</title><rect x="52.7409%" y="789" width="0.0237%" height="15" fill="rgb(219,54,36)" fg:x="85828308829" fg:w="38601578"/><text x="52.9909%" y="799.50"></text></g><g><title>&lt;tokio::sync::broadcast::Recv&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,095,984,746 samples, 0.67%)</title><rect x="52.0921%" y="869" width="0.6735%" height="15" fill="rgb(227,133,34)" fg:x="84772444024" fg:w="1095984746"/><text x="52.3421%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::Coop&lt;tokio::sync::broadcast::Recv&lt;i64&gt;&gt;&gt; (2,554,135,186 samples, 1.57%)</title><rect x="51.7408%" y="901" width="1.5695%" height="15" fill="rgb(247,227,15)" fg:x="84200757899" fg:w="2554135186"/><text x="51.9908%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::broadcast::Recv&lt;i64&gt;&gt; (2,272,755,824 samples, 1.40%)</title><rect x="51.9137%" y="885" width="1.3966%" height="15" fill="rgb(229,96,14)" fg:x="84482137261" fg:w="2272755824"/><text x="52.1637%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::broadcast::WaiterCell&gt; (886,464,315 samples, 0.54%)</title><rect x="52.7655%" y="869" width="0.5447%" height="15" fill="rgb(220,79,17)" fg:x="85868428770" fg:w="886464315"/><text x="53.0155%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;tokio::sync::broadcast::Waiter&gt;&gt; (710,458,981 samples, 0.44%)</title><rect x="52.8737%" y="853" width="0.4366%" height="15" fill="rgb(205,131,53)" fg:x="86044434104" fg:w="710458981"/><text x="53.1237%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;tokio::sync::broadcast::Waiter&gt;&gt; (499,027,594 samples, 0.31%)</title><rect x="53.0036%" y="837" width="0.3066%" height="15" fill="rgb(209,50,29)" fg:x="86255865491" fg:w="499027594"/><text x="53.2536%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::broadcast::Waiter&gt; (366,319,270 samples, 0.23%)</title><rect x="53.0852%" y="821" width="0.2251%" height="15" fill="rgb(245,86,46)" fg:x="86388573815" fg:w="366319270"/><text x="53.3352%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (256,039,477 samples, 0.16%)</title><rect x="53.1529%" y="805" width="0.1573%" height="15" fill="rgb(235,66,46)" fg:x="86498853608" fg:w="256039477"/><text x="53.4029%" y="815.50"></text></g><g><title>__memmove_avx_unaligned (410,710,842 samples, 0.25%)</title><rect x="53.6372%" y="885" width="0.2524%" height="15" fill="rgb(232,148,31)" fg:x="87286849659" fg:w="410710842"/><text x="53.8872%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicBool::new (165,738,555 samples, 0.10%)</title><rect x="53.8895%" y="885" width="0.1018%" height="15" fill="rgb(217,149,8)" fg:x="87697560501" fg:w="165738555"/><text x="54.1395%" y="895.50"></text></g><g><title>__memmove_avx_unaligned (148,844,437 samples, 0.09%)</title><rect x="54.0817%" y="869" width="0.0915%" height="15" fill="rgb(209,183,11)" fg:x="88010335681" fg:w="148844437"/><text x="54.3317%" y="879.50"></text></g><g><title>__memmove_avx_unaligned (702,861,177 samples, 0.43%)</title><rect x="54.1732%" y="853" width="0.4319%" height="15" fill="rgb(208,55,20)" fg:x="88159180118" fg:w="702861177"/><text x="54.4232%" y="863.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::new (747,470,860 samples, 0.46%)</title><rect x="54.1732%" y="869" width="0.4593%" height="15" fill="rgb(218,39,14)" fg:x="88159180118" fg:w="747470860"/><text x="54.4232%" y="879.50"></text></g><g><title>memcpy@plt (44,609,683 samples, 0.03%)</title><rect x="54.6051%" y="853" width="0.0274%" height="15" fill="rgb(216,169,33)" fg:x="88862041295" fg:w="44609683"/><text x="54.8551%" y="863.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::new (1,045,662,935 samples, 0.64%)</title><rect x="53.9914%" y="885" width="0.6426%" height="15" fill="rgb(233,80,24)" fg:x="87863299056" fg:w="1045662935"/><text x="54.2414%" y="895.50"></text></g><g><title>tokio::sync::broadcast::Recv&lt;T&gt;::new (2,333,899,175 samples, 1.43%)</title><rect x="53.3103%" y="901" width="1.4342%" height="15" fill="rgb(213,179,31)" fg:x="86754893085" fg:w="2333899175"/><text x="53.5603%" y="911.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::new (179,830,269 samples, 0.11%)</title><rect x="54.6339%" y="885" width="0.1105%" height="15" fill="rgb(209,19,5)" fg:x="88908961991" fg:w="179830269"/><text x="54.8839%" y="895.50"></text></g><g><title>__memmove_avx_unaligned (475,966,367 samples, 0.29%)</title><rect x="54.7736%" y="885" width="0.2925%" height="15" fill="rgb(219,18,35)" fg:x="89136213139" fg:w="475966367"/><text x="55.0236%" y="895.50"></text></g><g><title>tokio::sync::broadcast::Receiver&lt;T&gt;::recv::_{{closure}} (40,356,036,798 samples, 24.80%)</title><rect x="30.2686%" y="917" width="24.7985%" height="15" fill="rgb(209,169,16)" fg:x="49257775653" fg:w="40356036798"/><text x="30.5186%" y="927.50">tokio::sync::broadcast::Receiver&lt;T&gt;::rec..</text></g><g><title>tokio::task::coop::cooperative (525,020,191 samples, 0.32%)</title><rect x="54.7444%" y="901" width="0.3226%" height="15" fill="rgb(245,90,51)" fg:x="89088792260" fg:w="525020191"/><text x="54.9944%" y="911.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (24,830,277 samples, 0.02%)</title><rect x="55.6933%" y="901" width="0.0153%" height="15" fill="rgb(220,99,45)" fg:x="90632951945" fg:w="24830277"/><text x="55.9433%" y="911.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (223,469,932 samples, 0.14%)</title><rect x="57.1201%" y="821" width="0.1373%" height="15" fill="rgb(249,89,25)" fg:x="92954861888" fg:w="223469932"/><text x="57.3701%" y="831.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (176,943,976 samples, 0.11%)</title><rect x="57.1487%" y="805" width="0.1087%" height="15" fill="rgb(239,193,0)" fg:x="93001387844" fg:w="176943976"/><text x="57.3987%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (54,655,205 samples, 0.03%)</title><rect x="58.4237%" y="741" width="0.0336%" height="15" fill="rgb(231,126,1)" fg:x="95076307119" fg:w="54655205"/><text x="58.6737%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (18,028,695 samples, 0.01%)</title><rect x="58.7936%" y="709" width="0.0111%" height="15" fill="rgb(243,166,3)" fg:x="95678204071" fg:w="18028695"/><text x="59.0436%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (448,945,189 samples, 0.28%)</title><rect x="58.8047%" y="709" width="0.2759%" height="15" fill="rgb(223,22,34)" fg:x="95696232766" fg:w="448945189"/><text x="59.0547%" y="719.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (271,170,969 samples, 0.17%)</title><rect x="58.9139%" y="693" width="0.1666%" height="15" fill="rgb(251,52,51)" fg:x="95874006986" fg:w="271170969"/><text x="59.1639%" y="703.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (218,760,981 samples, 0.13%)</title><rect x="58.9461%" y="677" width="0.1344%" height="15" fill="rgb(221,165,28)" fg:x="95926416974" fg:w="218760981"/><text x="59.1961%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (26,510,474 samples, 0.02%)</title><rect x="59.0642%" y="661" width="0.0163%" height="15" fill="rgb(218,121,47)" fg:x="96118667481" fg:w="26510474"/><text x="59.3142%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (24,000,961 samples, 0.01%)</title><rect x="59.0805%" y="709" width="0.0147%" height="15" fill="rgb(209,120,9)" fg:x="96145177955" fg:w="24000961"/><text x="59.3305%" y="719.50"></text></g><g><title>tokio::runtime::context::budget (1,323,330,735 samples, 0.81%)</title><rect x="58.4573%" y="741" width="0.8132%" height="15" fill="rgb(236,68,12)" fg:x="95130962324" fg:w="1323330735"/><text x="58.7073%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,220,076,610 samples, 0.75%)</title><rect x="58.5208%" y="725" width="0.7497%" height="15" fill="rgb(225,194,26)" fg:x="95234216449" fg:w="1220076610"/><text x="58.7708%" y="735.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (279,343,582 samples, 0.17%)</title><rect x="59.0988%" y="709" width="0.1717%" height="15" fill="rgb(231,84,39)" fg:x="96174949477" fg:w="279343582"/><text x="59.3488%" y="719.50"></text></g><g><title>&lt;tokio::task::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop::_{{closure}} (207,277,169 samples, 0.13%)</title><rect x="59.1431%" y="693" width="0.1274%" height="15" fill="rgb(210,11,45)" fg:x="96247015890" fg:w="207277169"/><text x="59.3931%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (89,672,546 samples, 0.06%)</title><rect x="59.2154%" y="677" width="0.0551%" height="15" fill="rgb(224,54,52)" fg:x="96364620513" fg:w="89672546"/><text x="59.4654%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep::poll_elapsed::{{closure}}&gt; (1,991,377,668 samples, 1.22%)</title><rect x="58.1740%" y="789" width="1.2237%" height="15" fill="rgb(238,102,14)" fg:x="94669916083" fg:w="1991377668"/><text x="58.4240%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::RestoreOnPending&gt; (1,884,063,593 samples, 1.16%)</title><rect x="58.2399%" y="773" width="1.1577%" height="15" fill="rgb(243,160,52)" fg:x="94777230158" fg:w="1884063593"/><text x="58.4899%" y="783.50"></text></g><g><title>&lt;tokio::task::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1,789,915,243 samples, 1.10%)</title><rect x="58.2978%" y="757" width="1.0999%" height="15" fill="rgb(216,114,19)" fg:x="94871378508" fg:w="1789915243"/><text x="58.5478%" y="767.50"></text></g><g><title>tokio::task::coop::Budget::is_unconstrained (207,000,692 samples, 0.13%)</title><rect x="59.2705%" y="741" width="0.1272%" height="15" fill="rgb(244,166,37)" fg:x="96454293059" fg:w="207000692"/><text x="59.5205%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (132,207,156 samples, 0.08%)</title><rect x="59.3164%" y="725" width="0.0812%" height="15" fill="rgb(246,29,44)" fg:x="96529086595" fg:w="132207156"/><text x="59.5664%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (64,764,434 samples, 0.04%)</title><rect x="59.3579%" y="709" width="0.0398%" height="15" fill="rgb(215,56,53)" fg:x="96596529317" fg:w="64764434"/><text x="59.6079%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep::poll_elapsed::{{closure}}&gt; (16,331,524 samples, 0.01%)</title><rect x="59.3977%" y="773" width="0.0100%" height="15" fill="rgb(217,60,2)" fg:x="96661293751" fg:w="16331524"/><text x="59.6477%" y="783.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (2,313,333,039 samples, 1.42%)</title><rect x="57.9902%" y="805" width="1.4215%" height="15" fill="rgb(207,26,24)" fg:x="94370877671" fg:w="2313333039"/><text x="58.2402%" y="815.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed::_{{closure}} (22,916,959 samples, 0.01%)</title><rect x="59.3977%" y="789" width="0.0141%" height="15" fill="rgb(252,210,15)" fg:x="96661293751" fg:w="22916959"/><text x="59.6477%" y="799.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::Deref&gt;::deref (148,487,776 samples, 0.09%)</title><rect x="60.1093%" y="757" width="0.0912%" height="15" fill="rgb(253,209,26)" fg:x="97819344567" fg:w="148487776"/><text x="60.3593%" y="767.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::Deref&gt;::deref (466,713,413 samples, 0.29%)</title><rect x="59.9180%" y="789" width="0.2868%" height="15" fill="rgb(238,170,14)" fg:x="97508101459" fg:w="466713413"/><text x="60.1680%" y="799.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_ref (249,408,866 samples, 0.15%)</title><rect x="60.0516%" y="773" width="0.1533%" height="15" fill="rgb(216,178,15)" fg:x="97725406006" fg:w="249408866"/><text x="60.3016%" y="783.50"></text></g><g><title>core::task::wake::Context::waker (137,148,999 samples, 0.08%)</title><rect x="60.2056%" y="789" width="0.0843%" height="15" fill="rgb(250,197,2)" fg:x="97976139153" fg:w="137148999"/><text x="60.4556%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (563,849,973 samples, 0.35%)</title><rect x="60.7084%" y="757" width="0.3465%" height="15" fill="rgb(212,70,42)" fg:x="98794344699" fg:w="563849973"/><text x="60.9584%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (294,950,557 samples, 0.18%)</title><rect x="60.8737%" y="741" width="0.1812%" height="15" fill="rgb(227,213,9)" fg:x="99063244115" fg:w="294950557"/><text x="61.1237%" y="751.50"></text></g><g><title>core::fmt::rt::&lt;impl core::fmt::Arguments&gt;::new_const (26,875,105 samples, 0.02%)</title><rect x="61.0384%" y="725" width="0.0165%" height="15" fill="rgb(245,99,25)" fg:x="99331319567" fg:w="26875105"/><text x="61.2884%" y="735.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::read_state (798,575,266 samples, 0.49%)</title><rect x="60.5674%" y="773" width="0.4907%" height="15" fill="rgb(250,82,29)" fg:x="98564890382" fg:w="798575266"/><text x="60.8174%" y="783.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (301,887,485 samples, 0.19%)</title><rect x="62.3806%" y="741" width="0.1855%" height="15" fill="rgb(241,226,54)" fg:x="101515574482" fg:w="301887485"/><text x="62.6306%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;&gt; (149,757,596 samples, 0.09%)</title><rect x="62.5661%" y="741" width="0.0920%" height="15" fill="rgb(221,99,41)" fg:x="101817461967" fg:w="149757596"/><text x="62.8161%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (141,054,899 samples, 0.09%)</title><rect x="62.6581%" y="741" width="0.0867%" height="15" fill="rgb(213,90,21)" fg:x="101967219563" fg:w="141054899"/><text x="62.9081%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;&gt; (182,533,283 samples, 0.11%)</title><rect x="62.7448%" y="741" width="0.1122%" height="15" fill="rgb(205,208,24)" fg:x="102108274462" fg:w="182533283"/><text x="62.9948%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (189,600,326 samples, 0.12%)</title><rect x="62.8570%" y="741" width="0.1165%" height="15" fill="rgb(246,31,12)" fg:x="102290807745" fg:w="189600326"/><text x="63.1070%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,407,301,247 samples, 0.86%)</title><rect x="62.9735%" y="741" width="0.8648%" height="15" fill="rgb(213,154,6)" fg:x="102480408071" fg:w="1407301247"/><text x="63.2235%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,191,739,181 samples, 0.73%)</title><rect x="63.1060%" y="725" width="0.7323%" height="15" fill="rgb(222,163,29)" fg:x="102695970137" fg:w="1191739181"/><text x="63.3560%" y="735.50"></text></g><g><title>core::fmt::rt::&lt;impl core::fmt::Arguments&gt;::new_const (33,670,842 samples, 0.02%)</title><rect x="63.8176%" y="709" width="0.0207%" height="15" fill="rgb(227,201,8)" fg:x="103854038476" fg:w="33670842"/><text x="64.0676%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (132,983,233 samples, 0.08%)</title><rect x="64.0929%" y="709" width="0.0817%" height="15" fill="rgb(233,9,32)" fg:x="104302062188" fg:w="132983233"/><text x="64.3429%" y="719.50"></text></g><g><title>core::mem::replace (47,229,166 samples, 0.03%)</title><rect x="64.1456%" y="693" width="0.0290%" height="15" fill="rgb(217,54,24)" fg:x="104387816255" fg:w="47229166"/><text x="64.3956%" y="703.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (623,004,093 samples, 0.38%)</title><rect x="63.8383%" y="741" width="0.3828%" height="15" fill="rgb(235,192,0)" fg:x="103887709318" fg:w="623004093"/><text x="64.0883%" y="751.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::_{{closure}} (464,633,091 samples, 0.29%)</title><rect x="63.9356%" y="725" width="0.2855%" height="15" fill="rgb(235,45,9)" fg:x="104046080320" fg:w="464633091"/><text x="64.1856%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (75,667,990 samples, 0.05%)</title><rect x="64.1746%" y="709" width="0.0465%" height="15" fill="rgb(246,42,40)" fg:x="104435045421" fg:w="75667990"/><text x="64.4246%" y="719.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (355,235,205 samples, 0.22%)</title><rect x="66.3782%" y="581" width="0.2183%" height="15" fill="rgb(248,111,24)" fg:x="108021091482" fg:w="355235205"/><text x="66.6282%" y="591.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked::precondition_check (44,148,517 samples, 0.03%)</title><rect x="66.5694%" y="565" width="0.0271%" height="15" fill="rgb(249,65,22)" fg:x="108332178170" fg:w="44148517"/><text x="66.8194%" y="575.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (135,689,303 samples, 0.08%)</title><rect x="66.6746%" y="565" width="0.0834%" height="15" fill="rgb(238,111,51)" fg:x="108503511783" fg:w="135689303"/><text x="66.9246%" y="575.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (524,820,911 samples, 0.32%)</title><rect x="66.5965%" y="581" width="0.3225%" height="15" fill="rgb(250,118,22)" fg:x="108376326687" fg:w="524820911"/><text x="66.8465%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (261,946,512 samples, 0.16%)</title><rect x="66.7580%" y="565" width="0.1610%" height="15" fill="rgb(234,84,26)" fg:x="108639201086" fg:w="261946512"/><text x="67.0080%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_add (214,079,463 samples, 0.13%)</title><rect x="66.7874%" y="549" width="0.1316%" height="15" fill="rgb(243,172,12)" fg:x="108687068135" fg:w="214079463"/><text x="67.0374%" y="559.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (1,770,002,352 samples, 1.09%)</title><rect x="65.9197%" y="629" width="1.0877%" height="15" fill="rgb(236,150,49)" fg:x="107274991763" fg:w="1770002352"/><text x="66.1697%" y="639.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1,577,930,163 samples, 0.97%)</title><rect x="66.0378%" y="613" width="0.9696%" height="15" fill="rgb(225,197,26)" fg:x="107467063952" fg:w="1577930163"/><text x="66.2878%" y="623.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1,316,999,480 samples, 0.81%)</title><rect x="66.1981%" y="597" width="0.8093%" height="15" fill="rgb(214,17,42)" fg:x="107727994635" fg:w="1316999480"/><text x="66.4481%" y="607.50"></text></g><g><title>tokio::runtime::task::waker::raw_waker (143,846,517 samples, 0.09%)</title><rect x="66.9190%" y="581" width="0.0884%" height="15" fill="rgb(224,165,40)" fg:x="108901147598" fg:w="143846517"/><text x="67.1690%" y="591.50"></text></g><g><title>core::task::wake::RawWaker::new (16,483,121 samples, 0.01%)</title><rect x="66.9973%" y="565" width="0.0101%" height="15" fill="rgb(246,100,4)" fg:x="109028510994" fg:w="16483121"/><text x="67.2473%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (150,583,711 samples, 0.09%)</title><rect x="67.5680%" y="549" width="0.0925%" height="15" fill="rgb(222,103,0)" fg:x="109957333288" fg:w="150583711"/><text x="67.8180%" y="559.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked::precondition_check (22,591,874 samples, 0.01%)</title><rect x="67.6467%" y="533" width="0.0139%" height="15" fill="rgb(227,189,26)" fg:x="110085325125" fg:w="22591874"/><text x="67.8967%" y="543.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::state (262,640,139 samples, 0.16%)</title><rect x="67.7481%" y="533" width="0.1614%" height="15" fill="rgb(214,202,17)" fg:x="110250429830" fg:w="262640139"/><text x="67.9981%" y="543.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::header (88,923,611 samples, 0.05%)</title><rect x="67.8549%" y="517" width="0.0546%" height="15" fill="rgb(229,111,3)" fg:x="110424146358" fg:w="88923611"/><text x="68.1049%" y="527.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (86,491,766 samples, 0.05%)</title><rect x="68.0505%" y="517" width="0.0531%" height="15" fill="rgb(229,172,15)" fg:x="110742456585" fg:w="86491766"/><text x="68.3005%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (246,440,319 samples, 0.15%)</title><rect x="68.1036%" y="517" width="0.1514%" height="15" fill="rgb(230,224,35)" fg:x="110828948351" fg:w="246440319"/><text x="68.3536%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (178,469,406 samples, 0.11%)</title><rect x="68.1454%" y="501" width="0.1097%" height="15" fill="rgb(251,141,6)" fg:x="110896919264" fg:w="178469406"/><text x="68.3954%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (1,087,117,898 samples, 0.67%)</title><rect x="67.6605%" y="549" width="0.6680%" height="15" fill="rgb(225,208,6)" fg:x="110107916999" fg:w="1087117898"/><text x="67.9105%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (681,964,928 samples, 0.42%)</title><rect x="67.9095%" y="533" width="0.4191%" height="15" fill="rgb(246,181,16)" fg:x="110513069969" fg:w="681964928"/><text x="68.1595%" y="543.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_count (117,610,412 samples, 0.07%)</title><rect x="68.2563%" y="517" width="0.0723%" height="15" fill="rgb(227,129,36)" fg:x="111077424485" fg:w="117610412"/><text x="68.5063%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1,621,445,660 samples, 1.00%)</title><rect x="67.4184%" y="581" width="0.9964%" height="15" fill="rgb(248,117,24)" fg:x="109713873078" fg:w="1621445660"/><text x="67.6684%" y="591.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1,450,276,244 samples, 0.89%)</title><rect x="67.5236%" y="565" width="0.8912%" height="15" fill="rgb(214,185,35)" fg:x="109885042494" fg:w="1450276244"/><text x="67.7736%" y="575.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::from_raw (140,283,841 samples, 0.09%)</title><rect x="68.3286%" y="549" width="0.0862%" height="15" fill="rgb(236,150,34)" fg:x="111195034897" fg:w="140283841"/><text x="68.5786%" y="559.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,761,401,410 samples, 2.93%)</title><rect x="65.4904%" y="661" width="2.9258%" height="15" fill="rgb(243,228,27)" fg:x="106576268962" fg:w="4761401410"/><text x="65.7404%" y="671.50">&lt;c..</text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::_{{closure}} (4,290,720,063 samples, 2.64%)</title><rect x="65.7796%" y="645" width="2.6366%" height="15" fill="rgb(245,77,44)" fg:x="107046950309" fg:w="4290720063"/><text x="66.0296%" y="655.50">to..</text></g><g><title>core::mem::drop (2,292,676,257 samples, 1.41%)</title><rect x="67.0074%" y="629" width="1.4088%" height="15" fill="rgb(235,214,42)" fg:x="109044994115" fg:w="2292676257"/><text x="67.2574%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (2,094,275,752 samples, 1.29%)</title><rect x="67.1293%" y="613" width="1.2869%" height="15" fill="rgb(221,74,3)" fg:x="109243394620" fg:w="2094275752"/><text x="67.3793%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1,826,128,276 samples, 1.12%)</title><rect x="67.2941%" y="597" width="1.1221%" height="15" fill="rgb(206,121,29)" fg:x="109511542096" fg:w="1826128276"/><text x="67.5441%" y="607.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::poll (13,242,993,359 samples, 8.14%)</title><rect x="60.2899%" y="789" width="8.1377%" height="15" fill="rgb(249,131,53)" fg:x="98113288152" fg:w="13242993359"/><text x="60.5399%" y="799.50">tokio::runt..</text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (11,992,815,863 samples, 7.37%)</title><rect x="61.0582%" y="773" width="7.3695%" height="15" fill="rgb(236,170,29)" fg:x="99363465648" fg:w="11992815863"/><text x="61.3082%" y="783.50">tokio::syn..</text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (11,586,039,607 samples, 7.12%)</title><rect x="61.3081%" y="757" width="7.1195%" height="15" fill="rgb(247,96,15)" fg:x="99770241904" fg:w="11586039607"/><text x="61.5581%" y="767.50">tokio::syn..</text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (6,845,568,100 samples, 4.21%)</title><rect x="64.2211%" y="741" width="4.2066%" height="15" fill="rgb(211,210,7)" fg:x="104510713411" fg:w="6845568100"/><text x="64.4711%" y="751.50">tokio..</text></g><g><title>std::panic::catch_unwind (6,513,756,782 samples, 4.00%)</title><rect x="64.4250%" y="725" width="4.0027%" height="15" fill="rgb(240,88,50)" fg:x="104842524729" fg:w="6513756782"/><text x="64.6750%" y="735.50">std:..</text></g><g><title>std::panicking::try (6,191,920,412 samples, 3.80%)</title><rect x="64.6228%" y="709" width="3.8049%" height="15" fill="rgb(209,229,26)" fg:x="105164361099" fg:w="6191920412"/><text x="64.8728%" y="719.50">std:..</text></g><g><title>__rust_try (5,733,955,869 samples, 3.52%)</title><rect x="64.9042%" y="693" width="3.5235%" height="15" fill="rgb(210,68,23)" fg:x="105622325642" fg:w="5733955869"/><text x="65.1542%" y="703.50">__r..</text></g><g><title>std::panicking::try::do_call (5,347,678,018 samples, 3.29%)</title><rect x="65.1415%" y="677" width="3.2861%" height="15" fill="rgb(229,180,13)" fg:x="106008603493" fg:w="5347678018"/><text x="65.3915%" y="687.50">std..</text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::take (18,611,139 samples, 0.01%)</title><rect x="68.4162%" y="661" width="0.0114%" height="15" fill="rgb(236,53,44)" fg:x="111337670372" fg:w="18611139"/><text x="68.6662%" y="671.50"></text></g><g><title>core::ptr::read (18,611,139 samples, 0.01%)</title><rect x="68.4162%" y="645" width="0.0114%" height="15" fill="rgb(244,214,29)" fg:x="111337670372" fg:w="18611139"/><text x="68.6662%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (206,026,092 samples, 0.13%)</title><rect x="68.5448%" y="757" width="0.1266%" height="15" fill="rgb(220,75,29)" fg:x="111546844627" fg:w="206026092"/><text x="68.7948%" y="767.50"></text></g><g><title>tokio::runtime::driver::Handle::time (463,664,206 samples, 0.28%)</title><rect x="68.4707%" y="773" width="0.2849%" height="15" fill="rgb(214,183,37)" fg:x="111426363396" fg:w="463664206"/><text x="68.7207%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (137,156,883 samples, 0.08%)</title><rect x="68.6714%" y="757" width="0.0843%" height="15" fill="rgb(239,117,29)" fg:x="111752870719" fg:w="137156883"/><text x="68.9214%" y="767.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::driver (1,909,091,435 samples, 1.17%)</title><rect x="68.4277%" y="789" width="1.1731%" height="15" fill="rgb(237,171,35)" fg:x="111356281511" fg:w="1909091435"/><text x="68.6777%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::Handle::driver (1,375,345,344 samples, 0.85%)</title><rect x="68.7556%" y="773" width="0.8451%" height="15" fill="rgb(229,178,53)" fg:x="111890027602" fg:w="1375345344"/><text x="69.0056%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (56,456,277 samples, 0.03%)</title><rect x="69.5661%" y="757" width="0.0347%" height="15" fill="rgb(210,102,19)" fg:x="113208916669" fg:w="56456277"/><text x="69.8161%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (24,598,797 samples, 0.02%)</title><rect x="69.5857%" y="741" width="0.0151%" height="15" fill="rgb(235,127,22)" fg:x="113240774149" fg:w="24598797"/><text x="69.8357%" y="751.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (24,598,797 samples, 0.02%)</title><rect x="69.5857%" y="725" width="0.0151%" height="15" fill="rgb(244,31,31)" fg:x="113240774149" fg:w="24598797"/><text x="69.8357%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (200,206,338 samples, 0.12%)</title><rect x="69.6889%" y="773" width="0.1230%" height="15" fill="rgb(231,43,21)" fg:x="113408744387" fg:w="200206338"/><text x="69.9389%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (120,695,937 samples, 0.07%)</title><rect x="69.8119%" y="773" width="0.0742%" height="15" fill="rgb(217,131,35)" fg:x="113608950725" fg:w="120695937"/><text x="70.0619%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (68,617,297 samples, 0.04%)</title><rect x="69.8439%" y="757" width="0.0422%" height="15" fill="rgb(221,149,4)" fg:x="113661029365" fg:w="68617297"/><text x="70.0939%" y="767.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::inner (496,057,958 samples, 0.30%)</title><rect x="69.6008%" y="789" width="0.3048%" height="15" fill="rgb(232,170,28)" fg:x="113265372946" fg:w="496057958"/><text x="69.8508%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (31,784,242 samples, 0.02%)</title><rect x="69.8861%" y="773" width="0.0195%" height="15" fill="rgb(238,56,10)" fg:x="113729646662" fg:w="31784242"/><text x="70.1361%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (35,208,220 samples, 0.02%)</title><rect x="69.9122%" y="773" width="0.0216%" height="15" fill="rgb(235,196,14)" fg:x="113772107345" fg:w="35208220"/><text x="70.1622%" y="783.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;T&gt;&gt;::from (25,350,621 samples, 0.02%)</title><rect x="69.9182%" y="757" width="0.0156%" height="15" fill="rgb(216,45,48)" fg:x="113781964944" fg:w="25350621"/><text x="70.1682%" y="767.50"></text></g><g><title>&lt;tokio::loom::std::parking_lot::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (18,856,092 samples, 0.01%)</title><rect x="69.9776%" y="757" width="0.0116%" height="15" fill="rgb(238,213,17)" fg:x="113878540207" fg:w="18856092"/><text x="70.2276%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29,488,398 samples, 0.02%)</title><rect x="69.9983%" y="757" width="0.0181%" height="15" fill="rgb(212,13,2)" fg:x="113912294302" fg:w="29488398"/><text x="70.2483%" y="767.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister::_{{closure}} (26,814,398 samples, 0.02%)</title><rect x="69.9999%" y="741" width="0.0165%" height="15" fill="rgb(240,114,20)" fg:x="113914968302" fg:w="26814398"/><text x="70.2499%" y="751.50"></text></g><g><title>core::num::nonzero::NonZero&lt;T&gt;::get (19,015,217 samples, 0.01%)</title><rect x="70.0047%" y="725" width="0.0117%" height="15" fill="rgb(228,41,40)" fg:x="113922767483" fg:w="19015217"/><text x="70.2547%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (26,075,200 samples, 0.02%)</title><rect x="70.0510%" y="693" width="0.0160%" height="15" fill="rgb(244,132,35)" fg:x="113998112588" fg:w="26075200"/><text x="70.3010%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22,165,943 samples, 0.01%)</title><rect x="70.0534%" y="677" width="0.0136%" height="15" fill="rgb(253,189,4)" fg:x="114002021845" fg:w="22165943"/><text x="70.3034%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::InnerState&gt;&gt; (86,018,771 samples, 0.05%)</title><rect x="70.0193%" y="757" width="0.0529%" height="15" fill="rgb(224,37,19)" fg:x="113946393697" fg:w="86018771"/><text x="70.2693%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::InnerState&gt;&gt; (73,129,659 samples, 0.04%)</title><rect x="70.0272%" y="741" width="0.0449%" height="15" fill="rgb(235,223,18)" fg:x="113959282809" fg:w="73129659"/><text x="70.2772%" y="751.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (62,981,920 samples, 0.04%)</title><rect x="70.0334%" y="725" width="0.0387%" height="15" fill="rgb(235,163,25)" fg:x="113969430548" fg:w="62981920"/><text x="70.2834%" y="735.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (53,806,832 samples, 0.03%)</title><rect x="70.0391%" y="709" width="0.0331%" height="15" fill="rgb(217,145,28)" fg:x="113978605636" fg:w="53806832"/><text x="70.2891%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (53,625,366 samples, 0.03%)</title><rect x="70.0890%" y="693" width="0.0330%" height="15" fill="rgb(223,223,32)" fg:x="114059863680" fg:w="53625366"/><text x="70.3390%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (52,193,142 samples, 0.03%)</title><rect x="70.0899%" y="677" width="0.0321%" height="15" fill="rgb(227,189,39)" fg:x="114061295904" fg:w="52193142"/><text x="70.3399%" y="687.50"></text></g><g><title>parking_lot_core::parking_lot::park (18,160,068 samples, 0.01%)</title><rect x="70.1257%" y="677" width="0.0112%" height="15" fill="rgb(248,10,22)" fg:x="114119576031" fg:w="18160068"/><text x="70.3757%" y="687.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (17,222,671 samples, 0.01%)</title><rect x="70.1388%" y="661" width="0.0106%" height="15" fill="rgb(248,46,39)" fg:x="114140872371" fg:w="17222671"/><text x="70.3888%" y="671.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (48,497,323 samples, 0.03%)</title><rect x="70.1219%" y="693" width="0.0298%" height="15" fill="rgb(248,113,48)" fg:x="114113489046" fg:w="48497323"/><text x="70.3719%" y="703.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (24,250,270 samples, 0.01%)</title><rect x="70.1368%" y="677" width="0.0149%" height="15" fill="rgb(245,16,25)" fg:x="114137736099" fg:w="24250270"/><text x="70.3868%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (108,591,649 samples, 0.07%)</title><rect x="70.0850%" y="709" width="0.0667%" height="15" fill="rgb(249,152,16)" fg:x="114053394729" fg:w="108591649"/><text x="70.3350%" y="719.50"></text></g><g><title>tokio::runtime::time::Inner::lock (122,206,550 samples, 0.08%)</title><rect x="70.0791%" y="757" width="0.0751%" height="15" fill="rgb(250,16,1)" fg:x="114043811654" fg:w="122206550"/><text x="70.3291%" y="767.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (122,206,550 samples, 0.08%)</title><rect x="70.0791%" y="741" width="0.0751%" height="15" fill="rgb(249,138,3)" fg:x="114043811654" fg:w="122206550"/><text x="70.3291%" y="751.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (114,432,482 samples, 0.07%)</title><rect x="70.0839%" y="725" width="0.0703%" height="15" fill="rgb(227,71,41)" fg:x="114051585722" fg:w="114432482"/><text x="70.3339%" y="735.50"></text></g><g><title>tokio::runtime::time::entry::TimerHandle::set_expiration (30,943,470 samples, 0.02%)</title><rect x="70.1542%" y="757" width="0.0190%" height="15" fill="rgb(209,184,23)" fg:x="114166018204" fg:w="30943470"/><text x="70.4042%" y="767.50"></text></g><g><title>tokio::runtime::time::entry::TimerShared::set_expiration (25,809,300 samples, 0.02%)</title><rect x="70.1574%" y="741" width="0.0159%" height="15" fill="rgb(223,215,31)" fg:x="114171152374" fg:w="25809300"/><text x="70.4074%" y="751.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::set_expiration (22,672,090 samples, 0.01%)</title><rect x="70.1593%" y="725" width="0.0139%" height="15" fill="rgb(210,146,28)" fg:x="114174289584" fg:w="22672090"/><text x="70.4093%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU64::store (18,181,548 samples, 0.01%)</title><rect x="70.1621%" y="709" width="0.0112%" height="15" fill="rgb(209,183,41)" fg:x="114178780126" fg:w="18181548"/><text x="70.4121%" y="719.50"></text></g><g><title>tokio::runtime::time::entry::TimerHandle::sync_when (24,217,355 samples, 0.01%)</title><rect x="70.2272%" y="741" width="0.0149%" height="15" fill="rgb(209,224,45)" fg:x="114284853873" fg:w="24217355"/><text x="70.4772%" y="751.50"></text></g><g><title>tokio::runtime::time::entry::TimerShared::sync_when (21,878,057 samples, 0.01%)</title><rect x="70.2287%" y="725" width="0.0134%" height="15" fill="rgb(224,209,51)" fg:x="114287193171" fg:w="21878057"/><text x="70.4787%" y="735.50"></text></g><g><title>tokio::runtime::time::entry::TimerShared::true_when (16,328,750 samples, 0.01%)</title><rect x="70.2321%" y="709" width="0.0100%" height="15" fill="rgb(223,17,39)" fg:x="114292742478" fg:w="16328750"/><text x="70.4821%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (32,048,704 samples, 0.02%)</title><rect x="70.3011%" y="709" width="0.0197%" height="15" fill="rgb(234,204,37)" fg:x="114405076659" fg:w="32048704"/><text x="70.5511%" y="719.50"></text></g><g><title>&lt;tokio::runtime::time::entry::TimerShared as tokio::util::linked_list::Link&gt;::pointers (50,065,380 samples, 0.03%)</title><rect x="70.3245%" y="709" width="0.0308%" height="15" fill="rgb(236,120,5)" fg:x="114443119289" fg:w="50065380"/><text x="70.5745%" y="719.50"></text></g><g><title>tokio::runtime::time::entry::TimerShared::addr_of_pointers (41,522,128 samples, 0.03%)</title><rect x="70.3297%" y="693" width="0.0255%" height="15" fill="rgb(248,97,27)" fg:x="114451662541" fg:w="41522128"/><text x="70.5797%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (24,877,691 samples, 0.02%)</title><rect x="70.3400%" y="677" width="0.0153%" height="15" fill="rgb(240,66,17)" fg:x="114468306978" fg:w="24877691"/><text x="70.5900%" y="687.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::add_entry (189,702,004 samples, 0.12%)</title><rect x="70.2490%" y="741" width="0.1166%" height="15" fill="rgb(210,79,3)" fg:x="114320268910" fg:w="189702004"/><text x="70.4990%" y="751.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (127,767,783 samples, 0.08%)</title><rect x="70.2871%" y="725" width="0.0785%" height="15" fill="rgb(214,176,27)" fg:x="114382203131" fg:w="127767783"/><text x="70.5371%" y="735.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (39,368,925 samples, 0.02%)</title><rect x="70.3822%" y="725" width="0.0242%" height="15" fill="rgb(235,185,3)" fg:x="114536951063" fg:w="39368925"/><text x="70.6322%" y="735.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (30,695,943 samples, 0.02%)</title><rect x="70.3875%" y="709" width="0.0189%" height="15" fill="rgb(227,24,12)" fg:x="114545624045" fg:w="30695943"/><text x="70.6375%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (24,122,312 samples, 0.01%)</title><rect x="70.3915%" y="693" width="0.0148%" height="15" fill="rgb(252,169,48)" fg:x="114552197676" fg:w="24122312"/><text x="70.6415%" y="703.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (744,954,259 samples, 0.46%)</title><rect x="69.9519%" y="773" width="0.4578%" height="15" fill="rgb(212,65,1)" fg:x="113836788110" fg:w="744954259"/><text x="70.2019%" y="783.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::insert (355,511,548 samples, 0.22%)</title><rect x="70.1912%" y="757" width="0.2185%" height="15" fill="rgb(242,39,24)" fg:x="114226230821" fg:w="355511548"/><text x="70.4412%" y="767.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (71,771,455 samples, 0.04%)</title><rect x="70.3656%" y="741" width="0.0441%" height="15" fill="rgb(249,32,23)" fg:x="114509970914" fg:w="71771455"/><text x="70.6156%" y="751.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::inner (29,720,195 samples, 0.02%)</title><rect x="70.4190%" y="773" width="0.0183%" height="15" fill="rgb(251,195,23)" fg:x="114596987431" fg:w="29720195"/><text x="70.6690%" y="783.50"></text></g><g><title>tokio::runtime::time::entry::TimerShared::extend_expiration (31,439,442 samples, 0.02%)</title><rect x="70.4373%" y="773" width="0.0193%" height="15" fill="rgb(236,174,8)" fg:x="114626707626" fg:w="31439442"/><text x="70.6873%" y="783.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::extend_expiration (28,165,658 samples, 0.02%)</title><rect x="70.4393%" y="757" width="0.0173%" height="15" fill="rgb(220,197,8)" fg:x="114629981410" fg:w="28165658"/><text x="70.6893%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (17,184,376 samples, 0.01%)</title><rect x="70.4461%" y="741" width="0.0106%" height="15" fill="rgb(240,108,37)" fg:x="114640962692" fg:w="17184376"/><text x="70.6961%" y="751.50"></text></g><g><title>core::cmp::Ord::min (18,950,715 samples, 0.01%)</title><rect x="70.4815%" y="741" width="0.0116%" height="15" fill="rgb(232,176,24)" fg:x="114698558267" fg:w="18950715"/><text x="70.7315%" y="751.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (981,726,658 samples, 0.60%)</title><rect x="69.9056%" y="789" width="0.6033%" height="15" fill="rgb(243,35,29)" fg:x="113761430904" fg:w="981726658"/><text x="70.1556%" y="799.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::deadline_to_tick (85,010,494 samples, 0.05%)</title><rect x="70.4566%" y="773" width="0.0522%" height="15" fill="rgb(210,37,18)" fg:x="114658147068" fg:w="85010494"/><text x="70.7066%" y="783.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (63,706,371 samples, 0.04%)</title><rect x="70.4697%" y="757" width="0.0391%" height="15" fill="rgb(224,184,40)" fg:x="114679451191" fg:w="63706371"/><text x="70.7197%" y="767.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (18,798,945,432 samples, 11.55%)</title><rect x="59.4118%" y="805" width="11.5518%" height="15" fill="rgb(236,39,29)" fg:x="96684210710" fg:w="18798945432"/><text x="59.6618%" y="815.50">tokio::runtime::t..</text></g><g><title>tokio::runtime::time::handle::Handle::is_shutdown (739,998,580 samples, 0.45%)</title><rect x="70.5089%" y="789" width="0.4547%" height="15" fill="rgb(232,48,39)" fg:x="114743157562" fg:w="739998580"/><text x="70.7589%" y="799.50"></text></g><g><title>tokio::runtime::time::Inner::is_shutdown (653,092,787 samples, 0.40%)</title><rect x="70.5623%" y="773" width="0.4013%" height="15" fill="rgb(236,34,42)" fg:x="114830063355" fg:w="653092787"/><text x="70.8123%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (508,901,998 samples, 0.31%)</title><rect x="70.6509%" y="757" width="0.3127%" height="15" fill="rgb(243,106,37)" fg:x="114974254144" fg:w="508901998"/><text x="70.9009%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (429,560,767 samples, 0.26%)</title><rect x="70.6996%" y="741" width="0.2640%" height="15" fill="rgb(218,96,6)" fg:x="115053595375" fg:w="429560767"/><text x="70.9496%" y="751.50"></text></g><g><title>core::fmt::rt::&lt;impl core::fmt::Arguments&gt;::new_const (28,102,168 samples, 0.02%)</title><rect x="70.9463%" y="725" width="0.0173%" height="15" fill="rgb(235,130,12)" fg:x="115455053974" fg:w="28102168"/><text x="71.1963%" y="735.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (26,094,200 samples, 0.02%)</title><rect x="71.6600%" y="725" width="0.0160%" height="15" fill="rgb(231,95,0)" fg:x="116616548693" fg:w="26094200"/><text x="71.9100%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::RestoreOnPending&gt; (396,782,387 samples, 0.24%)</title><rect x="71.5886%" y="757" width="0.2438%" height="15" fill="rgb(228,12,23)" fg:x="116500252544" fg:w="396782387"/><text x="71.8386%" y="767.50"></text></g><g><title>&lt;tokio::task::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (339,125,400 samples, 0.21%)</title><rect x="71.6240%" y="741" width="0.2084%" height="15" fill="rgb(216,12,1)" fg:x="116557909531" fg:w="339125400"/><text x="71.8740%" y="751.50"></text></g><g><title>tokio::task::coop::Budget::is_unconstrained (254,392,038 samples, 0.16%)</title><rect x="71.6761%" y="725" width="0.1563%" height="15" fill="rgb(219,59,3)" fg:x="116642642893" fg:w="254392038"/><text x="71.9261%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (133,336,165 samples, 0.08%)</title><rect x="71.7505%" y="709" width="0.0819%" height="15" fill="rgb(215,208,46)" fg:x="116763698766" fg:w="133336165"/><text x="72.0005%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (67,949,236 samples, 0.04%)</title><rect x="71.7907%" y="693" width="0.0418%" height="15" fill="rgb(254,224,29)" fg:x="116829085695" fg:w="67949236"/><text x="72.0407%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (661,030,539 samples, 0.41%)</title><rect x="71.4271%" y="789" width="0.4062%" height="15" fill="rgb(232,14,29)" fg:x="116237498230" fg:w="661030539"/><text x="71.6771%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::poll::Poll&lt;tokio::task::coop::RestoreOnPending&gt;&gt; (483,421,988 samples, 0.30%)</title><rect x="71.5363%" y="773" width="0.2971%" height="15" fill="rgb(208,45,52)" fg:x="116415106781" fg:w="483421988"/><text x="71.7863%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (315,067,175 samples, 0.19%)</title><rect x="72.3098%" y="757" width="0.1936%" height="15" fill="rgb(234,191,28)" fg:x="117673943248" fg:w="315067175"/><text x="72.5598%" y="767.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (171,163,322 samples, 0.11%)</title><rect x="72.3982%" y="741" width="0.1052%" height="15" fill="rgb(244,67,43)" fg:x="117817847101" fg:w="171163322"/><text x="72.6482%" y="751.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (136,487,584 samples, 0.08%)</title><rect x="72.4195%" y="725" width="0.0839%" height="15" fill="rgb(236,189,24)" fg:x="117852522839" fg:w="136487584"/><text x="72.6695%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (44,025,103 samples, 0.03%)</title><rect x="72.5034%" y="757" width="0.0271%" height="15" fill="rgb(239,214,33)" fg:x="117989010423" fg:w="44025103"/><text x="72.7534%" y="767.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (90,939,449 samples, 0.06%)</title><rect x="72.9842%" y="725" width="0.0559%" height="15" fill="rgb(226,176,41)" fg:x="118771337928" fg:w="90939449"/><text x="73.2342%" y="735.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::new (17,220,687 samples, 0.01%)</title><rect x="73.0400%" y="725" width="0.0106%" height="15" fill="rgb(248,47,8)" fg:x="118862277377" fg:w="17220687"/><text x="73.2900%" y="735.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (47,625,422 samples, 0.03%)</title><rect x="73.0506%" y="725" width="0.0293%" height="15" fill="rgb(218,81,44)" fg:x="118879498064" fg:w="47625422"/><text x="73.3006%" y="735.50"></text></g><g><title>tokio::runtime::context::budget (2,386,749,321 samples, 1.47%)</title><rect x="71.8333%" y="789" width="1.4666%" height="15" fill="rgb(213,98,6)" fg:x="116898528769" fg:w="2386749321"/><text x="72.0833%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,144,499,396 samples, 1.32%)</title><rect x="71.9822%" y="773" width="1.3178%" height="15" fill="rgb(222,85,22)" fg:x="117140778694" fg:w="2144499396"/><text x="72.2322%" y="783.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1,248,260,196 samples, 0.77%)</title><rect x="72.5329%" y="757" width="0.7670%" height="15" fill="rgb(239,46,39)" fg:x="118037017894" fg:w="1248260196"/><text x="72.7829%" y="767.50"></text></g><g><title>tokio::task::coop::poll_proceed::_{{closure}} (1,041,385,097 samples, 0.64%)</title><rect x="72.6600%" y="741" width="0.6399%" height="15" fill="rgb(237,12,29)" fg:x="118243892993" fg:w="1041385097"/><text x="72.9100%" y="751.50"></text></g><g><title>tokio::task::coop::Budget::decrement (358,154,604 samples, 0.22%)</title><rect x="73.0799%" y="725" width="0.2201%" height="15" fill="rgb(214,77,8)" fg:x="118927123486" fg:w="358154604"/><text x="73.3299%" y="735.50"></text></g><g><title>tokio::task::coop::poll_proceed (3,815,408,312 samples, 2.34%)</title><rect x="70.9636%" y="805" width="2.3445%" height="15" fill="rgb(217,168,37)" fg:x="115483156142" fg:w="3815408312"/><text x="71.2136%" y="815.50">t..</text></g><g><title>tokio::time::sleep::_::&lt;impl tokio::time::sleep::Sleep&gt;::project (63,405,512 samples, 0.04%)</title><rect x="73.3081%" y="805" width="0.0390%" height="15" fill="rgb(221,217,23)" fg:x="119298564454" fg:w="63405512"/><text x="73.5581%" y="815.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (26,955,298,624 samples, 16.56%)</title><rect x="56.7870%" y="837" width="16.5638%" height="15" fill="rgb(243,229,36)" fg:x="92412736143" fg:w="26955298624"/><text x="57.0370%" y="847.50">&lt;tokio::time::sleep::Sleep..</text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (26,189,702,947 samples, 16.09%)</title><rect x="57.2574%" y="821" width="16.0934%" height="15" fill="rgb(251,163,40)" fg:x="93178331820" fg:w="26189702947"/><text x="57.5074%" y="831.50">tokio::time::sleep::Sleep..</text></g><g><title>core::pin::Pin&lt;&amp;mut T&gt;::get_unchecked_mut (20,361,064 samples, 0.01%)</title><rect x="73.3508%" y="821" width="0.0125%" height="15" fill="rgb(237,222,12)" fg:x="119368034767" fg:w="20361064"/><text x="73.6008%" y="831.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (27,660,933,888 samples, 17.00%)</title><rect x="56.4848%" y="853" width="16.9974%" height="15" fill="rgb(248,132,6)" fg:x="91920915758" fg:w="27660933888"/><text x="56.7348%" y="863.50">&lt;core::pin::Pin&lt;P&gt; as core..</text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_deref_mut (213,814,879 samples, 0.13%)</title><rect x="73.3508%" y="837" width="0.1314%" height="15" fill="rgb(227,167,50)" fg:x="119368034767" fg:w="213814879"/><text x="73.6008%" y="847.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (193,453,815 samples, 0.12%)</title><rect x="73.3633%" y="821" width="0.1189%" height="15" fill="rgb(242,84,37)" fg:x="119388395831" fg:w="193453815"/><text x="73.6133%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (147,574,530 samples, 0.09%)</title><rect x="73.3915%" y="805" width="0.0907%" height="15" fill="rgb(212,4,50)" fg:x="119434275116" fg:w="147574530"/><text x="73.6415%" y="815.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::Deref&gt;::deref (36,531,230 samples, 0.02%)</title><rect x="73.4822%" y="853" width="0.0224%" height="15" fill="rgb(230,228,32)" fg:x="119581849646" fg:w="36531230"/><text x="73.7322%" y="863.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_ref (31,308,817 samples, 0.02%)</title><rect x="73.4854%" y="837" width="0.0192%" height="15" fill="rgb(248,217,23)" fg:x="119587072059" fg:w="31308817"/><text x="73.7354%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (30,213,120 samples, 0.02%)</title><rect x="73.4861%" y="821" width="0.0186%" height="15" fill="rgb(238,197,32)" fg:x="119588167756" fg:w="30213120"/><text x="73.7361%" y="831.50"></text></g><g><title>core::cmp::PartialOrd::gt (18,855,221 samples, 0.01%)</title><rect x="73.5047%" y="853" width="0.0116%" height="15" fill="rgb(236,106,1)" fg:x="119618380876" fg:w="18855221"/><text x="73.7547%" y="863.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (89,055,004 samples, 0.05%)</title><rect x="73.5268%" y="821" width="0.0547%" height="15" fill="rgb(219,228,13)" fg:x="119654479805" fg:w="89055004"/><text x="73.7768%" y="831.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (89,055,004 samples, 0.05%)</title><rect x="73.5268%" y="805" width="0.0547%" height="15" fill="rgb(238,30,35)" fg:x="119654479805" fg:w="89055004"/><text x="73.7768%" y="815.50"></text></g><g><title>__vdso_clock_gettime (77,338,885 samples, 0.05%)</title><rect x="73.5340%" y="789" width="0.0475%" height="15" fill="rgb(236,70,23)" fg:x="119666195924" fg:w="77338885"/><text x="73.7840%" y="799.50"></text></g><g><title>[unknown] (62,059,414 samples, 0.04%)</title><rect x="73.5434%" y="773" width="0.0381%" height="15" fill="rgb(249,104,48)" fg:x="119681475395" fg:w="62059414"/><text x="73.7934%" y="783.50"></text></g><g><title>[unknown] (59,213,645 samples, 0.04%)</title><rect x="73.5452%" y="757" width="0.0364%" height="15" fill="rgb(254,117,50)" fg:x="119684321164" fg:w="59213645"/><text x="73.7952%" y="767.50"></text></g><g><title>[unknown] (47,071,444 samples, 0.03%)</title><rect x="73.5526%" y="741" width="0.0289%" height="15" fill="rgb(223,152,4)" fg:x="119696463365" fg:w="47071444"/><text x="73.8026%" y="751.50"></text></g><g><title>[unknown] (30,539,900 samples, 0.02%)</title><rect x="73.5628%" y="725" width="0.0188%" height="15" fill="rgb(245,6,2)" fg:x="119712994909" fg:w="30539900"/><text x="73.8128%" y="735.50"></text></g><g><title>[unknown] (23,549,349 samples, 0.01%)</title><rect x="73.5671%" y="709" width="0.0145%" height="15" fill="rgb(249,150,24)" fg:x="119719985460" fg:w="23549349"/><text x="73.8171%" y="719.50"></text></g><g><title>[unknown] (18,235,919 samples, 0.01%)</title><rect x="73.5704%" y="693" width="0.0112%" height="15" fill="rgb(228,185,42)" fg:x="119725298890" fg:w="18235919"/><text x="73.8204%" y="703.50"></text></g><g><title>tokio::time::instant::Instant::now (100,928,182 samples, 0.06%)</title><rect x="73.5216%" y="853" width="0.0620%" height="15" fill="rgb(226,39,33)" fg:x="119645925005" fg:w="100928182"/><text x="73.7716%" y="863.50"></text></g><g><title>tokio::time::instant::variant::now (97,043,630 samples, 0.06%)</title><rect x="73.5240%" y="837" width="0.0596%" height="15" fill="rgb(221,166,19)" fg:x="119649809557" fg:w="97043630"/><text x="73.7740%" y="847.50"></text></g><g><title>core::cmp::Ord::min (22,688,027 samples, 0.01%)</title><rect x="73.6451%" y="789" width="0.0139%" height="15" fill="rgb(209,109,2)" fg:x="119846932324" fg:w="22688027"/><text x="73.8951%" y="799.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (126,250,766 samples, 0.08%)</title><rect x="73.6026%" y="837" width="0.0776%" height="15" fill="rgb(252,216,26)" fg:x="119777742461" fg:w="126250766"/><text x="73.8526%" y="847.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::deadline_to_tick (86,950,736 samples, 0.05%)</title><rect x="73.6267%" y="821" width="0.0534%" height="15" fill="rgb(227,173,36)" fg:x="119817042491" fg:w="86950736"/><text x="73.8767%" y="831.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (75,385,133 samples, 0.05%)</title><rect x="73.6338%" y="805" width="0.0463%" height="15" fill="rgb(209,90,7)" fg:x="119828608094" fg:w="75385133"/><text x="73.8838%" y="815.50"></text></g><g><title>tokio::time::instant::Instant::saturating_duration_since (22,482,315 samples, 0.01%)</title><rect x="73.6663%" y="789" width="0.0138%" height="15" fill="rgb(250,194,11)" fg:x="119881510912" fg:w="22482315"/><text x="73.9163%" y="799.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (29,248,402,357 samples, 17.97%)</title><rect x="55.7086%" y="901" width="17.9729%" height="15" fill="rgb(220,72,50)" fg:x="90657782222" fg:w="29248402357"/><text x="55.9586%" y="911.50">&lt;core::future::poll_fn::Poll..</text></g><g><title>tokio::time::interval::Interval::tick::_{{closure}}::_{{closure}} (28,896,056,113 samples, 17.76%)</title><rect x="55.9251%" y="885" width="17.7564%" height="15" fill="rgb(222,106,48)" fg:x="91010128466" fg:w="28896056113"/><text x="56.1751%" y="895.50">tokio::time::interval::Inter..</text></g><g><title>tokio::time::interval::Interval::poll_tick (28,591,355,020 samples, 17.57%)</title><rect x="56.1123%" y="869" width="17.5692%" height="15" fill="rgb(216,220,45)" fg:x="91314829559" fg:w="28591355020"/><text x="56.3623%" y="879.50">tokio::time::interval::Inte..</text></g><g><title>tokio::time::sleep::Sleep::reset_without_reregister (134,193,827 samples, 0.08%)</title><rect x="73.5990%" y="853" width="0.0825%" height="15" fill="rgb(234,112,18)" fg:x="119771990752" fg:w="134193827"/><text x="73.8490%" y="863.50"></text></g><g><title>core::future::poll_fn::poll_fn (28,311,019 samples, 0.02%)</title><rect x="73.6815%" y="901" width="0.0174%" height="15" fill="rgb(206,179,9)" fg:x="119906184579" fg:w="28311019"/><text x="73.9315%" y="911.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (84,928,256,609 samples, 52.19%)</title><rect x="21.5135%" y="949" width="52.1878%" height="15" fill="rgb(215,115,40)" fg:x="35010122771" fg:w="84928256609"/><text x="21.7635%" y="959.50">&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>update_countdown::routes::websocket::_{{closure}}::_{{closure}}::_{{closure}} (84,528,038,320 samples, 51.94%)</title><rect x="21.7594%" y="933" width="51.9419%" height="15" fill="rgb(222,69,34)" fg:x="35410341060" fg:w="84528038320"/><text x="22.0094%" y="943.50">update_countdown::routes::websocket::_{{closure}}::_{{closure}}::_{{closure}}</text></g><g><title>tokio::time::interval::Interval::tick::_{{closure}} (30,324,566,929 samples, 18.63%)</title><rect x="55.0671%" y="917" width="18.6342%" height="15" fill="rgb(209,161,10)" fg:x="89613812451" fg:w="30324566929"/><text x="55.3171%" y="927.50">tokio::time::interval::Interv..</text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (54,130,455 samples, 0.03%)</title><rect x="73.8429%" y="933" width="0.0333%" height="15" fill="rgb(217,6,38)" fg:x="120168817869" fg:w="54130455"/><text x="74.0929%" y="943.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (26,464,448 samples, 0.02%)</title><rect x="73.8599%" y="917" width="0.0163%" height="15" fill="rgb(229,229,48)" fg:x="120196483876" fg:w="26464448"/><text x="74.1099%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (55,876,576 samples, 0.03%)</title><rect x="73.8762%" y="933" width="0.0343%" height="15" fill="rgb(225,21,28)" fg:x="120222948324" fg:w="55876576"/><text x="74.1262%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (25,709,465 samples, 0.02%)</title><rect x="74.0135%" y="901" width="0.0158%" height="15" fill="rgb(206,33,13)" fg:x="120446476309" fg:w="25709465"/><text x="74.2635%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::Deref&gt;::deref (43,596,045 samples, 0.03%)</title><rect x="74.0492%" y="885" width="0.0268%" height="15" fill="rgb(242,178,17)" fg:x="120504532214" fg:w="43596045"/><text x="74.2992%" y="895.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_ref (30,653,437 samples, 0.02%)</title><rect x="74.0571%" y="869" width="0.0188%" height="15" fill="rgb(220,162,5)" fg:x="120517474822" fg:w="30653437"/><text x="74.3071%" y="879.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (150,699,479 samples, 0.09%)</title><rect x="74.0014%" y="917" width="0.0926%" height="15" fill="rgb(210,33,43)" fg:x="120426836495" fg:w="150699479"/><text x="74.2514%" y="927.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (105,350,200 samples, 0.06%)</title><rect x="74.0293%" y="901" width="0.0647%" height="15" fill="rgb(216,116,54)" fg:x="120472185774" fg:w="105350200"/><text x="74.2793%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (29,407,715 samples, 0.02%)</title><rect x="74.0760%" y="885" width="0.0181%" height="15" fill="rgb(249,92,24)" fg:x="120548128259" fg:w="29407715"/><text x="74.3260%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (23,153,517 samples, 0.01%)</title><rect x="74.0798%" y="869" width="0.0142%" height="15" fill="rgb(231,189,14)" fg:x="120554382457" fg:w="23153517"/><text x="74.3298%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (36,003,763 samples, 0.02%)</title><rect x="74.1554%" y="885" width="0.0221%" height="15" fill="rgb(230,8,41)" fg:x="120677398061" fg:w="36003763"/><text x="74.4054%" y="895.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (20,968,580 samples, 0.01%)</title><rect x="74.1647%" y="869" width="0.0129%" height="15" fill="rgb(249,7,27)" fg:x="120692433244" fg:w="20968580"/><text x="74.4147%" y="879.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::start_send (167,021,542 samples, 0.10%)</title><rect x="74.0940%" y="917" width="0.1026%" height="15" fill="rgb(232,86,5)" fg:x="120577535974" fg:w="167021542"/><text x="74.3440%" y="927.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::start_send (107,194,415 samples, 0.07%)</title><rect x="74.1308%" y="901" width="0.0659%" height="15" fill="rgb(224,175,18)" fg:x="120637363101" fg:w="107194415"/><text x="74.3808%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;axum::extract::ws::Message&gt;&gt; (31,155,692 samples, 0.02%)</title><rect x="74.1775%" y="885" width="0.0191%" height="15" fill="rgb(220,129,12)" fg:x="120713401824" fg:w="31155692"/><text x="74.4275%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (70,063,020 samples, 0.04%)</title><rect x="74.1967%" y="917" width="0.0431%" height="15" fill="rgb(210,19,36)" fg:x="120744557516" fg:w="70063020"/><text x="74.4467%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (49,378,736 samples, 0.03%)</title><rect x="74.2397%" y="917" width="0.0303%" height="15" fill="rgb(219,96,14)" fg:x="120814620536" fg:w="49378736"/><text x="74.4897%" y="927.50"></text></g><g><title>__memmove_avx_unaligned (37,553,453 samples, 0.02%)</title><rect x="74.2470%" y="901" width="0.0231%" height="15" fill="rgb(249,106,1)" fg:x="120826445819" fg:w="37553453"/><text x="74.4970%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (84,742,504 samples, 0.05%)</title><rect x="74.2701%" y="917" width="0.0521%" height="15" fill="rgb(249,155,20)" fg:x="120863999272" fg:w="84742504"/><text x="74.5201%" y="927.50"></text></g><g><title>core::mem::replace (68,010,316 samples, 0.04%)</title><rect x="74.2804%" y="901" width="0.0418%" height="15" fill="rgb(244,168,9)" fg:x="120880731460" fg:w="68010316"/><text x="74.5304%" y="911.50"></text></g><g><title>__memmove_avx_unaligned (66,511,292 samples, 0.04%)</title><rect x="74.2813%" y="885" width="0.0409%" height="15" fill="rgb(216,23,50)" fg:x="120882230484" fg:w="66511292"/><text x="74.5313%" y="895.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (717,861,969 samples, 0.44%)</title><rect x="73.9105%" y="933" width="0.4411%" height="15" fill="rgb(224,219,20)" fg:x="120278824900" fg:w="717861969"/><text x="74.1605%" y="943.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (47,945,093 samples, 0.03%)</title><rect x="74.3222%" y="917" width="0.0295%" height="15" fill="rgb(222,156,15)" fg:x="120948741776" fg:w="47945093"/><text x="74.5722%" y="927.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (30,132,961 samples, 0.02%)</title><rect x="74.3331%" y="901" width="0.0185%" height="15" fill="rgb(231,97,17)" fg:x="120966553908" fg:w="30132961"/><text x="74.5831%" y="911.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::poll_flush::_{{closure}} (102,269,662 samples, 0.06%)</title><rect x="74.6487%" y="869" width="0.0628%" height="15" fill="rgb(218,70,48)" fg:x="121480193584" fg:w="102269662"/><text x="74.8987%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (42,701,709 samples, 0.03%)</title><rect x="74.6853%" y="853" width="0.0262%" height="15" fill="rgb(212,196,52)" fg:x="121539761537" fg:w="42701709"/><text x="74.9353%" y="863.50"></text></g><g><title>__memmove_avx_unaligned (22,272,619 samples, 0.01%)</title><rect x="74.7116%" y="869" width="0.0137%" height="15" fill="rgb(243,203,18)" fg:x="121582463246" fg:w="22272619"/><text x="74.9616%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (77,213,698 samples, 0.05%)</title><rect x="74.7253%" y="869" width="0.0474%" height="15" fill="rgb(252,125,41)" fg:x="121604735865" fg:w="77213698"/><text x="74.9753%" y="879.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (284,486,704 samples, 0.17%)</title><rect x="74.5989%" y="885" width="0.1748%" height="15" fill="rgb(223,180,33)" fg:x="121399037686" fg:w="284486704"/><text x="74.8489%" y="895.50"></text></g><g><title>__memmove_avx_unaligned (32,273,027 samples, 0.02%)</title><rect x="74.9933%" y="837" width="0.0198%" height="15" fill="rgb(254,159,46)" fg:x="122041005856" fg:w="32273027"/><text x="75.2433%" y="847.50"></text></g><g><title>tokio_tungstenite::compat::cvt (151,919,647 samples, 0.09%)</title><rect x="74.9425%" y="853" width="0.0934%" height="15" fill="rgb(254,38,10)" fg:x="121958299904" fg:w="151919647"/><text x="75.1925%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (36,940,668 samples, 0.02%)</title><rect x="75.0132%" y="837" width="0.0227%" height="15" fill="rgb(208,217,32)" fg:x="122073278883" fg:w="36940668"/><text x="75.2632%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (152,669,490 samples, 0.09%)</title><rect x="75.1457%" y="821" width="0.0938%" height="15" fill="rgb(221,120,13)" fg:x="122289010944" fg:w="152669490"/><text x="75.3957%" y="831.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (63,823,573 samples, 0.04%)</title><rect x="75.3350%" y="789" width="0.0392%" height="15" fill="rgb(246,54,52)" fg:x="122596940666" fg:w="63823573"/><text x="75.5850%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (16,826,263 samples, 0.01%)</title><rect x="75.3638%" y="773" width="0.0103%" height="15" fill="rgb(242,34,25)" fg:x="122643937976" fg:w="16826263"/><text x="75.6138%" y="783.50"></text></g><g><title>core::cmp::PartialOrd::le (156,691,617 samples, 0.10%)</title><rect x="75.2919%" y="805" width="0.0963%" height="15" fill="rgb(247,209,9)" fg:x="122526913833" fg:w="156691617"/><text x="75.5419%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (22,841,211 samples, 0.01%)</title><rect x="75.3742%" y="789" width="0.0140%" height="15" fill="rgb(228,71,26)" fg:x="122660764239" fg:w="22841211"/><text x="75.6242%" y="799.50"></text></g><g><title>log::max_level (122,966,267 samples, 0.08%)</title><rect x="75.3882%" y="805" width="0.0756%" height="15" fill="rgb(222,145,49)" fg:x="122683605450" fg:w="122966267"/><text x="75.6382%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (109,051,951 samples, 0.07%)</title><rect x="75.3968%" y="789" width="0.0670%" height="15" fill="rgb(218,121,17)" fg:x="122697519766" fg:w="109051951"/><text x="75.6468%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (95,475,569 samples, 0.06%)</title><rect x="75.4051%" y="773" width="0.0587%" height="15" fill="rgb(244,50,7)" fg:x="122711096148" fg:w="95475569"/><text x="75.6551%" y="783.50"></text></g><g><title>&lt;futures_task::waker_ref::WakerRef as core::ops::deref::Deref&gt;::deref (27,718,729 samples, 0.02%)</title><rect x="75.5582%" y="789" width="0.0170%" height="15" fill="rgb(246,229,37)" fg:x="122960207335" fg:w="27718729"/><text x="75.8082%" y="799.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (76,179,754 samples, 0.05%)</title><rect x="75.6428%" y="741" width="0.0468%" height="15" fill="rgb(225,18,5)" fg:x="123097927953" fg:w="76179754"/><text x="75.8928%" y="751.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (70,860,821 samples, 0.04%)</title><rect x="75.6461%" y="725" width="0.0435%" height="15" fill="rgb(213,204,8)" fg:x="123103246886" fg:w="70860821"/><text x="75.8961%" y="735.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (58,421,165 samples, 0.04%)</title><rect x="75.6537%" y="709" width="0.0359%" height="15" fill="rgb(238,103,6)" fg:x="123115686542" fg:w="58421165"/><text x="75.9037%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (22,284,544 samples, 0.01%)</title><rect x="75.7346%" y="709" width="0.0137%" height="15" fill="rgb(222,25,35)" fg:x="123247248461" fg:w="22284544"/><text x="75.9846%" y="719.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (19,444,457 samples, 0.01%)</title><rect x="75.7363%" y="693" width="0.0119%" height="15" fill="rgb(213,203,35)" fg:x="123250088548" fg:w="19444457"/><text x="75.9863%" y="703.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (17,533,383 samples, 0.01%)</title><rect x="75.7375%" y="677" width="0.0108%" height="15" fill="rgb(221,79,53)" fg:x="123251999622" fg:w="17533383"/><text x="75.9875%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (37,746,348 samples, 0.02%)</title><rect x="75.7605%" y="693" width="0.0232%" height="15" fill="rgb(243,200,35)" fg:x="123289511523" fg:w="37746348"/><text x="76.0105%" y="703.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (23,891,133 samples, 0.01%)</title><rect x="75.7691%" y="677" width="0.0147%" height="15" fill="rgb(248,60,25)" fg:x="123303366738" fg:w="23891133"/><text x="76.0191%" y="687.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_flush (60,276,224 samples, 0.04%)</title><rect x="75.8094%" y="677" width="0.0370%" height="15" fill="rgb(227,53,46)" fg:x="123369063739" fg:w="60276224"/><text x="76.0594%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as hyper::rt::io::Write&gt;::poll_flush (240,409,778 samples, 0.15%)</title><rect x="75.7022%" y="725" width="0.1477%" height="15" fill="rgb(216,120,32)" fg:x="123194592722" fg:w="240409778"/><text x="75.9522%" y="735.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_flush (165,469,495 samples, 0.10%)</title><rect x="75.7483%" y="709" width="0.1017%" height="15" fill="rgb(220,134,1)" fg:x="123269533005" fg:w="165469495"/><text x="75.9983%" y="719.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Write&gt;::poll_flush (107,744,629 samples, 0.07%)</title><rect x="75.7837%" y="693" width="0.0662%" height="15" fill="rgb(237,168,5)" fg:x="123327257871" fg:w="107744629"/><text x="76.0337%" y="703.50"></text></g><g><title>&lt;hyper::upgrade::Upgraded as hyper::rt::io::Write&gt;::poll_flush (437,068,859 samples, 0.27%)</title><rect x="75.6127%" y="757" width="0.2686%" height="15" fill="rgb(231,100,33)" fg:x="123048998598" fg:w="437068859"/><text x="75.8627%" y="767.50"></text></g><g><title>&lt;hyper::common::io::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_flush (311,959,750 samples, 0.19%)</title><rect x="75.6896%" y="741" width="0.1917%" height="15" fill="rgb(236,177,47)" fg:x="123174107707" fg:w="311959750"/><text x="75.9396%" y="751.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (51,064,957 samples, 0.03%)</title><rect x="75.8499%" y="725" width="0.0314%" height="15" fill="rgb(235,7,49)" fg:x="123435002500" fg:w="51064957"/><text x="76.0999%" y="735.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (41,249,391 samples, 0.03%)</title><rect x="75.8560%" y="709" width="0.0253%" height="15" fill="rgb(232,119,22)" fg:x="123444818066" fg:w="41249391"/><text x="76.1060%" y="719.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (39,520,645 samples, 0.02%)</title><rect x="75.8570%" y="693" width="0.0243%" height="15" fill="rgb(254,73,53)" fg:x="123446546812" fg:w="39520645"/><text x="76.1070%" y="703.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (476,333,736 samples, 0.29%)</title><rect x="75.5989%" y="773" width="0.2927%" height="15" fill="rgb(251,35,20)" fg:x="123026424519" fg:w="476333736"/><text x="75.8489%" y="783.50"></text></g><g><title>hyper_util::rt::tokio::_::&lt;impl hyper_util::rt::tokio::TokioIo&lt;T&gt;&gt;::project (16,690,798 samples, 0.01%)</title><rect x="75.8813%" y="757" width="0.0103%" height="15" fill="rgb(241,119,20)" fg:x="123486067457" fg:w="16690798"/><text x="76.1313%" y="767.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (32,797,149 samples, 0.02%)</title><rect x="75.9203%" y="757" width="0.0202%" height="15" fill="rgb(207,102,14)" fg:x="123549544048" fg:w="32797149"/><text x="76.1703%" y="767.50"></text></g><g><title>core::cmp::PartialOrd::le (101,665,462 samples, 0.06%)</title><rect x="75.8916%" y="773" width="0.0625%" height="15" fill="rgb(248,201,50)" fg:x="123502758255" fg:w="101665462"/><text x="76.1416%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (22,082,520 samples, 0.01%)</title><rect x="75.9405%" y="757" width="0.0136%" height="15" fill="rgb(222,185,44)" fg:x="123582341197" fg:w="22082520"/><text x="76.1905%" y="767.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Write&gt;::flush::_{{closure}} (634,589,943 samples, 0.39%)</title><rect x="75.5752%" y="789" width="0.3900%" height="15" fill="rgb(218,107,18)" fg:x="122987926064" fg:w="634589943"/><text x="75.8252%" y="799.50"></text></g><g><title>log::max_level (18,092,290 samples, 0.01%)</title><rect x="75.9540%" y="773" width="0.0111%" height="15" fill="rgb(237,177,39)" fg:x="123604423717" fg:w="18092290"/><text x="76.2040%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (16,330,140 samples, 0.01%)</title><rect x="75.9551%" y="757" width="0.0100%" height="15" fill="rgb(246,69,6)" fg:x="123606185867" fg:w="16330140"/><text x="76.2051%" y="767.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (43,898,530 samples, 0.03%)</title><rect x="75.9897%" y="773" width="0.0270%" height="15" fill="rgb(234,208,37)" fg:x="123662370575" fg:w="43898530"/><text x="76.2397%" y="783.50"></text></g><g><title>core::cmp::PartialOrd::le (104,738,676 samples, 0.06%)</title><rect x="75.9652%" y="789" width="0.0644%" height="15" fill="rgb(225,4,6)" fg:x="123622516007" fg:w="104738676"/><text x="76.2152%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (20,985,578 samples, 0.01%)</title><rect x="76.0166%" y="773" width="0.0129%" height="15" fill="rgb(233,45,0)" fg:x="123706269105" fg:w="20985578"/><text x="76.2666%" y="783.50"></text></g><g><title>core::task::wake::Context::from_waker (17,761,349 samples, 0.01%)</title><rect x="76.0295%" y="789" width="0.0109%" height="15" fill="rgb(226,136,5)" fg:x="123727254683" fg:w="17761349"/><text x="76.2795%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::as_ptr (32,639,634 samples, 0.02%)</title><rect x="76.0647%" y="773" width="0.0201%" height="15" fill="rgb(211,91,47)" fg:x="123784448248" fg:w="32639634"/><text x="76.3147%" y="783.50"></text></g><g><title>core::task::wake::Waker::from_raw (18,000,873 samples, 0.01%)</title><rect x="76.0894%" y="773" width="0.0111%" height="15" fill="rgb(242,88,51)" fg:x="123824747959" fg:w="18000873"/><text x="76.3394%" y="783.50"></text></g><g><title>futures_task::waker::waker_vtable (23,884,450 samples, 0.01%)</title><rect x="76.1005%" y="773" width="0.0147%" height="15" fill="rgb(230,91,28)" fg:x="123842748832" fg:w="23884450"/><text x="76.3505%" y="783.50"></text></g><g><title>futures_task::waker_ref::waker_ref (138,343,092 samples, 0.09%)</title><rect x="76.0404%" y="789" width="0.0850%" height="15" fill="rgb(254,186,29)" fg:x="123745016032" fg:w="138343092"/><text x="76.2904%" y="799.50"></text></g><g><title>futures_task::waker_ref::WakerRef::new_unowned (16,725,842 samples, 0.01%)</title><rect x="76.1152%" y="773" width="0.0103%" height="15" fill="rgb(238,6,4)" fg:x="123866633282" fg:w="16725842"/><text x="76.3652%" y="783.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Write&gt;::flush (1,487,375,548 samples, 0.91%)</title><rect x="75.2396%" y="821" width="0.9140%" height="15" fill="rgb(221,151,16)" fg:x="122441680434" fg:w="1487375548"/><text x="75.4896%" y="831.50"></text></g><g><title>tokio_tungstenite::compat::AllowStd&lt;S&gt;::with_context (1,122,484,265 samples, 0.69%)</title><rect x="75.4638%" y="805" width="0.6898%" height="15" fill="rgb(251,143,52)" fg:x="122806571717" fg:w="1122484265"/><text x="75.7138%" y="815.50"></text></g><g><title>log::max_level (45,696,858 samples, 0.03%)</title><rect x="76.1255%" y="789" width="0.0281%" height="15" fill="rgb(206,90,15)" fg:x="123883359124" fg:w="45696858"/><text x="76.3755%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (40,612,800 samples, 0.02%)</title><rect x="76.1286%" y="773" width="0.0250%" height="15" fill="rgb(218,35,8)" fg:x="123888443182" fg:w="40612800"/><text x="76.3786%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (26,102,889 samples, 0.02%)</title><rect x="76.1375%" y="757" width="0.0160%" height="15" fill="rgb(239,215,6)" fg:x="123902953093" fg:w="26102889"/><text x="76.3875%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (80,714,368 samples, 0.05%)</title><rect x="76.2128%" y="805" width="0.0496%" height="15" fill="rgb(245,116,39)" fg:x="124025567682" fg:w="80714368"/><text x="76.4628%" y="815.50"></text></g><g><title>core::mem::replace (75,479,485 samples, 0.05%)</title><rect x="76.2161%" y="789" width="0.0464%" height="15" fill="rgb(242,65,28)" fg:x="124030802565" fg:w="75479485"/><text x="76.4661%" y="799.50"></text></g><g><title>__memmove_avx_unaligned (73,586,156 samples, 0.05%)</title><rect x="76.2172%" y="773" width="0.0452%" height="15" fill="rgb(252,132,53)" fg:x="124032695894" fg:w="73586156"/><text x="76.4672%" y="783.50"></text></g><g><title>tungstenite::protocol::WebSocketContext::_write (180,737,766 samples, 0.11%)</title><rect x="76.1535%" y="821" width="0.1111%" height="15" fill="rgb(224,159,50)" fg:x="123929055982" fg:w="180737766"/><text x="76.4035%" y="831.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (52,417,320 samples, 0.03%)</title><rect x="76.4037%" y="741" width="0.0322%" height="15" fill="rgb(224,93,4)" fg:x="124336115607" fg:w="52417320"/><text x="76.6537%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (134,232,968 samples, 0.08%)</title><rect x="76.3656%" y="805" width="0.0825%" height="15" fill="rgb(208,81,34)" fg:x="124274169478" fg:w="134232968"/><text x="76.6156%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (112,001,462 samples, 0.07%)</title><rect x="76.3793%" y="789" width="0.0688%" height="15" fill="rgb(233,92,54)" fg:x="124296400984" fg:w="112001462"/><text x="76.6293%" y="799.50"></text></g><g><title>core::slice::raw::from_raw_parts (93,793,303 samples, 0.06%)</title><rect x="76.3905%" y="773" width="0.0576%" height="15" fill="rgb(237,21,14)" fg:x="124314609143" fg:w="93793303"/><text x="76.6405%" y="783.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (93,793,303 samples, 0.06%)</title><rect x="76.3905%" y="757" width="0.0576%" height="15" fill="rgb(249,128,51)" fg:x="124314609143" fg:w="93793303"/><text x="76.6405%" y="767.50"></text></g><g><title>core::ub_checks::maybe_is_aligned_and_not_null (19,869,519 samples, 0.01%)</title><rect x="76.4359%" y="741" width="0.0122%" height="15" fill="rgb(223,129,24)" fg:x="124388532927" fg:w="19869519"/><text x="76.6859%" y="751.50"></text></g><g><title>core::ub_checks::maybe_is_aligned_and_not_null::runtime (19,869,519 samples, 0.01%)</title><rect x="76.4359%" y="725" width="0.0122%" height="15" fill="rgb(231,168,25)" fg:x="124388532927" fg:w="19869519"/><text x="76.6859%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (72,217,544 samples, 0.04%)</title><rect x="76.4481%" y="805" width="0.0444%" height="15" fill="rgb(224,39,20)" fg:x="124408402446" fg:w="72217544"/><text x="76.6981%" y="815.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (42,641,050 samples, 0.03%)</title><rect x="76.6119%" y="773" width="0.0262%" height="15" fill="rgb(225,152,53)" fg:x="124674996160" fg:w="42641050"/><text x="76.8619%" y="783.50"></text></g><g><title>core::cmp::PartialOrd::le (97,061,872 samples, 0.06%)</title><rect x="76.5898%" y="789" width="0.0596%" height="15" fill="rgb(252,17,24)" fg:x="124639015071" fg:w="97061872"/><text x="76.8398%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (18,439,733 samples, 0.01%)</title><rect x="76.6381%" y="773" width="0.0113%" height="15" fill="rgb(250,114,30)" fg:x="124717637210" fg:w="18439733"/><text x="76.8881%" y="783.50"></text></g><g><title>log::max_level (21,686,559 samples, 0.01%)</title><rect x="76.6494%" y="789" width="0.0133%" height="15" fill="rgb(229,5,4)" fg:x="124736076943" fg:w="21686559"/><text x="76.8994%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17,091,879 samples, 0.01%)</title><rect x="76.6523%" y="773" width="0.0105%" height="15" fill="rgb(225,176,49)" fg:x="124740671623" fg:w="17091879"/><text x="76.9023%" y="783.50"></text></g><g><title>&lt;futures_task::waker_ref::WakerRef as core::ops::deref::Deref&gt;::deref (22,910,815 samples, 0.01%)</title><rect x="76.7632%" y="773" width="0.0141%" height="15" fill="rgb(224,221,49)" fg:x="124921275186" fg:w="22910815"/><text x="77.0132%" y="783.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (26,012,346 samples, 0.02%)</title><rect x="76.9186%" y="693" width="0.0160%" height="15" fill="rgb(253,169,27)" fg:x="125174112009" fg:w="26012346"/><text x="77.1686%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (64,484,835 samples, 0.04%)</title><rect x="76.8990%" y="725" width="0.0396%" height="15" fill="rgb(211,206,16)" fg:x="125142172277" fg:w="64484835"/><text x="77.1490%" y="735.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (37,612,198 samples, 0.02%)</title><rect x="76.9155%" y="709" width="0.0231%" height="15" fill="rgb(244,87,35)" fg:x="125169044914" fg:w="37612198"/><text x="77.1655%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (56,194,840 samples, 0.03%)</title><rect x="77.0193%" y="693" width="0.0345%" height="15" fill="rgb(246,28,10)" fg:x="125337923917" fg:w="56194840"/><text x="77.2693%" y="703.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (50,080,691 samples, 0.03%)</title><rect x="77.0230%" y="677" width="0.0308%" height="15" fill="rgb(229,12,44)" fg:x="125344038066" fg:w="50080691"/><text x="77.2730%" y="687.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (25,669,766 samples, 0.02%)</title><rect x="77.0380%" y="661" width="0.0158%" height="15" fill="rgb(210,145,37)" fg:x="125368448991" fg:w="25669766"/><text x="77.2880%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (18,539,157 samples, 0.01%)</title><rect x="77.0724%" y="677" width="0.0114%" height="15" fill="rgb(227,112,52)" fg:x="125424438915" fg:w="18539157"/><text x="77.3224%" y="687.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (16,642,521 samples, 0.01%)</title><rect x="77.0736%" y="661" width="0.0102%" height="15" fill="rgb(238,155,34)" fg:x="125426335551" fg:w="16642521"/><text x="77.3236%" y="671.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::Deref&gt;::deref (69,356,610 samples, 0.04%)</title><rect x="77.1397%" y="613" width="0.0426%" height="15" fill="rgb(239,226,36)" fg:x="125533873231" fg:w="69356610"/><text x="77.3897%" y="623.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::Deref&gt;::deref (86,926,961 samples, 0.05%)</title><rect x="77.1301%" y="645" width="0.0534%" height="15" fill="rgb(230,16,23)" fg:x="125518231184" fg:w="86926961"/><text x="77.3801%" y="655.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_ref (75,701,547 samples, 0.05%)</title><rect x="77.1370%" y="629" width="0.0465%" height="15" fill="rgb(236,171,36)" fg:x="125529456598" fg:w="75701547"/><text x="77.3870%" y="639.50"></text></g><g><title>[unknown] (766,001,040 samples, 0.47%)</title><rect x="77.3602%" y="517" width="0.4707%" height="15" fill="rgb(221,22,14)" fg:x="125892673972" fg:w="766001040"/><text x="77.6102%" y="527.50"></text></g><g><title>[unknown] (656,246,414 samples, 0.40%)</title><rect x="77.4276%" y="501" width="0.4033%" height="15" fill="rgb(242,43,11)" fg:x="126002428598" fg:w="656246414"/><text x="77.6776%" y="511.50"></text></g><g><title>[unknown] (549,818,740 samples, 0.34%)</title><rect x="77.4930%" y="485" width="0.3379%" height="15" fill="rgb(232,69,23)" fg:x="126108856272" fg:w="549818740"/><text x="77.7430%" y="495.50"></text></g><g><title>[unknown] (489,333,497 samples, 0.30%)</title><rect x="77.5302%" y="469" width="0.3007%" height="15" fill="rgb(216,180,54)" fg:x="126169341515" fg:w="489333497"/><text x="77.7802%" y="479.50"></text></g><g><title>[unknown] (321,568,069 samples, 0.20%)</title><rect x="77.6333%" y="453" width="0.1976%" height="15" fill="rgb(216,5,24)" fg:x="126337106943" fg:w="321568069"/><text x="77.8833%" y="463.50"></text></g><g><title>[unknown] (60,467,397 samples, 0.04%)</title><rect x="77.7937%" y="437" width="0.0372%" height="15" fill="rgb(225,89,9)" fg:x="126598207615" fg:w="60467397"/><text x="78.0437%" y="447.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1,015,345,591 samples, 0.62%)</title><rect x="77.2555%" y="613" width="0.6239%" height="15" fill="rgb(243,75,33)" fg:x="125722290034" fg:w="1015345591"/><text x="77.5055%" y="623.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,000,683,067 samples, 0.61%)</title><rect x="77.2645%" y="597" width="0.6149%" height="15" fill="rgb(247,141,45)" fg:x="125736952558" fg:w="1000683067"/><text x="77.5145%" y="607.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (969,178,834 samples, 0.60%)</title><rect x="77.2838%" y="581" width="0.5956%" height="15" fill="rgb(232,177,36)" fg:x="125768456791" fg:w="969178834"/><text x="77.5338%" y="591.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (943,008,213 samples, 0.58%)</title><rect x="77.2999%" y="565" width="0.5795%" height="15" fill="rgb(219,125,36)" fg:x="125794627412" fg:w="943008213"/><text x="77.5499%" y="575.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (936,057,732 samples, 0.58%)</title><rect x="77.3042%" y="549" width="0.5752%" height="15" fill="rgb(227,94,9)" fg:x="125801577893" fg:w="936057732"/><text x="77.5542%" y="559.50"></text></g><g><title>__send (917,956,599 samples, 0.56%)</title><rect x="77.3153%" y="533" width="0.5641%" height="15" fill="rgb(240,34,52)" fg:x="125819679026" fg:w="917956599"/><text x="77.5653%" y="543.50"></text></g><g><title>__GI___pthread_enable_asynccancel (77,781,516 samples, 0.05%)</title><rect x="77.8316%" y="517" width="0.0478%" height="15" fill="rgb(216,45,12)" fg:x="126659854109" fg:w="77781516"/><text x="78.0816%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (73,410,164 samples, 0.05%)</title><rect x="77.8794%" y="613" width="0.0451%" height="15" fill="rgb(246,21,19)" fg:x="126737635625" fg:w="73410164"/><text x="78.1294%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (68,198,583 samples, 0.04%)</title><rect x="77.9245%" y="613" width="0.0419%" height="15" fill="rgb(213,98,42)" fg:x="126811045871" fg:w="68198583"/><text x="78.1745%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (127,233,459 samples, 0.08%)</title><rect x="78.0940%" y="581" width="0.0782%" height="15" fill="rgb(250,136,47)" fg:x="127086893984" fg:w="127233459"/><text x="78.3440%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::RestoreOnPending&gt; (37,942,974 samples, 0.02%)</title><rect x="78.1722%" y="581" width="0.0233%" height="15" fill="rgb(251,124,27)" fg:x="127214127443" fg:w="37942974"/><text x="78.4222%" y="591.50"></text></g><g><title>&lt;tokio::task::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (27,557,663 samples, 0.02%)</title><rect x="78.1786%" y="565" width="0.0169%" height="15" fill="rgb(229,180,14)" fg:x="127224512754" fg:w="27557663"/><text x="78.4286%" y="575.50"></text></g><g><title>tokio::task::coop::Budget::is_unconstrained (18,094,942 samples, 0.01%)</title><rect x="78.1844%" y="549" width="0.0111%" height="15" fill="rgb(245,216,25)" fg:x="127233975475" fg:w="18094942"/><text x="78.4344%" y="559.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (24,051,584 samples, 0.01%)</title><rect x="78.2577%" y="565" width="0.0148%" height="15" fill="rgb(251,43,5)" fg:x="127353336716" fg:w="24051584"/><text x="78.5077%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (283,404,957 samples, 0.17%)</title><rect x="78.2725%" y="565" width="0.1742%" height="15" fill="rgb(250,128,24)" fg:x="127377388300" fg:w="283404957"/><text x="78.5225%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (227,414,699 samples, 0.14%)</title><rect x="78.3069%" y="549" width="0.1397%" height="15" fill="rgb(217,117,27)" fg:x="127433378558" fg:w="227414699"/><text x="78.5569%" y="559.50"></text></g><g><title>tokio::io::ready::Ready::from_usize (30,087,489 samples, 0.02%)</title><rect x="78.4467%" y="565" width="0.0185%" height="15" fill="rgb(245,147,4)" fg:x="127660793257" fg:w="30087489"/><text x="78.6967%" y="575.50"></text></g><g><title>tokio::io::ready::Ready::is_empty (61,819,109 samples, 0.04%)</title><rect x="78.4651%" y="565" width="0.0380%" height="15" fill="rgb(242,201,35)" fg:x="127690880746" fg:w="61819109"/><text x="78.7151%" y="575.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (55,975,257 samples, 0.03%)</title><rect x="78.5031%" y="565" width="0.0344%" height="15" fill="rgb(218,181,1)" fg:x="127752699855" fg:w="55975257"/><text x="78.7531%" y="575.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (638,784,504 samples, 0.39%)</title><rect x="78.1955%" y="581" width="0.3925%" height="15" fill="rgb(222,6,29)" fg:x="127252070417" fg:w="638784504"/><text x="78.4455%" y="591.50"></text></g><g><title>tokio::util::bit::Pack::unpack (82,179,809 samples, 0.05%)</title><rect x="78.5375%" y="565" width="0.0505%" height="15" fill="rgb(208,186,3)" fg:x="127808675112" fg:w="82179809"/><text x="78.7875%" y="575.50"></text></g><g><title>tokio::task::coop::RestoreOnPending::made_progress (31,983,312 samples, 0.02%)</title><rect x="78.5880%" y="581" width="0.0197%" height="15" fill="rgb(216,36,26)" fg:x="127890854921" fg:w="31983312"/><text x="78.8380%" y="591.50"></text></g><g><title>tokio::task::coop::Budget::unconstrained (18,397,961 samples, 0.01%)</title><rect x="78.5964%" y="565" width="0.0113%" height="15" fill="rgb(248,201,23)" fg:x="127904440272" fg:w="18397961"/><text x="78.8464%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (105,888,755 samples, 0.07%)</title><rect x="78.6657%" y="565" width="0.0651%" height="15" fill="rgb(251,170,31)" fg:x="128017220815" fg:w="105888755"/><text x="78.9157%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::poll::Poll&lt;tokio::task::coop::RestoreOnPending&gt;&gt; (65,253,806 samples, 0.04%)</title><rect x="78.6907%" y="549" width="0.0401%" height="15" fill="rgb(207,110,25)" fg:x="128057855764" fg:w="65253806"/><text x="78.9407%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::RestoreOnPending&gt; (50,832,245 samples, 0.03%)</title><rect x="78.6995%" y="533" width="0.0312%" height="15" fill="rgb(250,54,15)" fg:x="128072277325" fg:w="50832245"/><text x="78.9495%" y="543.50"></text></g><g><title>&lt;tokio::task::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (37,786,117 samples, 0.02%)</title><rect x="78.7075%" y="517" width="0.0232%" height="15" fill="rgb(227,68,33)" fg:x="128085323453" fg:w="37786117"/><text x="78.9575%" y="527.50"></text></g><g><title>tokio::task::coop::Budget::is_unconstrained (20,110,898 samples, 0.01%)</title><rect x="78.7184%" y="501" width="0.0124%" height="15" fill="rgb(238,34,41)" fg:x="128102998672" fg:w="20110898"/><text x="78.9684%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (18,010,407 samples, 0.01%)</title><rect x="78.7197%" y="485" width="0.0111%" height="15" fill="rgb(220,11,15)" fg:x="128105099163" fg:w="18010407"/><text x="78.9697%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (81,635,064 samples, 0.05%)</title><rect x="78.8157%" y="533" width="0.0502%" height="15" fill="rgb(246,111,35)" fg:x="128261345705" fg:w="81635064"/><text x="79.0657%" y="543.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (57,876,510 samples, 0.04%)</title><rect x="78.8303%" y="517" width="0.0356%" height="15" fill="rgb(209,88,53)" fg:x="128285104259" fg:w="57876510"/><text x="79.0803%" y="527.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (40,649,264 samples, 0.02%)</title><rect x="78.8409%" y="501" width="0.0250%" height="15" fill="rgb(231,185,47)" fg:x="128302331505" fg:w="40649264"/><text x="79.0909%" y="511.50"></text></g><g><title>tokio::task::coop::poll_proceed (563,279,462 samples, 0.35%)</title><rect x="78.6077%" y="581" width="0.3461%" height="15" fill="rgb(233,154,1)" fg:x="127922838233" fg:w="563279462"/><text x="78.8577%" y="591.50"></text></g><g><title>tokio::runtime::context::budget (363,008,125 samples, 0.22%)</title><rect x="78.7307%" y="565" width="0.2231%" height="15" fill="rgb(225,15,46)" fg:x="128123109570" fg:w="363008125"/><text x="78.9807%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (331,454,578 samples, 0.20%)</title><rect x="78.7501%" y="549" width="0.2037%" height="15" fill="rgb(211,135,41)" fg:x="128154663117" fg:w="331454578"/><text x="79.0001%" y="559.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (141,443,883 samples, 0.09%)</title><rect x="78.8669%" y="533" width="0.0869%" height="15" fill="rgb(208,54,0)" fg:x="128344673812" fg:w="141443883"/><text x="79.1169%" y="543.50"></text></g><g><title>tokio::task::coop::poll_proceed::_{{closure}} (125,102,859 samples, 0.08%)</title><rect x="78.8769%" y="517" width="0.0769%" height="15" fill="rgb(244,136,14)" fg:x="128361014836" fg:w="125102859"/><text x="79.1269%" y="527.50"></text></g><g><title>tokio::task::coop::Budget::decrement (45,402,516 samples, 0.03%)</title><rect x="78.9259%" y="501" width="0.0279%" height="15" fill="rgb(241,56,14)" fg:x="128440715179" fg:w="45402516"/><text x="79.1759%" y="511.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (3,008,505,619 samples, 1.85%)</title><rect x="77.1063%" y="661" width="1.8487%" height="15" fill="rgb(205,80,24)" fg:x="125479550912" fg:w="3008505619"/><text x="77.3563%" y="671.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (2,882,898,386 samples, 1.77%)</title><rect x="77.1835%" y="645" width="1.7715%" height="15" fill="rgb(220,57,4)" fg:x="125605158145" fg:w="2882898386"/><text x="77.4335%" y="655.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (2,862,656,286 samples, 1.76%)</title><rect x="77.1959%" y="629" width="1.7591%" height="15" fill="rgb(226,193,50)" fg:x="125625400245" fg:w="2862656286"/><text x="77.4459%" y="639.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (1,603,135,158 samples, 0.99%)</title><rect x="77.9699%" y="613" width="0.9851%" height="15" fill="rgb(231,168,22)" fg:x="126884921373" fg:w="1603135158"/><text x="78.2199%" y="623.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1,516,974,800 samples, 0.93%)</title><rect x="78.0228%" y="597" width="0.9322%" height="15" fill="rgb(254,215,14)" fg:x="126971081731" fg:w="1516974800"/><text x="78.2728%" y="607.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write (3,064,420,648 samples, 1.88%)</title><rect x="77.0838%" y="677" width="1.8831%" height="15" fill="rgb(211,115,16)" fg:x="125442978072" fg:w="3064420648"/><text x="77.3338%" y="687.50">&lt;..</text></g><g><title>hyper_util::rt::tokio::_::&lt;impl hyper_util::rt::tokio::TokioIo&lt;T&gt;&gt;::project (19,342,168 samples, 0.01%)</title><rect x="78.9550%" y="661" width="0.0119%" height="15" fill="rgb(236,210,16)" fg:x="128488056552" fg:w="19342168"/><text x="79.2050%" y="671.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write (3,113,279,973 samples, 1.91%)</title><rect x="77.0538%" y="693" width="1.9131%" height="15" fill="rgb(221,94,12)" fg:x="125394118757" fg:w="3113279973"/><text x="77.3038%" y="703.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write (3,233,110,028 samples, 1.99%)</title><rect x="76.9802%" y="709" width="1.9867%" height="15" fill="rgb(235,218,49)" fg:x="125274288703" fg:w="3233110028"/><text x="77.2302%" y="719.50">&lt;..</text></g><g><title>&lt;hyper::common::io::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write (3,369,122,834 samples, 2.07%)</title><rect x="76.9386%" y="725" width="2.0703%" height="15" fill="rgb(217,114,14)" fg:x="125206657112" fg:w="3369122834"/><text x="77.1886%" y="735.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (68,381,215 samples, 0.04%)</title><rect x="78.9669%" y="709" width="0.0420%" height="15" fill="rgb(216,145,22)" fg:x="128507398731" fg:w="68381215"/><text x="79.2169%" y="719.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (58,011,133 samples, 0.04%)</title><rect x="78.9733%" y="693" width="0.0356%" height="15" fill="rgb(217,112,39)" fg:x="128517768813" fg:w="58011133"/><text x="79.2233%" y="703.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (47,578,212 samples, 0.03%)</title><rect x="78.9797%" y="677" width="0.0292%" height="15" fill="rgb(225,85,32)" fg:x="128528201734" fg:w="47578212"/><text x="79.2297%" y="687.50"></text></g><g><title>&lt;hyper::upgrade::Upgraded as hyper::rt::io::Write&gt;::poll_write (3,514,525,056 samples, 2.16%)</title><rect x="76.8493%" y="741" width="2.1597%" height="15" fill="rgb(245,209,47)" fg:x="125061254993" fg:w="3514525056"/><text x="77.0993%" y="751.50">&lt;..</text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (3,582,192,382 samples, 2.20%)</title><rect x="76.8165%" y="757" width="2.2012%" height="15" fill="rgb(218,220,15)" fg:x="125007921596" fg:w="3582192382"/><text x="77.0665%" y="767.50">&lt;..</text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (45,351,058 samples, 0.03%)</title><rect x="79.0336%" y="741" width="0.0279%" height="15" fill="rgb(222,202,31)" fg:x="128616007212" fg:w="45351058"/><text x="79.2836%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (25,791,096 samples, 0.02%)</title><rect x="79.0457%" y="725" width="0.0158%" height="15" fill="rgb(243,203,4)" fg:x="128635567174" fg:w="25791096"/><text x="79.2957%" y="735.50"></text></g><g><title>core::cmp::PartialOrd::le (94,086,581 samples, 0.06%)</title><rect x="79.0177%" y="757" width="0.0578%" height="15" fill="rgb(237,92,17)" fg:x="128590113978" fg:w="94086581"/><text x="79.2677%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (22,842,289 samples, 0.01%)</title><rect x="79.0615%" y="741" width="0.0140%" height="15" fill="rgb(231,119,7)" fg:x="128661358270" fg:w="22842289"/><text x="79.3115%" y="751.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Write&gt;::write::_{{closure}} (3,766,340,365 samples, 2.31%)</title><rect x="76.7773%" y="773" width="2.3144%" height="15" fill="rgb(237,82,41)" fg:x="124944186001" fg:w="3766340365"/><text x="77.0273%" y="783.50">&lt;..</text></g><g><title>log::max_level (26,325,807 samples, 0.02%)</title><rect x="79.0755%" y="757" width="0.0162%" height="15" fill="rgb(226,81,48)" fg:x="128684200559" fg:w="26325807"/><text x="79.3255%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18,264,826 samples, 0.01%)</title><rect x="79.0805%" y="741" width="0.0112%" height="15" fill="rgb(234,70,51)" fg:x="128692261540" fg:w="18264826"/><text x="79.3305%" y="751.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (35,949,850 samples, 0.02%)</title><rect x="79.1064%" y="757" width="0.0221%" height="15" fill="rgb(251,86,4)" fg:x="128734488654" fg:w="35949850"/><text x="79.3564%" y="767.50"></text></g><g><title>core::cmp::PartialOrd::le (94,144,227 samples, 0.06%)</title><rect x="79.0917%" y="773" width="0.0579%" height="15" fill="rgb(244,144,28)" fg:x="128710526366" fg:w="94144227"/><text x="79.3417%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (34,232,089 samples, 0.02%)</title><rect x="79.1285%" y="757" width="0.0210%" height="15" fill="rgb(232,161,39)" fg:x="128770438504" fg:w="34232089"/><text x="79.3785%" y="767.50"></text></g><g><title>core::task::wake::Context::from_waker (17,168,010 samples, 0.01%)</title><rect x="79.1512%" y="773" width="0.0105%" height="15" fill="rgb(247,34,51)" fg:x="128807264158" fg:w="17168010"/><text x="79.4012%" y="783.50"></text></g><g><title>core::task::wake::ContextBuilder::build (17,168,010 samples, 0.01%)</title><rect x="79.1512%" y="757" width="0.0105%" height="15" fill="rgb(225,132,2)" fg:x="128807264158" fg:w="17168010"/><text x="79.4012%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::as_ptr (33,049,346 samples, 0.02%)</title><rect x="79.1824%" y="757" width="0.0203%" height="15" fill="rgb(209,159,44)" fg:x="128858028742" fg:w="33049346"/><text x="79.4324%" y="767.50"></text></g><g><title>futures_task::waker_ref::waker_ref (94,913,894 samples, 0.06%)</title><rect x="79.1617%" y="773" width="0.0583%" height="15" fill="rgb(251,214,1)" fg:x="128824432168" fg:w="94913894"/><text x="79.4117%" y="783.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Write&gt;::write (4,479,683,511 samples, 2.75%)</title><rect x="76.4925%" y="805" width="2.7527%" height="15" fill="rgb(247,84,47)" fg:x="124480619990" fg:w="4479683511"/><text x="76.7425%" y="815.50">&lt;t..</text></g><g><title>tokio_tungstenite::compat::AllowStd&lt;S&gt;::with_context (4,202,539,999 samples, 2.58%)</title><rect x="76.6628%" y="789" width="2.5824%" height="15" fill="rgb(240,111,43)" fg:x="124757763502" fg:w="4202539999"/><text x="76.9128%" y="799.50">to..</text></g><g><title>log::max_level (40,957,439 samples, 0.03%)</title><rect x="79.2200%" y="773" width="0.0252%" height="15" fill="rgb(215,214,35)" fg:x="128919346062" fg:w="40957439"/><text x="79.4700%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (32,303,939 samples, 0.02%)</title><rect x="79.2253%" y="757" width="0.0199%" height="15" fill="rgb(248,207,23)" fg:x="128927999562" fg:w="32303939"/><text x="79.4753%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (28,778,510 samples, 0.02%)</title><rect x="79.2275%" y="741" width="0.0177%" height="15" fill="rgb(214,186,4)" fg:x="128931524991" fg:w="28778510"/><text x="79.4775%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (53,228,172 samples, 0.03%)</title><rect x="79.3075%" y="789" width="0.0327%" height="15" fill="rgb(220,133,22)" fg:x="129061621523" fg:w="53228172"/><text x="79.5575%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::end_bound (16,506,252 samples, 0.01%)</title><rect x="79.4065%" y="773" width="0.0101%" height="15" fill="rgb(239,134,19)" fg:x="129222771929" fg:w="16506252"/><text x="79.6565%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::start_bound (50,085,396 samples, 0.03%)</title><rect x="79.4166%" y="773" width="0.0308%" height="15" fill="rgb(250,140,9)" fg:x="129239278181" fg:w="50085396"/><text x="79.6666%" y="783.50"></text></g><g><title>core::slice::index::range (170,753,157 samples, 0.10%)</title><rect x="79.3425%" y="789" width="0.1049%" height="15" fill="rgb(225,59,14)" fg:x="129118613235" fg:w="170753157"/><text x="79.5925%" y="799.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (59,130,147 samples, 0.04%)</title><rect x="79.4708%" y="757" width="0.0363%" height="15" fill="rgb(214,152,51)" fg:x="129327441612" fg:w="59130147"/><text x="79.7208%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (452,307,636 samples, 0.28%)</title><rect x="79.2452%" y="805" width="0.2779%" height="15" fill="rgb(251,227,43)" fg:x="128960303513" fg:w="452307636"/><text x="79.4952%" y="815.50"></text></g><g><title>core::slice::raw::from_raw_parts (123,244,757 samples, 0.08%)</title><rect x="79.4474%" y="789" width="0.0757%" height="15" fill="rgb(241,96,17)" fg:x="129289366392" fg:w="123244757"/><text x="79.6974%" y="799.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (119,079,149 samples, 0.07%)</title><rect x="79.4500%" y="773" width="0.0732%" height="15" fill="rgb(234,198,43)" fg:x="129293532000" fg:w="119079149"/><text x="79.7000%" y="783.50"></text></g><g><title>core::ub_checks::maybe_is_aligned_and_not_null (26,039,390 samples, 0.02%)</title><rect x="79.5071%" y="757" width="0.0160%" height="15" fill="rgb(220,108,29)" fg:x="129386571759" fg:w="26039390"/><text x="79.7571%" y="767.50"></text></g><g><title>core::ub_checks::maybe_is_aligned_and_not_null::runtime (26,039,390 samples, 0.02%)</title><rect x="79.5071%" y="741" width="0.0160%" height="15" fill="rgb(226,163,33)" fg:x="129386571759" fg:w="26039390"/><text x="79.7571%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (69,889,282 samples, 0.04%)</title><rect x="79.5231%" y="805" width="0.0429%" height="15" fill="rgb(205,194,45)" fg:x="129412611149" fg:w="69889282"/><text x="79.7731%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (45,054,128 samples, 0.03%)</title><rect x="79.5384%" y="789" width="0.0277%" height="15" fill="rgb(206,143,44)" fg:x="129437446303" fg:w="45054128"/><text x="79.7884%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (112,885,483 samples, 0.07%)</title><rect x="79.6747%" y="773" width="0.0694%" height="15" fill="rgb(236,136,36)" fg:x="129659293814" fg:w="112885483"/><text x="79.9247%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::offset_from_unsigned (96,376,792 samples, 0.06%)</title><rect x="79.6849%" y="757" width="0.0592%" height="15" fill="rgb(249,172,42)" fg:x="129675802505" fg:w="96376792"/><text x="79.9349%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset_from_unsigned (27,233,068 samples, 0.02%)</title><rect x="79.7274%" y="741" width="0.0167%" height="15" fill="rgb(216,139,23)" fg:x="129744946229" fg:w="27233068"/><text x="79.9774%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from_unsigned (27,233,068 samples, 0.02%)</title><rect x="79.7274%" y="725" width="0.0167%" height="15" fill="rgb(207,166,20)" fg:x="129744946229" fg:w="27233068"/><text x="79.9774%" y="735.50"></text></g><g><title>core::mem::take (16,309,483 samples, 0.01%)</title><rect x="79.7441%" y="773" width="0.0100%" height="15" fill="rgb(210,209,22)" fg:x="129772179297" fg:w="16309483"/><text x="79.9941%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from_unsigned (41,856,153 samples, 0.03%)</title><rect x="79.7541%" y="773" width="0.0257%" height="15" fill="rgb(232,118,20)" fg:x="129788488780" fg:w="41856153"/><text x="80.0041%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u8,alloc::alloc::Global&gt;&gt; (66,392,355 samples, 0.04%)</title><rect x="79.7798%" y="773" width="0.0408%" height="15" fill="rgb(238,113,42)" fg:x="129830344933" fg:w="66392355"/><text x="80.0298%" y="783.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30,003,647 samples, 0.02%)</title><rect x="79.8022%" y="757" width="0.0184%" height="15" fill="rgb(231,42,5)" fg:x="129866733641" fg:w="30003647"/><text x="80.0522%" y="767.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::offset_from_unsigned (25,342,763 samples, 0.02%)</title><rect x="79.8264%" y="741" width="0.0156%" height="15" fill="rgb(243,166,24)" fg:x="129906183717" fg:w="25342763"/><text x="80.0764%" y="751.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (28,657,556 samples, 0.02%)</title><rect x="79.8528%" y="709" width="0.0176%" height="15" fill="rgb(237,226,12)" fg:x="129949052013" fg:w="28657556"/><text x="80.1028%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;u8&gt;&gt; (507,873,616 samples, 0.31%)</title><rect x="79.5661%" y="805" width="0.3121%" height="15" fill="rgb(229,133,24)" fg:x="129482500431" fg:w="507873616"/><text x="79.8161%" y="815.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (418,619,778 samples, 0.26%)</title><rect x="79.6209%" y="789" width="0.2572%" height="15" fill="rgb(238,33,43)" fg:x="129571754269" fg:w="418619778"/><text x="79.8709%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (93,636,759 samples, 0.06%)</title><rect x="79.8206%" y="773" width="0.0575%" height="15" fill="rgb(227,59,38)" fg:x="129896737288" fg:w="93636759"/><text x="80.0706%" y="783.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (93,636,759 samples, 0.06%)</title><rect x="79.8206%" y="757" width="0.0575%" height="15" fill="rgb(230,97,0)" fg:x="129896737288" fg:w="93636759"/><text x="80.0706%" y="767.50"></text></g><g><title>core::slice::raw::from_raw_parts (58,847,567 samples, 0.04%)</title><rect x="79.8420%" y="741" width="0.0362%" height="15" fill="rgb(250,173,50)" fg:x="129931526480" fg:w="58847567"/><text x="80.0920%" y="751.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (56,906,544 samples, 0.03%)</title><rect x="79.8432%" y="725" width="0.0350%" height="15" fill="rgb(240,15,50)" fg:x="129933467503" fg:w="56906544"/><text x="80.0932%" y="735.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::poll_flush::_{{closure}} (8,092,844,523 samples, 4.97%)</title><rect x="74.9069%" y="869" width="4.9730%" height="15" fill="rgb(221,93,22)" fg:x="121900369294" fg:w="8092844523"/><text x="75.1569%" y="879.50">&lt;tokio..</text></g><g><title>tungstenite::protocol::WebSocket&lt;Stream&gt;::flush (7,882,994,266 samples, 4.84%)</title><rect x="75.0359%" y="853" width="4.8440%" height="15" fill="rgb(245,180,53)" fg:x="122110219551" fg:w="7882994266"/><text x="75.2859%" y="863.50">tungst..</text></g><g><title>tungstenite::protocol::WebSocketContext::flush (7,830,180,982 samples, 4.81%)</title><rect x="75.0683%" y="837" width="4.8116%" height="15" fill="rgb(231,88,51)" fg:x="122163032835" fg:w="7830180982"/><text x="75.3183%" y="847.50">tungst..</text></g><g><title>tungstenite::protocol::frame::FrameCodec::write_out_buffer (5,883,420,069 samples, 3.62%)</title><rect x="76.2646%" y="821" width="3.6153%" height="15" fill="rgb(240,58,21)" fg:x="124109793748" fg:w="5883420069"/><text x="76.5146%" y="831.50">tung..</text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (42,843,563 samples, 0.03%)</title><rect x="79.9070%" y="853" width="0.0263%" height="15" fill="rgb(237,21,10)" fg:x="130037265830" fg:w="42843563"/><text x="80.1570%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (18,391,489 samples, 0.01%)</title><rect x="79.9220%" y="837" width="0.0113%" height="15" fill="rgb(218,43,11)" fg:x="130061717904" fg:w="18391489"/><text x="80.1720%" y="847.50"></text></g><g><title>core::cmp::PartialOrd::le (125,320,309 samples, 0.08%)</title><rect x="79.8799%" y="869" width="0.0770%" height="15" fill="rgb(218,221,29)" fg:x="129993213817" fg:w="125320309"/><text x="80.1299%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (38,424,733 samples, 0.02%)</title><rect x="79.9333%" y="853" width="0.0236%" height="15" fill="rgb(214,118,42)" fg:x="130080109393" fg:w="38424733"/><text x="80.1833%" y="863.50"></text></g><g><title>core::task::wake::Context::waker (17,274,864 samples, 0.01%)</title><rect x="79.9569%" y="869" width="0.0106%" height="15" fill="rgb(251,200,26)" fg:x="130118534126" fg:w="17274864"/><text x="80.2069%" y="879.50"></text></g><g><title>log::max_level (62,125,833 samples, 0.04%)</title><rect x="79.9675%" y="869" width="0.0382%" height="15" fill="rgb(237,101,39)" fg:x="130135808990" fg:w="62125833"/><text x="80.2175%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (48,836,208 samples, 0.03%)</title><rect x="79.9757%" y="853" width="0.0300%" height="15" fill="rgb(251,117,11)" fg:x="130149098615" fg:w="48836208"/><text x="80.2257%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (32,199,076 samples, 0.02%)</title><rect x="79.9859%" y="837" width="0.0198%" height="15" fill="rgb(216,223,23)" fg:x="130165735747" fg:w="32199076"/><text x="80.2359%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (94,952,353 samples, 0.06%)</title><rect x="80.0478%" y="853" width="0.0583%" height="15" fill="rgb(251,54,12)" fg:x="130266381575" fg:w="94952353"/><text x="80.2978%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (40,203,020 samples, 0.02%)</title><rect x="80.0814%" y="837" width="0.0247%" height="15" fill="rgb(254,176,54)" fg:x="130321130908" fg:w="40203020"/><text x="80.3314%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (40,203,020 samples, 0.02%)</title><rect x="80.0814%" y="821" width="0.0247%" height="15" fill="rgb(210,32,8)" fg:x="130321130908" fg:w="40203020"/><text x="80.3314%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (49,033,764 samples, 0.03%)</title><rect x="80.2215%" y="837" width="0.0301%" height="15" fill="rgb(235,52,38)" fg:x="130549097632" fg:w="49033764"/><text x="80.4715%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (596,266,417 samples, 0.37%)</title><rect x="80.2516%" y="837" width="0.3664%" height="15" fill="rgb(231,4,44)" fg:x="130598131396" fg:w="596266417"/><text x="80.5016%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (552,472,405 samples, 0.34%)</title><rect x="80.2785%" y="821" width="0.3395%" height="15" fill="rgb(249,2,32)" fg:x="130641925408" fg:w="552472405"/><text x="80.5285%" y="831.50"></text></g><g><title>tokio_tungstenite::compat::AllowStd&lt;S&gt;::set_waker (1,047,709,492 samples, 0.64%)</title><rect x="80.0057%" y="869" width="0.6438%" height="15" fill="rgb(224,65,26)" fg:x="130197934823" fg:w="1047709492"/><text x="80.2557%" y="879.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (884,310,387 samples, 0.54%)</title><rect x="80.1061%" y="853" width="0.5434%" height="15" fill="rgb(250,73,40)" fg:x="130361333928" fg:w="884310387"/><text x="80.3561%" y="863.50"></text></g><g><title>core::task::wake::Waker::will_wake (51,246,502 samples, 0.03%)</title><rect x="80.6180%" y="837" width="0.0315%" height="15" fill="rgb(253,177,16)" fg:x="131194397813" fg:w="51246502"/><text x="80.8680%" y="847.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::poll_flush (9,964,600,835 samples, 6.12%)</title><rect x="74.5319%" y="901" width="6.1232%" height="15" fill="rgb(217,32,34)" fg:x="121289997304" fg:w="9964600835"/><text x="74.7819%" y="911.50">&lt;tokio_t..</text></g><g><title>tokio_tungstenite::WebSocketStream&lt;S&gt;::with_context (9,571,073,749 samples, 5.88%)</title><rect x="74.7737%" y="885" width="5.8814%" height="15" fill="rgb(212,7,10)" fg:x="121683524390" fg:w="9571073749"/><text x="75.0237%" y="895.50">tokio_t..</text></g><g><title>&lt;axum::extract::ws::WebSocket as futures_sink::Sink&lt;axum::extract::ws::Message&gt;&gt;::poll_flush (10,086,749,608 samples, 6.20%)</title><rect x="74.4871%" y="917" width="6.1982%" height="15" fill="rgb(245,89,8)" fg:x="121217175505" fg:w="10086749608"/><text x="74.7371%" y="927.50">&lt;axum::e..</text></g><g><title>core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (49,326,974 samples, 0.03%)</title><rect x="80.6550%" y="901" width="0.0303%" height="15" fill="rgb(237,16,53)" fg:x="131254598139" fg:w="49326974"/><text x="80.9050%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (30,171,746 samples, 0.02%)</title><rect x="80.6853%" y="917" width="0.0185%" height="15" fill="rgb(250,204,30)" fg:x="131303925113" fg:w="30171746"/><text x="80.9353%" y="927.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (22,460,391 samples, 0.01%)</title><rect x="80.6901%" y="901" width="0.0138%" height="15" fill="rgb(208,77,27)" fg:x="131311636468" fg:w="22460391"/><text x="80.9401%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (29,676,608 samples, 0.02%)</title><rect x="80.7039%" y="917" width="0.0182%" height="15" fill="rgb(250,204,28)" fg:x="131334096859" fg:w="29676608"/><text x="80.9539%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (26,395,252 samples, 0.02%)</title><rect x="80.8480%" y="869" width="0.0162%" height="15" fill="rgb(244,63,21)" fg:x="131568683693" fg:w="26395252"/><text x="81.0980%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::bilock::BiLockGuard&lt;axum::extract::ws::WebSocket&gt;&gt; (310,340,394 samples, 0.19%)</title><rect x="80.7221%" y="917" width="0.1907%" height="15" fill="rgb(236,85,44)" fg:x="131363773467" fg:w="310340394"/><text x="80.9721%" y="927.50"></text></g><g><title>&lt;futures_util::lock::bilock::BiLockGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (241,950,388 samples, 0.15%)</title><rect x="80.7641%" y="901" width="0.1487%" height="15" fill="rgb(215,98,4)" fg:x="131432163473" fg:w="241950388"/><text x="81.0141%" y="911.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::unlock (192,428,288 samples, 0.12%)</title><rect x="80.7946%" y="885" width="0.1182%" height="15" fill="rgb(235,38,11)" fg:x="131481685573" fg:w="192428288"/><text x="81.0446%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (79,034,916 samples, 0.05%)</title><rect x="80.8643%" y="869" width="0.0486%" height="15" fill="rgb(254,186,25)" fg:x="131595078945" fg:w="79034916"/><text x="81.1143%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_swap (51,733,330 samples, 0.03%)</title><rect x="80.8810%" y="853" width="0.0318%" height="15" fill="rgb(225,55,31)" fg:x="131622380531" fg:w="51733330"/><text x="81.1310%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;core::task::wake::Waker&gt;&gt;&gt; (24,040,465 samples, 0.01%)</title><rect x="80.9804%" y="901" width="0.0148%" height="15" fill="rgb(211,15,21)" fg:x="131784139941" fg:w="24040465"/><text x="81.2304%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (150,460,662 samples, 0.09%)</title><rect x="80.9974%" y="901" width="0.0925%" height="15" fill="rgb(215,187,41)" fg:x="131811728489" fg:w="150460662"/><text x="81.2474%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_swap (130,140,729 samples, 0.08%)</title><rect x="81.0099%" y="885" width="0.0800%" height="15" fill="rgb(248,69,32)" fg:x="131832048422" fg:w="130140729"/><text x="81.2599%" y="895.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (302,433,458 samples, 0.19%)</title><rect x="80.9128%" y="917" width="0.1858%" height="15" fill="rgb(252,102,52)" fg:x="131674113861" fg:w="302433458"/><text x="81.1628%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (114,359,588 samples, 0.07%)</title><rect x="81.1302%" y="901" width="0.0703%" height="15" fill="rgb(253,140,32)" fg:x="132027815531" fg:w="114359588"/><text x="81.3802%" y="911.50"></text></g><g><title>futures_util::lock::bilock::BiLockGuard&lt;T&gt;::as_pin_mut (172,941,785 samples, 0.11%)</title><rect x="81.0987%" y="917" width="0.1063%" height="15" fill="rgb(216,56,42)" fg:x="131976547319" fg:w="172941785"/><text x="81.3487%" y="927.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (18,796,475 samples, 0.01%)</title><rect x="81.3832%" y="853" width="0.0116%" height="15" fill="rgb(216,184,14)" fg:x="132439613385" fg:w="18796475"/><text x="81.6332%" y="863.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (80,790,087 samples, 0.05%)</title><rect x="81.3485%" y="885" width="0.0496%" height="15" fill="rgb(237,187,27)" fg:x="132383057076" fg:w="80790087"/><text x="81.5985%" y="895.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (27,699,209 samples, 0.02%)</title><rect x="81.3811%" y="869" width="0.0170%" height="15" fill="rgb(219,65,3)" fg:x="132436147954" fg:w="27699209"/><text x="81.6311%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::Deref&gt;::deref (88,454,596 samples, 0.05%)</title><rect x="81.4664%" y="869" width="0.0544%" height="15" fill="rgb(245,83,25)" fg:x="132574919420" fg:w="88454596"/><text x="81.7164%" y="879.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_ref (46,531,156 samples, 0.03%)</title><rect x="81.4921%" y="853" width="0.0286%" height="15" fill="rgb(214,205,45)" fg:x="132616842860" fg:w="46531156"/><text x="81.7421%" y="863.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::Deref&gt;::deref (42,622,551 samples, 0.03%)</title><rect x="81.4945%" y="837" width="0.0262%" height="15" fill="rgb(241,20,18)" fg:x="132620751465" fg:w="42622551"/><text x="81.7445%" y="847.50"></text></g><g><title>__memmove_avx_unaligned (19,346,584 samples, 0.01%)</title><rect x="81.5207%" y="869" width="0.0119%" height="15" fill="rgb(232,163,23)" fg:x="132663374016" fg:w="19346584"/><text x="81.7707%" y="879.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::poll_ready (249,411,994 samples, 0.15%)</title><rect x="81.3981%" y="885" width="0.1533%" height="15" fill="rgb(214,5,46)" fg:x="132463847163" fg:w="249411994"/><text x="81.6481%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (30,538,557 samples, 0.02%)</title><rect x="81.5326%" y="869" width="0.0188%" height="15" fill="rgb(229,78,17)" fg:x="132682720600" fg:w="30538557"/><text x="81.7826%" y="879.50"></text></g><g><title>&lt;axum::extract::ws::WebSocket as futures_sink::Sink&lt;axum::extract::ws::Message&gt;&gt;::poll_ready (451,406,986 samples, 0.28%)</title><rect x="81.3008%" y="901" width="0.2774%" height="15" fill="rgb(248,89,10)" fg:x="132305526608" fg:w="451406986"/><text x="81.5508%" y="911.50"></text></g><g><title>core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (43,674,437 samples, 0.03%)</title><rect x="81.5514%" y="885" width="0.0268%" height="15" fill="rgb(248,54,15)" fg:x="132713259157" fg:w="43674437"/><text x="81.8014%" y="895.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (77,048,898 samples, 0.05%)</title><rect x="81.7239%" y="869" width="0.0473%" height="15" fill="rgb(223,116,6)" fg:x="132994047590" fg:w="77048898"/><text x="81.9739%" y="879.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (54,308,788 samples, 0.03%)</title><rect x="81.7379%" y="853" width="0.0334%" height="15" fill="rgb(205,125,38)" fg:x="133016787700" fg:w="54308788"/><text x="81.9879%" y="863.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (42,152,679 samples, 0.03%)</title><rect x="81.7454%" y="837" width="0.0259%" height="15" fill="rgb(251,78,38)" fg:x="133028943809" fg:w="42152679"/><text x="81.9954%" y="847.50"></text></g><g><title>__memmove_avx_unaligned (29,826,827 samples, 0.02%)</title><rect x="81.8847%" y="837" width="0.0183%" height="15" fill="rgb(253,78,28)" fg:x="133255751369" fg:w="29826827"/><text x="82.1347%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (157,227,386 samples, 0.10%)</title><rect x="82.2610%" y="805" width="0.0966%" height="15" fill="rgb(209,120,3)" fg:x="133868088120" fg:w="157227386"/><text x="82.5110%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (59,046,370 samples, 0.04%)</title><rect x="82.4799%" y="789" width="0.0363%" height="15" fill="rgb(238,229,9)" fg:x="134224379924" fg:w="59046370"/><text x="82.7299%" y="799.50"></text></g><g><title>&lt;tungstenite::protocol::Role as core::cmp::PartialEq&gt;::eq (48,507,445 samples, 0.03%)</title><rect x="82.5162%" y="789" width="0.0298%" height="15" fill="rgb(253,159,18)" fg:x="134283426294" fg:w="48507445"/><text x="82.7662%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (77,232,224 samples, 0.05%)</title><rect x="82.5480%" y="789" width="0.0475%" height="15" fill="rgb(244,42,34)" fg:x="134335096074" fg:w="77232224"/><text x="82.7980%" y="799.50"></text></g><g><title>core::mem::replace (53,871,063 samples, 0.03%)</title><rect x="82.5623%" y="773" width="0.0331%" height="15" fill="rgb(224,8,7)" fg:x="134358457235" fg:w="53871063"/><text x="82.8123%" y="783.50"></text></g><g><title>__memmove_avx_unaligned (53,871,063 samples, 0.03%)</title><rect x="82.5623%" y="757" width="0.0331%" height="15" fill="rgb(210,201,45)" fg:x="134358457235" fg:w="53871063"/><text x="82.8123%" y="767.50"></text></g><g><title>__memmove_avx_unaligned (43,511,932 samples, 0.03%)</title><rect x="82.7244%" y="757" width="0.0267%" height="15" fill="rgb(252,185,21)" fg:x="134622201434" fg:w="43511932"/><text x="82.9744%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (43,096,731 samples, 0.03%)</title><rect x="82.7511%" y="757" width="0.0265%" height="15" fill="rgb(223,131,1)" fg:x="134665713366" fg:w="43096731"/><text x="83.0011%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,tungstenite::error::Error&gt; as tungstenite::protocol::CheckConnectionReset&gt;::check_connection_reset (188,790,582 samples, 0.12%)</title><rect x="82.6628%" y="773" width="0.1160%" height="15" fill="rgb(245,141,16)" fg:x="134522023798" fg:w="188790582"/><text x="82.9128%" y="783.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (99,024,599 samples, 0.06%)</title><rect x="82.8044%" y="757" width="0.0608%" height="15" fill="rgb(229,55,45)" fg:x="134752392454" fg:w="99024599"/><text x="83.0544%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (31,415,542 samples, 0.02%)</title><rect x="82.8459%" y="741" width="0.0193%" height="15" fill="rgb(208,92,15)" fg:x="134820001511" fg:w="31415542"/><text x="83.0959%" y="751.50"></text></g><g><title>core::cmp::PartialOrd::le (168,737,787 samples, 0.10%)</title><rect x="82.7788%" y="773" width="0.1037%" height="15" fill="rgb(234,185,47)" fg:x="134710814380" fg:w="168737787"/><text x="83.0288%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (28,135,114 samples, 0.02%)</title><rect x="82.8652%" y="757" width="0.0173%" height="15" fill="rgb(253,104,50)" fg:x="134851417053" fg:w="28135114"/><text x="83.1152%" y="767.50"></text></g><g><title>log::max_level (118,540,662 samples, 0.07%)</title><rect x="82.8825%" y="773" width="0.0728%" height="15" fill="rgb(205,70,7)" fg:x="134879552167" fg:w="118540662"/><text x="83.1325%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (94,332,114 samples, 0.06%)</title><rect x="82.8974%" y="757" width="0.0580%" height="15" fill="rgb(240,178,43)" fg:x="134903760715" fg:w="94332114"/><text x="83.1474%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (85,337,416 samples, 0.05%)</title><rect x="82.9029%" y="741" width="0.0524%" height="15" fill="rgb(214,112,2)" fg:x="134912755413" fg:w="85337416"/><text x="83.1529%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (92,547,085 samples, 0.06%)</title><rect x="83.1567%" y="757" width="0.0569%" height="15" fill="rgb(206,46,17)" fg:x="135325662165" fg:w="92547085"/><text x="83.4067%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (31,807,940 samples, 0.02%)</title><rect x="83.2135%" y="757" width="0.0195%" height="15" fill="rgb(225,220,16)" fg:x="135418209250" fg:w="31807940"/><text x="83.4635%" y="767.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (75,768,094 samples, 0.05%)</title><rect x="83.2523%" y="741" width="0.0466%" height="15" fill="rgb(238,65,40)" fg:x="135481269971" fg:w="75768094"/><text x="83.5023%" y="751.50"></text></g><g><title>core::cmp::PartialOrd::le (135,015,447 samples, 0.08%)</title><rect x="83.2331%" y="757" width="0.0830%" height="15" fill="rgb(230,151,21)" fg:x="135450017190" fg:w="135015447"/><text x="83.4831%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (27,994,572 samples, 0.02%)</title><rect x="83.2988%" y="741" width="0.0172%" height="15" fill="rgb(218,58,49)" fg:x="135557038065" fg:w="27994572"/><text x="83.5488%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (61,424,772 samples, 0.04%)</title><rect x="83.3160%" y="757" width="0.0377%" height="15" fill="rgb(219,179,14)" fg:x="135585032637" fg:w="61424772"/><text x="83.5660%" y="767.50"></text></g><g><title>log::max_level (21,706,830 samples, 0.01%)</title><rect x="83.3538%" y="757" width="0.0133%" height="15" fill="rgb(223,72,1)" fg:x="135646457409" fg:w="21706830"/><text x="83.6038%" y="767.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (53,273,576 samples, 0.03%)</title><rect x="83.6033%" y="677" width="0.0327%" height="15" fill="rgb(238,126,10)" fg:x="136052520921" fg:w="53273576"/><text x="83.8533%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (17,077,234 samples, 0.01%)</title><rect x="83.6361%" y="645" width="0.0105%" height="15" fill="rgb(224,206,38)" fg:x="136105794497" fg:w="17077234"/><text x="83.8861%" y="655.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::deref::Deref&gt;::deref (201,427,964 samples, 0.12%)</title><rect x="83.5265%" y="741" width="0.1238%" height="15" fill="rgb(212,201,54)" fg:x="135927455640" fg:w="201427964"/><text x="83.7765%" y="751.50"></text></g><g><title>bytes::bytes::Bytes::as_slice (170,603,324 samples, 0.10%)</title><rect x="83.5454%" y="725" width="0.1048%" height="15" fill="rgb(218,154,48)" fg:x="135958280280" fg:w="170603324"/><text x="83.7954%" y="735.50"></text></g><g><title>core::slice::raw::from_raw_parts (117,193,705 samples, 0.07%)</title><rect x="83.5782%" y="709" width="0.0720%" height="15" fill="rgb(232,93,24)" fg:x="136011689899" fg:w="117193705"/><text x="83.8282%" y="719.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (91,892,028 samples, 0.06%)</title><rect x="83.5938%" y="693" width="0.0565%" height="15" fill="rgb(245,30,21)" fg:x="136036991576" fg:w="91892028"/><text x="83.8438%" y="703.50"></text></g><g><title>core::ub_checks::maybe_is_aligned_and_not_null (23,089,107 samples, 0.01%)</title><rect x="83.6361%" y="677" width="0.0142%" height="15" fill="rgb(242,148,29)" fg:x="136105794497" fg:w="23089107"/><text x="83.8861%" y="687.50"></text></g><g><title>core::ub_checks::maybe_is_aligned_and_not_null::runtime (23,089,107 samples, 0.01%)</title><rect x="83.6361%" y="661" width="0.0142%" height="15" fill="rgb(244,153,54)" fg:x="136105794497" fg:w="23089107"/><text x="83.8861%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (25,118,391 samples, 0.02%)</title><rect x="83.6502%" y="741" width="0.0154%" height="15" fill="rgb(252,87,22)" fg:x="136128883604" fg:w="25118391"/><text x="83.9002%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (41,286,744 samples, 0.03%)</title><rect x="83.6687%" y="725" width="0.0254%" height="15" fill="rgb(210,51,29)" fg:x="136158896884" fg:w="41286744"/><text x="83.9187%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (54,895,003 samples, 0.03%)</title><rect x="83.6657%" y="741" width="0.0337%" height="15" fill="rgb(242,136,47)" fg:x="136154001995" fg:w="54895003"/><text x="83.9157%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (71,333,060 samples, 0.04%)</title><rect x="83.7115%" y="741" width="0.0438%" height="15" fill="rgb(238,68,4)" fg:x="136228519299" fg:w="71333060"/><text x="83.9615%" y="751.50"></text></g><g><title>core::mem::replace (24,261,444 samples, 0.01%)</title><rect x="83.7404%" y="725" width="0.0149%" height="15" fill="rgb(242,161,30)" fg:x="136275590915" fg:w="24261444"/><text x="83.9904%" y="735.50"></text></g><g><title>__rustc::__rdl_dealloc (18,073,594 samples, 0.01%)</title><rect x="84.0398%" y="613" width="0.0111%" height="15" fill="rgb(218,58,44)" fg:x="136762789777" fg:w="18073594"/><text x="84.2898%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (265,104,864 samples, 0.16%)</title><rect x="84.0084%" y="629" width="0.1629%" height="15" fill="rgb(252,125,32)" fg:x="136711809536" fg:w="265104864"/><text x="84.2584%" y="639.50"></text></g><g><title>cfree@GLIBC_2.2.5 (180,333,771 samples, 0.11%)</title><rect x="84.0605%" y="613" width="0.1108%" height="15" fill="rgb(219,178,0)" fg:x="136796580629" fg:w="180333771"/><text x="84.3105%" y="623.50"></text></g><g><title>_int_free (18,818,482 samples, 0.01%)</title><rect x="84.1598%" y="597" width="0.0116%" height="15" fill="rgb(213,152,7)" fg:x="136958095918" fg:w="18818482"/><text x="84.4098%" y="607.50"></text></g><g><title>bytes::offset_from (28,780,915 samples, 0.02%)</title><rect x="84.1714%" y="629" width="0.0177%" height="15" fill="rgb(249,109,34)" fg:x="136976914400" fg:w="28780915"/><text x="84.4214%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align (69,681,192 samples, 0.04%)</title><rect x="84.1890%" y="629" width="0.0428%" height="15" fill="rgb(232,96,21)" fg:x="137005695315" fg:w="69681192"/><text x="84.4390%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::is_size_align_valid (47,189,980 samples, 0.03%)</title><rect x="84.2029%" y="613" width="0.0290%" height="15" fill="rgb(228,27,39)" fg:x="137028186527" fg:w="47189980"/><text x="84.4529%" y="623.50"></text></g><g><title>bytes::bytes::free_boxed_slice (428,909,570 samples, 0.26%)</title><rect x="83.9721%" y="645" width="0.2636%" height="15" fill="rgb(211,182,52)" fg:x="136652643085" fg:w="428909570"/><text x="84.2221%" y="655.50"></text></g><g><title>bytes::bytes::promotable_even_drop::_{{closure}} (533,890,298 samples, 0.33%)</title><rect x="83.9397%" y="661" width="0.3281%" height="15" fill="rgb(234,178,38)" fg:x="136599854912" fg:w="533890298"/><text x="84.1897%" y="671.50"></text></g><g><title>bytes::bytes::ptr_map (52,192,555 samples, 0.03%)</title><rect x="84.2357%" y="645" width="0.0321%" height="15" fill="rgb(221,111,3)" fg:x="137081552655" fg:w="52192555"/><text x="84.4857%" y="655.50"></text></g><g><title>bytes::bytes::promotable_even_drop::_{{closure}}::_{{closure}} (21,264,756 samples, 0.01%)</title><rect x="84.2547%" y="629" width="0.0131%" height="15" fill="rgb(228,175,21)" fg:x="137112480454" fg:w="21264756"/><text x="84.5047%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tungstenite::protocol::frame::frame::Frame&gt; (853,364,171 samples, 0.52%)</title><rect x="83.7553%" y="741" width="0.5244%" height="15" fill="rgb(228,174,43)" fg:x="136299852359" fg:w="853364171"/><text x="84.0053%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (807,240,606 samples, 0.50%)</title><rect x="83.7836%" y="725" width="0.4960%" height="15" fill="rgb(211,191,0)" fg:x="136345975924" fg:w="807240606"/><text x="84.0336%" y="735.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (740,689,961 samples, 0.46%)</title><rect x="83.8245%" y="709" width="0.4551%" height="15" fill="rgb(253,117,3)" fg:x="136412526569" fg:w="740689961"/><text x="84.0745%" y="719.50"></text></g><g><title>bytes::bytes::promotable_even_drop (682,510,503 samples, 0.42%)</title><rect x="83.8603%" y="693" width="0.4194%" height="15" fill="rgb(241,127,19)" fg:x="136470706027" fg:w="682510503"/><text x="84.1103%" y="703.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (654,513,600 samples, 0.40%)</title><rect x="83.8775%" y="677" width="0.4022%" height="15" fill="rgb(218,103,12)" fg:x="136498702930" fg:w="654513600"/><text x="84.1275%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::get_mut (19,471,320 samples, 0.01%)</title><rect x="84.2677%" y="661" width="0.0120%" height="15" fill="rgb(236,214,43)" fg:x="137133745210" fg:w="19471320"/><text x="84.5177%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (135,866,684 samples, 0.08%)</title><rect x="84.3761%" y="725" width="0.0835%" height="15" fill="rgb(244,144,19)" fg:x="137310132740" fg:w="135866684"/><text x="84.6261%" y="735.50"></text></g><g><title>tungstenite::protocol::frame::coding::&lt;impl core::convert::From&lt;tungstenite::protocol::frame::coding::OpCode&gt; for u8&gt;::from (92,215,629 samples, 0.06%)</title><rect x="84.4029%" y="709" width="0.0567%" height="15" fill="rgb(246,188,10)" fg:x="137353783795" fg:w="92215629"/><text x="84.6529%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (30,775,621 samples, 0.02%)</title><rect x="84.4596%" y="725" width="0.0189%" height="15" fill="rgb(212,193,33)" fg:x="137445999424" fg:w="30775621"/><text x="84.7096%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (119,391,933 samples, 0.07%)</title><rect x="84.5651%" y="693" width="0.0734%" height="15" fill="rgb(241,51,29)" fg:x="137617730189" fg:w="119391933"/><text x="84.8151%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (62,957,776 samples, 0.04%)</title><rect x="84.5998%" y="677" width="0.0387%" height="15" fill="rgb(211,58,19)" fg:x="137674164346" fg:w="62957776"/><text x="84.8498%" y="687.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (270,637,792 samples, 0.17%)</title><rect x="84.4848%" y="725" width="0.1663%" height="15" fill="rgb(229,111,26)" fg:x="137487088004" fg:w="270637792"/><text x="84.7348%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (178,495,617 samples, 0.11%)</title><rect x="84.5415%" y="709" width="0.1097%" height="15" fill="rgb(213,115,40)" fg:x="137579230179" fg:w="178495617"/><text x="84.7915%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (20,603,674 samples, 0.01%)</title><rect x="84.6385%" y="693" width="0.0127%" height="15" fill="rgb(209,56,44)" fg:x="137737122122" fg:w="20603674"/><text x="84.8885%" y="703.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (20,603,674 samples, 0.01%)</title><rect x="84.6385%" y="677" width="0.0127%" height="15" fill="rgb(230,108,32)" fg:x="137737122122" fg:w="20603674"/><text x="84.8885%" y="687.50"></text></g><g><title>tungstenite::protocol::frame::frame::Frame::format_into_buf (2,114,272,002 samples, 1.30%)</title><rect x="83.3671%" y="757" width="1.2992%" height="15" fill="rgb(216,165,31)" fg:x="135668164239" fg:w="2114272002"/><text x="83.6171%" y="767.50"></text></g><g><title>tungstenite::protocol::frame::frame::FrameHeader::format (629,219,711 samples, 0.39%)</title><rect x="84.2797%" y="741" width="0.3867%" height="15" fill="rgb(218,122,21)" fg:x="137153216530" fg:w="629219711"/><text x="84.5297%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (84,207,069 samples, 0.05%)</title><rect x="84.7726%" y="725" width="0.0517%" height="15" fill="rgb(223,224,47)" fg:x="137955333794" fg:w="84207069"/><text x="85.0226%" y="735.50"></text></g><g><title>tungstenite::protocol::frame::frame::LengthFormat::extra_bytes (40,404,787 samples, 0.02%)</title><rect x="84.8243%" y="725" width="0.0248%" height="15" fill="rgb(238,102,44)" fg:x="138039540863" fg:w="40404787"/><text x="85.0743%" y="735.50"></text></g><g><title>tungstenite::protocol::WebSocketContext::buffer_frame (3,707,506,881 samples, 2.28%)</title><rect x="82.5954%" y="789" width="2.2782%" height="15" fill="rgb(236,46,40)" fg:x="134412328298" fg:w="3707506881"/><text x="82.8454%" y="799.50">t..</text></g><g><title>tungstenite::protocol::frame::FrameCodec::buffer_frame (3,121,742,350 samples, 1.92%)</title><rect x="82.9554%" y="773" width="1.9183%" height="15" fill="rgb(247,202,50)" fg:x="134998092829" fg:w="3121742350"/><text x="83.2054%" y="783.50">t..</text></g><g><title>tungstenite::protocol::frame::frame::Frame::len (337,398,938 samples, 0.21%)</title><rect x="84.6663%" y="757" width="0.2073%" height="15" fill="rgb(209,99,20)" fg:x="137782436241" fg:w="337398938"/><text x="84.9163%" y="767.50"></text></g><g><title>tungstenite::protocol::frame::frame::FrameHeader::len (244,964,755 samples, 0.15%)</title><rect x="84.7231%" y="741" width="0.1505%" height="15" fill="rgb(252,27,34)" fg:x="137874870424" fg:w="244964755"/><text x="84.9731%" y="751.50"></text></g><g><title>tungstenite::protocol::frame::frame::LengthFormat::for_length (39,889,529 samples, 0.02%)</title><rect x="84.8492%" y="725" width="0.0245%" height="15" fill="rgb(215,206,23)" fg:x="138079945650" fg:w="39889529"/><text x="85.0992%" y="735.50"></text></g><g><title>tungstenite::protocol::WebSocketContext::_write (4,119,647,552 samples, 2.53%)</title><rect x="82.3576%" y="805" width="2.5315%" height="15" fill="rgb(212,135,36)" fg:x="134025315506" fg:w="4119647552"/><text x="82.6076%" y="815.50">tu..</text></g><g><title>tungstenite::protocol::WebSocketState::can_read (25,127,879 samples, 0.02%)</title><rect x="84.8737%" y="789" width="0.0154%" height="15" fill="rgb(240,189,1)" fg:x="138119835179" fg:w="25127879"/><text x="85.1237%" y="799.50"></text></g><g><title>tungstenite::protocol::WebSocketState::check_not_terminated (53,295,994 samples, 0.03%)</title><rect x="84.8891%" y="805" width="0.0328%" height="15" fill="rgb(242,56,20)" fg:x="138144963058" fg:w="53295994"/><text x="85.1391%" y="815.50"></text></g><g><title>tungstenite::protocol::WebSocketState::is_active (18,395,883 samples, 0.01%)</title><rect x="84.9219%" y="805" width="0.0113%" height="15" fill="rgb(247,132,33)" fg:x="138198259052" fg:w="18395883"/><text x="85.1719%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16,507,718 samples, 0.01%)</title><rect x="84.9767%" y="789" width="0.0101%" height="15" fill="rgb(208,149,11)" fg:x="138287573669" fg:w="16507718"/><text x="85.2267%" y="799.50"></text></g><g><title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (16,507,718 samples, 0.01%)</title><rect x="84.9767%" y="773" width="0.0101%" height="15" fill="rgb(211,33,11)" fg:x="138287573669" fg:w="16507718"/><text x="85.2267%" y="783.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::start_send::_{{closure}} (5,146,074,244 samples, 3.16%)</title><rect x="81.8562%" y="853" width="3.1622%" height="15" fill="rgb(221,29,38)" fg:x="133209283836" fg:w="5146074244"/><text x="82.1062%" y="863.50">&lt;to..</text></g><g><title>tungstenite::protocol::WebSocket&lt;Stream&gt;::write (5,069,779,884 samples, 3.12%)</title><rect x="81.9031%" y="837" width="3.1153%" height="15" fill="rgb(206,182,49)" fg:x="133285578196" fg:w="5069779884"/><text x="82.1531%" y="847.50">tun..</text></g><g><title>tungstenite::protocol::WebSocketContext::write (5,007,697,246 samples, 3.08%)</title><rect x="81.9412%" y="821" width="3.0772%" height="15" fill="rgb(216,140,1)" fg:x="133347660834" fg:w="5007697246"/><text x="82.1912%" y="831.50">tun..</text></g><g><title>tungstenite::protocol::frame::frame::Frame::message (138,703,145 samples, 0.09%)</title><rect x="84.9332%" y="805" width="0.0852%" height="15" fill="rgb(232,57,40)" fg:x="138216654935" fg:w="138703145"/><text x="85.1832%" y="815.50"></text></g><g><title>&lt;tungstenite::protocol::frame::frame::FrameHeader as core::default::Default&gt;::default (51,276,693 samples, 0.03%)</title><rect x="84.9869%" y="789" width="0.0315%" height="15" fill="rgb(224,186,18)" fg:x="138304081387" fg:w="51276693"/><text x="85.2369%" y="799.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (69,511,236 samples, 0.04%)</title><rect x="85.0403%" y="837" width="0.0427%" height="15" fill="rgb(215,121,11)" fg:x="138390964847" fg:w="69511236"/><text x="85.2903%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (25,782,822 samples, 0.02%)</title><rect x="85.0671%" y="821" width="0.0158%" height="15" fill="rgb(245,147,10)" fg:x="138434693261" fg:w="25782822"/><text x="85.3171%" y="831.50"></text></g><g><title>core::cmp::PartialOrd::le (126,403,748 samples, 0.08%)</title><rect x="85.0184%" y="853" width="0.0777%" height="15" fill="rgb(238,153,13)" fg:x="138355358080" fg:w="126403748"/><text x="85.2684%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (21,285,745 samples, 0.01%)</title><rect x="85.0830%" y="837" width="0.0131%" height="15" fill="rgb(233,108,0)" fg:x="138460476083" fg:w="21285745"/><text x="85.3330%" y="847.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::start_send (5,690,326,285 samples, 3.50%)</title><rect x="81.6460%" y="885" width="3.4967%" height="15" fill="rgb(212,157,17)" fg:x="132867313088" fg:w="5690326285"/><text x="81.8960%" y="895.50">&lt;to..</text></g><g><title>tokio_tungstenite::WebSocketStream&lt;S&gt;::with_context (5,486,542,885 samples, 3.37%)</title><rect x="81.7713%" y="869" width="3.3714%" height="15" fill="rgb(225,213,38)" fg:x="133071096488" fg:w="5486542885"/><text x="82.0213%" y="879.50">tok..</text></g><g><title>log::max_level (75,877,545 samples, 0.05%)</title><rect x="85.0961%" y="853" width="0.0466%" height="15" fill="rgb(248,16,11)" fg:x="138481761828" fg:w="75877545"/><text x="85.3461%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (56,670,755 samples, 0.03%)</title><rect x="85.1079%" y="837" width="0.0348%" height="15" fill="rgb(241,33,4)" fg:x="138500968618" fg:w="56670755"/><text x="85.3579%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (45,442,060 samples, 0.03%)</title><rect x="85.1148%" y="821" width="0.0279%" height="15" fill="rgb(222,26,43)" fg:x="138512197313" fg:w="45442060"/><text x="85.3648%" y="831.50"></text></g><g><title>axum::extract::ws::Message::into_tungstenite (66,687,084 samples, 0.04%)</title><rect x="85.1427%" y="885" width="0.0410%" height="15" fill="rgb(243,29,36)" fg:x="138557639373" fg:w="66687084"/><text x="85.3927%" y="895.50"></text></g><g><title>&lt;axum::extract::ws::WebSocket as futures_sink::Sink&lt;axum::extract::ws::Message&gt;&gt;::start_send (5,921,763,196 samples, 3.64%)</title><rect x="81.5782%" y="901" width="3.6389%" height="15" fill="rgb(241,9,27)" fg:x="132756933594" fg:w="5921763196"/><text x="81.8282%" y="911.50">&lt;axu..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (54,370,333 samples, 0.03%)</title><rect x="85.1837%" y="885" width="0.0334%" height="15" fill="rgb(205,117,26)" fg:x="138624326457" fg:w="54370333"/><text x="85.4337%" y="895.50"></text></g><g><title>__memmove_avx_unaligned (40,663,923 samples, 0.02%)</title><rect x="85.2306%" y="869" width="0.0250%" height="15" fill="rgb(209,80,39)" fg:x="138700727834" fg:w="40663923"/><text x="85.4806%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (51,146,813 samples, 0.03%)</title><rect x="85.2252%" y="901" width="0.0314%" height="15" fill="rgb(239,155,6)" fg:x="138691898623" fg:w="51146813"/><text x="85.4752%" y="911.50"></text></g><g><title>core::mem::replace (42,317,602 samples, 0.03%)</title><rect x="85.2306%" y="885" width="0.0260%" height="15" fill="rgb(212,104,12)" fg:x="138700727834" fg:w="42317602"/><text x="85.4806%" y="895.50"></text></g><g><title>__memmove_avx_unaligned (25,637,774 samples, 0.02%)</title><rect x="85.2608%" y="885" width="0.0158%" height="15" fill="rgb(234,204,3)" fg:x="138749803037" fg:w="25637774"/><text x="85.5108%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (34,176,382 samples, 0.02%)</title><rect x="85.2566%" y="901" width="0.0210%" height="15" fill="rgb(251,218,7)" fg:x="138743045436" fg:w="34176382"/><text x="85.5066%" y="911.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (17,833,007,448 samples, 10.96%)</title><rect x="74.3516%" y="933" width="10.9583%" height="15" fill="rgb(221,81,32)" fg:x="120996686869" fg:w="17833007448"/><text x="74.6016%" y="943.50">&lt;futures_util::s..</text></g><g><title>futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (6,680,205,213 samples, 4.10%)</title><rect x="81.2049%" y="917" width="4.1049%" height="15" fill="rgb(214,152,26)" fg:x="132149489104" fg:w="6680205213"/><text x="81.4549%" y="927.50">futu..</text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (52,472,499 samples, 0.03%)</title><rect x="85.2776%" y="901" width="0.0322%" height="15" fill="rgb(223,22,3)" fg:x="138777221818" fg:w="52472499"/><text x="85.5276%" y="911.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (43,292,091 samples, 0.03%)</title><rect x="85.2833%" y="885" width="0.0266%" height="15" fill="rgb(207,174,7)" fg:x="138786402226" fg:w="43292091"/><text x="85.5333%" y="895.50"></text></g><g><title>futures_util::sink::feed::Feed&lt;Si,Item&gt;::is_item_pending (52,164,049 samples, 0.03%)</title><rect x="85.3099%" y="933" width="0.0321%" height="15" fill="rgb(224,19,52)" fg:x="138829694317" fg:w="52164049"/><text x="85.5599%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (27,419,819 samples, 0.02%)</title><rect x="85.3251%" y="917" width="0.0168%" height="15" fill="rgb(228,24,14)" fg:x="138854438547" fg:w="27419819"/><text x="85.5751%" y="927.50"></text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (18,952,780,858 samples, 11.65%)</title><rect x="73.7013%" y="949" width="11.6464%" height="15" fill="rgb(230,153,43)" fg:x="119938379380" fg:w="18952780858"/><text x="73.9513%" y="959.50">&lt;futures_util::si..</text></g><g><title>core::ptr::drop_in_place&lt;tungstenite::error::Error&gt; (23,169,783 samples, 0.01%)</title><rect x="85.3671%" y="805" width="0.0142%" height="15" fill="rgb(231,106,12)" fg:x="138922799532" fg:w="23169783"/><text x="85.6171%" y="815.50"></text></g><g><title>tokio_tungstenite::compat::cvt (33,874,040 samples, 0.02%)</title><rect x="85.3645%" y="821" width="0.0208%" height="15" fill="rgb(215,92,2)" fg:x="138918632567" fg:w="33874040"/><text x="85.6145%" y="831.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (22,505,240 samples, 0.01%)</title><rect x="85.4213%" y="757" width="0.0138%" height="15" fill="rgb(249,143,25)" fg:x="139011064612" fg:w="22505240"/><text x="85.6713%" y="767.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (17,726,361 samples, 0.01%)</title><rect x="85.4969%" y="485" width="0.0109%" height="15" fill="rgb(252,7,35)" fg:x="139134046254" fg:w="17726361"/><text x="85.7469%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39,092,497 samples, 0.02%)</title><rect x="85.5254%" y="341" width="0.0240%" height="15" fill="rgb(216,69,40)" fg:x="139180374824" fg:w="39092497"/><text x="85.7754%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20,842,520 samples, 0.01%)</title><rect x="85.5366%" y="325" width="0.0128%" height="15" fill="rgb(240,36,33)" fg:x="139198624801" fg:w="20842520"/><text x="85.7866%" y="335.50"></text></g><g><title>core::mem::drop (67,145,938 samples, 0.04%)</title><rect x="85.5254%" y="373" width="0.0413%" height="15" fill="rgb(231,128,14)" fg:x="139180374824" fg:w="67145938"/><text x="85.7754%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;axum::serve::handle_connection&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router&gt;::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (67,145,938 samples, 0.04%)</title><rect x="85.5254%" y="357" width="0.0413%" height="15" fill="rgb(245,143,14)" fg:x="139180374824" fg:w="67145938"/><text x="85.7754%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;axum::serve::handle_connection&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router&gt;::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (28,053,441 samples, 0.02%)</title><rect x="85.5494%" y="341" width="0.0172%" height="15" fill="rgb(222,130,28)" fg:x="139219467321" fg:w="28053441"/><text x="85.7994%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Trailer&gt; (16,577,438 samples, 0.01%)</title><rect x="85.5564%" y="325" width="0.0102%" height="15" fill="rgb(212,10,48)" fg:x="139230943324" fg:w="16577438"/><text x="85.8064%" y="335.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (94,445,915 samples, 0.06%)</title><rect x="85.5156%" y="389" width="0.0580%" height="15" fill="rgb(254,118,45)" fg:x="139164569868" fg:w="94445915"/><text x="85.7656%" y="399.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::dealloc (107,326,617 samples, 0.07%)</title><rect x="85.5087%" y="421" width="0.0660%" height="15" fill="rgb(228,6,45)" fg:x="139153278814" fg:w="107326617"/><text x="85.7587%" y="431.50"></text></g><g><title>tokio::runtime::task::raw::dealloc (104,297,543 samples, 0.06%)</title><rect x="85.5106%" y="405" width="0.0641%" height="15" fill="rgb(241,18,35)" fg:x="139156307888" fg:w="104297543"/><text x="85.7606%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (114,882,968 samples, 0.07%)</title><rect x="85.5078%" y="437" width="0.0706%" height="15" fill="rgb(227,214,53)" fg:x="139151772615" fg:w="114882968"/><text x="85.7578%" y="447.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone_from (143,641,793 samples, 0.09%)</title><rect x="85.4912%" y="501" width="0.0883%" height="15" fill="rgb(224,107,51)" fg:x="139124783899" fg:w="143641793"/><text x="85.7412%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (116,653,077 samples, 0.07%)</title><rect x="85.5078%" y="485" width="0.0717%" height="15" fill="rgb(248,60,28)" fg:x="139151772615" fg:w="116653077"/><text x="85.7578%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (116,653,077 samples, 0.07%)</title><rect x="85.5078%" y="469" width="0.0717%" height="15" fill="rgb(249,101,23)" fg:x="139151772615" fg:w="116653077"/><text x="85.7578%" y="479.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (116,653,077 samples, 0.07%)</title><rect x="85.5078%" y="453" width="0.0717%" height="15" fill="rgb(228,51,19)" fg:x="139151772615" fg:w="116653077"/><text x="85.7578%" y="463.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (173,585,874 samples, 0.11%)</title><rect x="85.4879%" y="517" width="0.1067%" height="15" fill="rgb(213,20,6)" fg:x="139119490230" fg:w="173585874"/><text x="85.7379%" y="527.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (192,304,821 samples, 0.12%)</title><rect x="85.4785%" y="597" width="0.1182%" height="15" fill="rgb(212,124,10)" fg:x="139104192053" fg:w="192304821"/><text x="85.7285%" y="607.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (190,267,292 samples, 0.12%)</title><rect x="85.4798%" y="581" width="0.1169%" height="15" fill="rgb(248,3,40)" fg:x="139106229582" fg:w="190267292"/><text x="85.7298%" y="591.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (187,194,091 samples, 0.12%)</title><rect x="85.4817%" y="565" width="0.1150%" height="15" fill="rgb(223,178,23)" fg:x="139109302783" fg:w="187194091"/><text x="85.7317%" y="575.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (182,583,039 samples, 0.11%)</title><rect x="85.4845%" y="549" width="0.1122%" height="15" fill="rgb(240,132,45)" fg:x="139113913835" fg:w="182583039"/><text x="85.7345%" y="559.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (182,583,039 samples, 0.11%)</title><rect x="85.4845%" y="533" width="0.1122%" height="15" fill="rgb(245,164,36)" fg:x="139113913835" fg:w="182583039"/><text x="85.7345%" y="543.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (199,264,370 samples, 0.12%)</title><rect x="85.4785%" y="613" width="0.1224%" height="15" fill="rgb(231,188,53)" fg:x="139104192053" fg:w="199264370"/><text x="85.7285%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (220,155,486 samples, 0.14%)</title><rect x="85.4695%" y="645" width="0.1353%" height="15" fill="rgb(237,198,39)" fg:x="139089502374" fg:w="220155486"/><text x="85.7195%" y="655.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (217,854,839 samples, 0.13%)</title><rect x="85.4709%" y="629" width="0.1339%" height="15" fill="rgb(223,120,35)" fg:x="139091803021" fg:w="217854839"/><text x="85.7209%" y="639.50"></text></g><g><title>core::mem::drop (35,955,267 samples, 0.02%)</title><rect x="85.6095%" y="549" width="0.0221%" height="15" fill="rgb(253,107,49)" fg:x="139317375570" fg:w="35955267"/><text x="85.8595%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (35,955,267 samples, 0.02%)</title><rect x="85.6095%" y="533" width="0.0221%" height="15" fill="rgb(216,44,31)" fg:x="139317375570" fg:w="35955267"/><text x="85.8595%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (20,531,372 samples, 0.01%)</title><rect x="85.6190%" y="517" width="0.0126%" height="15" fill="rgb(253,87,21)" fg:x="139332799465" fg:w="20531372"/><text x="85.8690%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20,531,372 samples, 0.01%)</title><rect x="85.6190%" y="501" width="0.0126%" height="15" fill="rgb(226,18,2)" fg:x="139332799465" fg:w="20531372"/><text x="85.8690%" y="511.50"></text></g><g><title>&lt;hyper::upgrade::Upgraded as hyper::rt::io::Read&gt;::poll_read (272,178,131 samples, 0.17%)</title><rect x="85.4670%" y="677" width="0.1673%" height="15" fill="rgb(216,8,46)" fg:x="139085430972" fg:w="272178131"/><text x="85.7170%" y="687.50"></text></g><g><title>&lt;hyper::common::io::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (272,172,735 samples, 0.17%)</title><rect x="85.4670%" y="661" width="0.1672%" height="15" fill="rgb(226,140,39)" fg:x="139085436368" fg:w="272172735"/><text x="85.7170%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (46,218,413 samples, 0.03%)</title><rect x="85.6059%" y="645" width="0.0284%" height="15" fill="rgb(221,194,54)" fg:x="139311390690" fg:w="46218413"/><text x="85.8559%" y="655.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (44,006,893 samples, 0.03%)</title><rect x="85.6072%" y="629" width="0.0270%" height="15" fill="rgb(213,92,11)" fg:x="139313602210" fg:w="44006893"/><text x="85.8572%" y="639.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (42,562,046 samples, 0.03%)</title><rect x="85.6081%" y="613" width="0.0262%" height="15" fill="rgb(229,162,46)" fg:x="139315047057" fg:w="42562046"/><text x="85.8581%" y="623.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (40,233,533 samples, 0.02%)</title><rect x="85.6095%" y="597" width="0.0247%" height="15" fill="rgb(214,111,36)" fg:x="139317375570" fg:w="40233533"/><text x="85.8595%" y="607.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (40,233,533 samples, 0.02%)</title><rect x="85.6095%" y="581" width="0.0247%" height="15" fill="rgb(207,6,21)" fg:x="139317375570" fg:w="40233533"/><text x="85.8595%" y="591.50"></text></g><g><title>bytes::bytes_mut::release_shared (40,233,533 samples, 0.02%)</title><rect x="85.6095%" y="565" width="0.0247%" height="15" fill="rgb(213,127,38)" fg:x="139317375570" fg:w="40233533"/><text x="85.8595%" y="575.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (285,614,461 samples, 0.18%)</title><rect x="85.4670%" y="693" width="0.1755%" height="15" fill="rgb(238,118,32)" fg:x="139085430972" fg:w="285614461"/><text x="85.7170%" y="703.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Read&gt;::read::_{{closure}} (289,655,604 samples, 0.18%)</title><rect x="85.4670%" y="709" width="0.1780%" height="15" fill="rgb(240,139,39)" fg:x="139085430972" fg:w="289655604"/><text x="85.7170%" y="719.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Read&gt;::read (305,658,142 samples, 0.19%)</title><rect x="85.4613%" y="741" width="0.1878%" height="15" fill="rgb(235,10,37)" fg:x="139076061120" fg:w="305658142"/><text x="85.7113%" y="751.50"></text></g><g><title>tokio_tungstenite::compat::AllowStd&lt;S&gt;::with_context (300,305,241 samples, 0.18%)</title><rect x="85.4646%" y="725" width="0.1845%" height="15" fill="rgb(249,171,38)" fg:x="139081414021" fg:w="300305241"/><text x="85.7146%" y="735.50"></text></g><g><title>core::intrinsics::write_bytes (118,587,559 samples, 0.07%)</title><rect x="85.6558%" y="725" width="0.0729%" height="15" fill="rgb(242,144,32)" fg:x="139392648558" fg:w="118587559"/><text x="85.9058%" y="735.50"></text></g><g><title>__memset_avx2_unaligned_erms (116,128,795 samples, 0.07%)</title><rect x="85.6573%" y="709" width="0.0714%" height="15" fill="rgb(217,117,21)" fg:x="139395107322" fg:w="116128795"/><text x="85.9073%" y="719.50"></text></g><g><title>[unknown] (95,021,534 samples, 0.06%)</title><rect x="85.6703%" y="693" width="0.0584%" height="15" fill="rgb(249,87,1)" fg:x="139416214583" fg:w="95021534"/><text x="85.9203%" y="703.50"></text></g><g><title>[unknown] (91,176,475 samples, 0.06%)</title><rect x="85.6726%" y="677" width="0.0560%" height="15" fill="rgb(248,196,48)" fg:x="139420059642" fg:w="91176475"/><text x="85.9226%" y="687.50"></text></g><g><title>[unknown] (81,164,474 samples, 0.05%)</title><rect x="85.6788%" y="661" width="0.0499%" height="15" fill="rgb(251,206,33)" fg:x="139430071643" fg:w="81164474"/><text x="85.9288%" y="671.50"></text></g><g><title>[unknown] (63,962,423 samples, 0.04%)</title><rect x="85.6894%" y="645" width="0.0393%" height="15" fill="rgb(232,141,28)" fg:x="139447273694" fg:w="63962423"/><text x="85.9394%" y="655.50"></text></g><g><title>[unknown] (34,319,744 samples, 0.02%)</title><rect x="85.7076%" y="629" width="0.0211%" height="15" fill="rgb(209,167,14)" fg:x="139476916373" fg:w="34319744"/><text x="85.9576%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::resize (135,176,956 samples, 0.08%)</title><rect x="85.6491%" y="741" width="0.0831%" height="15" fill="rgb(225,11,50)" fg:x="139381719262" fg:w="135176956"/><text x="85.8991%" y="751.50"></text></g><g><title>tungstenite::protocol::frame::FrameCodec::read_in (459,217,060 samples, 0.28%)</title><rect x="85.4551%" y="757" width="0.2822%" height="15" fill="rgb(209,50,20)" fg:x="139066110300" fg:w="459217060"/><text x="85.7051%" y="767.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::split (17,988,316 samples, 0.01%)</title><rect x="85.7491%" y="709" width="0.0111%" height="15" fill="rgb(212,17,46)" fg:x="139544510241" fg:w="17988316"/><text x="85.9991%" y="719.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (675,698,707 samples, 0.42%)</title><rect x="85.3645%" y="837" width="0.4152%" height="15" fill="rgb(216,101,39)" fg:x="138918632567" fg:w="675698707"/><text x="85.6145%" y="847.50"></text></g><g><title>tungstenite::protocol::WebSocket&lt;Stream&gt;::read (641,824,667 samples, 0.39%)</title><rect x="85.3853%" y="821" width="0.3944%" height="15" fill="rgb(212,228,48)" fg:x="138952506607" fg:w="641824667"/><text x="85.6353%" y="831.50"></text></g><g><title>tungstenite::protocol::WebSocketContext::read (641,824,667 samples, 0.39%)</title><rect x="85.3853%" y="805" width="0.3944%" height="15" fill="rgb(250,6,50)" fg:x="138952506607" fg:w="641824667"/><text x="85.6353%" y="815.50"></text></g><g><title>tungstenite::protocol::WebSocketContext::read_message_frame (614,688,245 samples, 0.38%)</title><rect x="85.4020%" y="789" width="0.3777%" height="15" fill="rgb(250,160,48)" fg:x="138979643029" fg:w="614688245"/><text x="85.6520%" y="799.50"></text></g><g><title>tungstenite::protocol::frame::FrameCodec::read_frame (591,624,076 samples, 0.36%)</title><rect x="85.4162%" y="773" width="0.3635%" height="15" fill="rgb(244,216,33)" fg:x="139002707198" fg:w="591624076"/><text x="85.6662%" y="783.50"></text></g><g><title>tungstenite::protocol::frame::frame::FrameHeader::parse (69,003,914 samples, 0.04%)</title><rect x="85.7373%" y="757" width="0.0424%" height="15" fill="rgb(207,157,5)" fg:x="139525327360" fg:w="69003914"/><text x="85.9873%" y="767.50"></text></g><g><title>tungstenite::protocol::frame::frame::FrameHeader::parse_internal (60,862,060 samples, 0.04%)</title><rect x="85.7423%" y="741" width="0.0374%" height="15" fill="rgb(228,199,8)" fg:x="139533469214" fg:w="60862060"/><text x="85.9923%" y="751.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (52,143,851 samples, 0.03%)</title><rect x="85.7477%" y="725" width="0.0320%" height="15" fill="rgb(227,80,20)" fg:x="139542187423" fg:w="52143851"/><text x="85.9977%" y="735.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (31,832,717 samples, 0.02%)</title><rect x="85.7602%" y="709" width="0.0196%" height="15" fill="rgb(222,9,33)" fg:x="139562498557" fg:w="31832717"/><text x="86.0102%" y="719.50"></text></g><g><title>&lt;axum::extract::ws::WebSocket as futures_core::stream::Stream&gt;::poll_next (715,778,862 samples, 0.44%)</title><rect x="85.3527%" y="901" width="0.4398%" height="15" fill="rgb(239,44,28)" fg:x="138899358365" fg:w="715778862"/><text x="85.6027%" y="911.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (715,778,862 samples, 0.44%)</title><rect x="85.3527%" y="885" width="0.4398%" height="15" fill="rgb(249,187,43)" fg:x="138899358365" fg:w="715778862"/><text x="85.6027%" y="895.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (712,753,937 samples, 0.44%)</title><rect x="85.3545%" y="869" width="0.4380%" height="15" fill="rgb(216,141,28)" fg:x="138902383290" fg:w="712753937"/><text x="85.6045%" y="879.50"></text></g><g><title>tokio_tungstenite::WebSocketStream&lt;S&gt;::with_context (701,015,324 samples, 0.43%)</title><rect x="85.3618%" y="853" width="0.4308%" height="15" fill="rgb(230,154,53)" fg:x="138914121903" fg:w="701015324"/><text x="85.6118%" y="863.50"></text></g><g><title>tokio_tungstenite::compat::AllowStd&lt;S&gt;::set_waker (18,515,591 samples, 0.01%)</title><rect x="85.7811%" y="837" width="0.0114%" height="15" fill="rgb(227,82,4)" fg:x="139596621636" fg:w="18515591"/><text x="86.0311%" y="847.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (741,694,699 samples, 0.46%)</title><rect x="85.3476%" y="949" width="0.4558%" height="15" fill="rgb(220,107,16)" fg:x="138891160238" fg:w="741694699"/><text x="85.5976%" y="959.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (739,822,874 samples, 0.45%)</title><rect x="85.3488%" y="933" width="0.4546%" height="15" fill="rgb(207,187,2)" fg:x="138893032063" fg:w="739822874"/><text x="85.5988%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitStream&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (737,911,733 samples, 0.45%)</title><rect x="85.3500%" y="917" width="0.4534%" height="15" fill="rgb(210,162,52)" fg:x="138894943204" fg:w="737911733"/><text x="85.6000%" y="927.50"></text></g><g><title>__memmove_avx_unaligned (31,306,819 samples, 0.02%)</title><rect x="85.8159%" y="949" width="0.0192%" height="15" fill="rgb(217,216,49)" fg:x="139653168605" fg:w="31306819"/><text x="86.0659%" y="959.50"></text></g><g><title>core::num::&lt;impl i64&gt;::to_be_bytes (37,517,032 samples, 0.02%)</title><rect x="85.8400%" y="949" width="0.0231%" height="15" fill="rgb(218,146,49)" fg:x="139692406487" fg:w="37517032"/><text x="86.0900%" y="959.50"></text></g><g><title>core::num::&lt;impl i64&gt;::to_be (35,878,413 samples, 0.02%)</title><rect x="85.8410%" y="933" width="0.0220%" height="15" fill="rgb(216,55,40)" fg:x="139694045106" fg:w="35878413"/><text x="86.0910%" y="943.50"></text></g><g><title>core::num::&lt;impl i64&gt;::swap_bytes (35,878,413 samples, 0.02%)</title><rect x="85.8410%" y="917" width="0.0220%" height="15" fill="rgb(208,196,21)" fg:x="139694045106" fg:w="35878413"/><text x="86.0910%" y="927.50"></text></g><g><title>core::num::&lt;impl u8&gt;::saturating_add (111,107,369 samples, 0.07%)</title><rect x="85.8631%" y="949" width="0.0683%" height="15" fill="rgb(242,117,42)" fg:x="139729923519" fg:w="111107369"/><text x="86.1131%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::sync::broadcast::Tail&gt;&gt; (24,976,018 samples, 0.02%)</title><rect x="86.3636%" y="869" width="0.0153%" height="15" fill="rgb(210,11,23)" fg:x="140544421772" fg:w="24976018"/><text x="86.6136%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::broadcast::Tail&gt;&gt; (23,642,571 samples, 0.01%)</title><rect x="86.3644%" y="853" width="0.0145%" height="15" fill="rgb(217,110,2)" fg:x="140545755219" fg:w="23642571"/><text x="86.6144%" y="863.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (21,696,305 samples, 0.01%)</title><rect x="86.3656%" y="837" width="0.0133%" height="15" fill="rgb(229,77,54)" fg:x="140547701485" fg:w="21696305"/><text x="86.6156%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (21,696,305 samples, 0.01%)</title><rect x="86.3656%" y="821" width="0.0133%" height="15" fill="rgb(218,53,16)" fg:x="140547701485" fg:w="21696305"/><text x="86.6156%" y="831.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (32,730,989 samples, 0.02%)</title><rect x="86.3871%" y="821" width="0.0201%" height="15" fill="rgb(215,38,13)" fg:x="140582733446" fg:w="32730989"/><text x="86.6371%" y="831.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (47,737,295 samples, 0.03%)</title><rect x="86.3789%" y="869" width="0.0293%" height="15" fill="rgb(235,42,18)" fg:x="140569397790" fg:w="47737295"/><text x="86.6289%" y="879.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (47,737,295 samples, 0.03%)</title><rect x="86.3789%" y="853" width="0.0293%" height="15" fill="rgb(219,66,54)" fg:x="140569397790" fg:w="47737295"/><text x="86.6289%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (46,419,790 samples, 0.03%)</title><rect x="86.3797%" y="837" width="0.0285%" height="15" fill="rgb(222,205,4)" fg:x="140570715295" fg:w="46419790"/><text x="86.6297%" y="847.50"></text></g><g><title>&lt;tokio::sync::broadcast::Waiter as tokio::util::linked_list::Link&gt;::pointers (30,377,523 samples, 0.02%)</title><rect x="86.4404%" y="821" width="0.0187%" height="15" fill="rgb(227,213,46)" fg:x="140669413584" fg:w="30377523"/><text x="86.6904%" y="831.50"></text></g><g><title>tokio::sync::broadcast::Waiter::addr_of_pointers (16,563,849 samples, 0.01%)</title><rect x="86.4489%" y="805" width="0.0102%" height="15" fill="rgb(250,145,42)" fg:x="140683227258" fg:w="16563849"/><text x="86.6989%" y="815.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::get_next (24,811,515 samples, 0.02%)</title><rect x="86.4590%" y="821" width="0.0152%" height="15" fill="rgb(219,15,2)" fg:x="140699791107" fg:w="24811515"/><text x="86.7090%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (22,916,566 samples, 0.01%)</title><rect x="86.4602%" y="805" width="0.0141%" height="15" fill="rgb(231,181,52)" fg:x="140701686056" fg:w="22916566"/><text x="86.7102%" y="815.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::get_prev (36,591,640 samples, 0.02%)</title><rect x="86.4743%" y="821" width="0.0225%" height="15" fill="rgb(235,1,42)" fg:x="140724602622" fg:w="36591640"/><text x="86.7243%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (30,767,292 samples, 0.02%)</title><rect x="86.4779%" y="805" width="0.0189%" height="15" fill="rgb(249,88,27)" fg:x="140730426970" fg:w="30767292"/><text x="86.7279%" y="815.50"></text></g><g><title>&lt;tokio::sync::broadcast::Recv&lt;T&gt; as core::ops::drop::Drop&gt;::drop (226,149,128 samples, 0.14%)</title><rect x="86.3587%" y="885" width="0.1390%" height="15" fill="rgb(235,145,16)" fg:x="140536583535" fg:w="226149128"/><text x="86.6087%" y="895.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (136,394,352 samples, 0.08%)</title><rect x="86.4139%" y="869" width="0.0838%" height="15" fill="rgb(237,114,19)" fg:x="140626338311" fg:w="136394352"/><text x="86.6639%" y="879.50"></text></g><g><title>&lt;tokio::sync::broadcast::Recv&lt;T&gt; as core::ops::drop::Drop&gt;::drop::_{{closure}} (136,394,352 samples, 0.08%)</title><rect x="86.4139%" y="853" width="0.0838%" height="15" fill="rgb(238,51,50)" fg:x="140626338311" fg:w="136394352"/><text x="86.6639%" y="863.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (113,848,494 samples, 0.07%)</title><rect x="86.4278%" y="837" width="0.0700%" height="15" fill="rgb(205,194,25)" fg:x="140648884169" fg:w="113848494"/><text x="86.6778%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::broadcast::Receiver&lt;i64&gt;::recv::{{closure}}&gt; (587,644,836 samples, 0.36%)</title><rect x="86.1555%" y="933" width="0.3611%" height="15" fill="rgb(215,203,17)" fg:x="140205787434" fg:w="587644836"/><text x="86.4055%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::Coop&lt;tokio::sync::broadcast::Recv&lt;i64&gt;&gt;&gt; (269,631,262 samples, 0.17%)</title><rect x="86.3509%" y="917" width="0.1657%" height="15" fill="rgb(233,112,49)" fg:x="140523801008" fg:w="269631262"/><text x="86.6009%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::broadcast::Recv&lt;i64&gt;&gt; (263,705,745 samples, 0.16%)</title><rect x="86.3545%" y="901" width="0.1620%" height="15" fill="rgb(241,130,26)" fg:x="140529726525" fg:w="263705745"/><text x="86.6045%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::broadcast::WaiterCell&gt; (30,699,607 samples, 0.02%)</title><rect x="86.4977%" y="885" width="0.0189%" height="15" fill="rgb(252,223,19)" fg:x="140762732663" fg:w="30699607"/><text x="86.7477%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;tokio::sync::broadcast::Waiter&gt;&gt; (28,847,385 samples, 0.02%)</title><rect x="86.4988%" y="869" width="0.0177%" height="15" fill="rgb(211,95,25)" fg:x="140764584885" fg:w="28847385"/><text x="86.7488%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;tokio::sync::broadcast::Waiter&gt;&gt; (28,847,385 samples, 0.02%)</title><rect x="86.4988%" y="853" width="0.0177%" height="15" fill="rgb(251,182,27)" fg:x="140764584885" fg:w="28847385"/><text x="86.7488%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::broadcast::Waiter&gt; (27,942,024 samples, 0.02%)</title><rect x="86.4994%" y="837" width="0.0172%" height="15" fill="rgb(238,24,4)" fg:x="140765490246" fg:w="27942024"/><text x="86.7494%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (27,942,024 samples, 0.02%)</title><rect x="86.4994%" y="821" width="0.0172%" height="15" fill="rgb(224,220,25)" fg:x="140765490246" fg:w="27942024"/><text x="86.7494%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (21,340,580 samples, 0.01%)</title><rect x="86.5035%" y="805" width="0.0131%" height="15" fill="rgb(239,133,26)" fg:x="140772091690" fg:w="21340580"/><text x="86.7535%" y="815.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (17,344,894 samples, 0.01%)</title><rect x="86.5059%" y="789" width="0.0107%" height="15" fill="rgb(211,94,48)" fg:x="140776087376" fg:w="17344894"/><text x="86.7559%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;(tokio::sync::broadcast::Receiver&lt;i64&gt;::recv::{{closure}},tokio::time::interval::Interval::tick::{{closure}})&gt; (1,340,985,494 samples, 0.82%)</title><rect x="85.9377%" y="949" width="0.8240%" height="15" fill="rgb(239,87,6)" fg:x="139851356915" fg:w="1340985494"/><text x="86.1877%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::interval::Interval::tick::{{closure}}&gt; (398,910,139 samples, 0.25%)</title><rect x="86.5166%" y="933" width="0.2451%" height="15" fill="rgb(227,62,0)" fg:x="140793432270" fg:w="398910139"/><text x="86.7666%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),axum_core::error::Error&gt;&gt; (30,084,248 samples, 0.02%)</title><rect x="86.7617%" y="949" width="0.0185%" height="15" fill="rgb(211,226,4)" fg:x="141192342409" fg:w="30084248"/><text x="87.0117%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::sink::send::Send&lt;futures_util::stream::stream::split::SplitSink&lt;axum::extract::ws::WebSocket,axum::extract::ws::Message&gt;,axum::extract::ws::Message&gt;&gt; (97,596,878 samples, 0.06%)</title><rect x="86.7802%" y="949" width="0.0600%" height="15" fill="rgb(253,38,52)" fg:x="141222426657" fg:w="97596878"/><text x="87.0302%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::sink::feed::Feed&lt;futures_util::stream::stream::split::SplitSink&lt;axum::extract::ws::WebSocket,axum::extract::ws::Message&gt;,axum::extract::ws::Message&gt;&gt; (65,559,036 samples, 0.04%)</title><rect x="86.7999%" y="933" width="0.0403%" height="15" fill="rgb(229,126,40)" fg:x="141254464499" fg:w="65559036"/><text x="87.0499%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;axum::extract::ws::Message&gt;&gt; (57,019,398 samples, 0.04%)</title><rect x="86.8051%" y="917" width="0.0350%" height="15" fill="rgb(229,165,44)" fg:x="141263004137" fg:w="57019398"/><text x="87.0551%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (34,057,110 samples, 0.02%)</title><rect x="86.8402%" y="949" width="0.0209%" height="15" fill="rgb(247,95,47)" fg:x="141320023535" fg:w="34057110"/><text x="87.0902%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (28,127,807 samples, 0.02%)</title><rect x="86.8438%" y="933" width="0.0173%" height="15" fill="rgb(216,140,30)" fg:x="141325952838" fg:w="28127807"/><text x="87.0938%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicI64::load (30,645,973 samples, 0.02%)</title><rect x="86.8632%" y="949" width="0.0188%" height="15" fill="rgb(246,214,8)" fg:x="141357597904" fg:w="30645973"/><text x="87.1132%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (30,645,973 samples, 0.02%)</title><rect x="86.8632%" y="933" width="0.0188%" height="15" fill="rgb(227,224,15)" fg:x="141357597904" fg:w="30645973"/><text x="87.1132%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicI64::store (304,884,775 samples, 0.19%)</title><rect x="86.8821%" y="949" width="0.1873%" height="15" fill="rgb(233,175,4)" fg:x="141388243877" fg:w="304884775"/><text x="87.1321%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_store (253,560,946 samples, 0.16%)</title><rect x="86.9136%" y="933" width="0.1558%" height="15" fill="rgb(221,66,45)" fg:x="141439567706" fg:w="253560946"/><text x="87.1636%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::fetch_add (1,681,146,686 samples, 1.03%)</title><rect x="87.0694%" y="949" width="1.0331%" height="15" fill="rgb(221,178,18)" fg:x="141693128652" fg:w="1681146686"/><text x="87.3194%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (1,524,588,356 samples, 0.94%)</title><rect x="87.1656%" y="933" width="0.9368%" height="15" fill="rgb(213,81,29)" fg:x="141849686982" fg:w="1524588356"/><text x="87.4156%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::fetch_and (59,066,232 samples, 0.04%)</title><rect x="88.1025%" y="949" width="0.0363%" height="15" fill="rgb(220,89,49)" fg:x="143374275338" fg:w="59066232"/><text x="88.3525%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_and (53,601,162 samples, 0.03%)</title><rect x="88.1058%" y="933" width="0.0329%" height="15" fill="rgb(227,60,33)" fg:x="143379740408" fg:w="53601162"/><text x="88.3558%" y="943.50"></text></g><g><title>futures_util::future::assert_future (27,786,429 samples, 0.02%)</title><rect x="88.1700%" y="933" width="0.0171%" height="15" fill="rgb(205,113,12)" fg:x="143484208758" fg:w="27786429"/><text x="88.4200%" y="943.50"></text></g><g><title>__memmove_avx_unaligned (20,492,287 samples, 0.01%)</title><rect x="88.1745%" y="917" width="0.0126%" height="15" fill="rgb(211,32,1)" fg:x="143491502900" fg:w="20492287"/><text x="88.4245%" y="927.50"></text></g><g><title>__memmove_avx_unaligned (27,831,018 samples, 0.02%)</title><rect x="88.1940%" y="917" width="0.0171%" height="15" fill="rgb(246,2,12)" fg:x="143523202277" fg:w="27831018"/><text x="88.4440%" y="927.50"></text></g><g><title>__memmove_avx_unaligned (69,113,081 samples, 0.04%)</title><rect x="88.2196%" y="901" width="0.0425%" height="15" fill="rgb(243,37,27)" fg:x="143564864706" fg:w="69113081"/><text x="88.4696%" y="911.50"></text></g><g><title>futures_util::sink::SinkExt::send (202,574,289 samples, 0.12%)</title><rect x="88.1388%" y="949" width="0.1245%" height="15" fill="rgb(248,211,31)" fg:x="143433341570" fg:w="202574289"/><text x="88.3888%" y="959.50"></text></g><g><title>futures_util::sink::send::Send&lt;Si,Item&gt;::new (123,920,672 samples, 0.08%)</title><rect x="88.1871%" y="933" width="0.0761%" height="15" fill="rgb(242,146,47)" fg:x="143511995187" fg:w="123920672"/><text x="88.4371%" y="943.50"></text></g><g><title>futures_util::sink::feed::Feed&lt;Si,Item&gt;::new (84,882,564 samples, 0.05%)</title><rect x="88.2111%" y="917" width="0.0522%" height="15" fill="rgb(206,70,20)" fg:x="143551033295" fg:w="84882564"/><text x="88.4611%" y="927.50"></text></g><g><title>tokio::sync::broadcast::Receiver&lt;T&gt;::recv (129,983,763 samples, 0.08%)</title><rect x="88.2642%" y="949" width="0.0799%" height="15" fill="rgb(215,10,51)" fg:x="143637486928" fg:w="129983763"/><text x="88.5142%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (28,386,703 samples, 0.02%)</title><rect x="88.4837%" y="837" width="0.0174%" height="15" fill="rgb(243,178,53)" fg:x="143994701841" fg:w="28386703"/><text x="88.7337%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28,386,703 samples, 0.02%)</title><rect x="88.4837%" y="821" width="0.0174%" height="15" fill="rgb(233,221,20)" fg:x="143994701841" fg:w="28386703"/><text x="88.7337%" y="831.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (27,821,621 samples, 0.02%)</title><rect x="88.5113%" y="805" width="0.0171%" height="15" fill="rgb(218,95,35)" fg:x="144039516498" fg:w="27821621"/><text x="88.7613%" y="815.50"></text></g><g><title>syscall (27,821,621 samples, 0.02%)</title><rect x="88.5113%" y="789" width="0.0171%" height="15" fill="rgb(229,13,5)" fg:x="144039516498" fg:w="27821621"/><text x="88.7613%" y="799.50"></text></g><g><title>[unknown] (27,821,621 samples, 0.02%)</title><rect x="88.5113%" y="773" width="0.0171%" height="15" fill="rgb(252,164,30)" fg:x="144039516498" fg:w="27821621"/><text x="88.7613%" y="783.50"></text></g><g><title>[unknown] (27,821,621 samples, 0.02%)</title><rect x="88.5113%" y="757" width="0.0171%" height="15" fill="rgb(232,68,36)" fg:x="144039516498" fg:w="27821621"/><text x="88.7613%" y="767.50"></text></g><g><title>[unknown] (27,821,621 samples, 0.02%)</title><rect x="88.5113%" y="741" width="0.0171%" height="15" fill="rgb(219,59,54)" fg:x="144039516498" fg:w="27821621"/><text x="88.7613%" y="751.50"></text></g><g><title>[unknown] (25,881,398 samples, 0.02%)</title><rect x="88.5125%" y="725" width="0.0159%" height="15" fill="rgb(250,92,33)" fg:x="144041456721" fg:w="25881398"/><text x="88.7625%" y="735.50"></text></g><g><title>[unknown] (23,838,139 samples, 0.01%)</title><rect x="88.5137%" y="709" width="0.0146%" height="15" fill="rgb(229,162,54)" fg:x="144043499980" fg:w="23838139"/><text x="88.7637%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (24,801,237 samples, 0.02%)</title><rect x="88.5322%" y="805" width="0.0152%" height="15" fill="rgb(244,114,52)" fg:x="144073644249" fg:w="24801237"/><text x="88.7822%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (24,801,237 samples, 0.02%)</title><rect x="88.5322%" y="789" width="0.0152%" height="15" fill="rgb(212,211,43)" fg:x="144073644249" fg:w="24801237"/><text x="88.7822%" y="799.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (31,249,042 samples, 0.02%)</title><rect x="88.5508%" y="789" width="0.0192%" height="15" fill="rgb(226,147,8)" fg:x="144103786002" fg:w="31249042"/><text x="88.8008%" y="799.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (31,249,042 samples, 0.02%)</title><rect x="88.5508%" y="773" width="0.0192%" height="15" fill="rgb(226,23,13)" fg:x="144103786002" fg:w="31249042"/><text x="88.8008%" y="783.50"></text></g><g><title>__vdso_clock_gettime (25,609,383 samples, 0.02%)</title><rect x="88.5542%" y="757" width="0.0157%" height="15" fill="rgb(240,63,4)" fg:x="144109425661" fg:w="25609383"/><text x="88.8042%" y="767.50"></text></g><g><title>[unknown] (22,006,599 samples, 0.01%)</title><rect x="88.5564%" y="741" width="0.0135%" height="15" fill="rgb(221,1,32)" fg:x="144113028445" fg:w="22006599"/><text x="88.8064%" y="751.50"></text></g><g><title>[unknown] (20,033,777 samples, 0.01%)</title><rect x="88.5577%" y="725" width="0.0123%" height="15" fill="rgb(242,117,10)" fg:x="144115001267" fg:w="20033777"/><text x="88.8077%" y="735.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (39,586,256 samples, 0.02%)</title><rect x="88.5475%" y="805" width="0.0243%" height="15" fill="rgb(249,172,44)" fg:x="144098445486" fg:w="39586256"/><text x="88.7975%" y="815.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (37,000,274 samples, 0.02%)</title><rect x="88.5718%" y="805" width="0.0227%" height="15" fill="rgb(244,46,45)" fg:x="144138031742" fg:w="37000274"/><text x="88.8218%" y="815.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (22,966,482 samples, 0.01%)</title><rect x="88.5804%" y="789" width="0.0141%" height="15" fill="rgb(206,43,17)" fg:x="144152065534" fg:w="22966482"/><text x="88.8304%" y="799.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (156,513,363 samples, 0.10%)</title><rect x="88.5012%" y="837" width="0.0962%" height="15" fill="rgb(239,218,39)" fg:x="144023088544" fg:w="156513363"/><text x="88.7512%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (156,513,363 samples, 0.10%)</title><rect x="88.5012%" y="821" width="0.0962%" height="15" fill="rgb(208,169,54)" fg:x="144023088544" fg:w="156513363"/><text x="88.7512%" y="831.50"></text></g><g><title>core::mem::drop (212,178,680 samples, 0.13%)</title><rect x="88.4687%" y="917" width="0.1304%" height="15" fill="rgb(247,25,42)" fg:x="143970241928" fg:w="212178680"/><text x="88.7187%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::sync::broadcast::Tail&gt;&gt; (199,101,940 samples, 0.12%)</title><rect x="88.4767%" y="901" width="0.1223%" height="15" fill="rgb(226,23,31)" fg:x="143983318668" fg:w="199101940"/><text x="88.7267%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::broadcast::Tail&gt;&gt; (197,481,436 samples, 0.12%)</title><rect x="88.4777%" y="885" width="0.1214%" height="15" fill="rgb(247,16,28)" fg:x="143984939172" fg:w="197481436"/><text x="88.7277%" y="895.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (191,794,352 samples, 0.12%)</title><rect x="88.4812%" y="869" width="0.1179%" height="15" fill="rgb(231,147,38)" fg:x="143990626256" fg:w="191794352"/><text x="88.7312%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (191,794,352 samples, 0.12%)</title><rect x="88.4812%" y="853" width="0.1179%" height="15" fill="rgb(253,81,48)" fg:x="143990626256" fg:w="191794352"/><text x="88.7312%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (21,352,778 samples, 0.01%)</title><rect x="88.6003%" y="917" width="0.0131%" height="15" fill="rgb(249,222,43)" fg:x="144184474078" fg:w="21352778"/><text x="88.8503%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (37,119,086 samples, 0.02%)</title><rect x="88.6178%" y="917" width="0.0228%" height="15" fill="rgb(221,3,27)" fg:x="144212811790" fg:w="37119086"/><text x="88.8678%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (31,473,530 samples, 0.02%)</title><rect x="88.6212%" y="901" width="0.0193%" height="15" fill="rgb(228,180,5)" fg:x="144218457346" fg:w="31473530"/><text x="88.8712%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (51,951,147 samples, 0.03%)</title><rect x="88.6406%" y="917" width="0.0319%" height="15" fill="rgb(227,131,42)" fg:x="144249930876" fg:w="51951147"/><text x="88.8906%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_store (38,249,201 samples, 0.02%)</title><rect x="88.6490%" y="901" width="0.0235%" height="15" fill="rgb(212,3,39)" fg:x="144263632822" fg:w="38249201"/><text x="88.8990%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (17,451,943 samples, 0.01%)</title><rect x="88.6748%" y="869" width="0.0107%" height="15" fill="rgb(226,45,5)" fg:x="144305670249" fg:w="17451943"/><text x="88.9248%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (17,451,943 samples, 0.01%)</title><rect x="88.6748%" y="853" width="0.0107%" height="15" fill="rgb(215,167,45)" fg:x="144305670249" fg:w="17451943"/><text x="88.9248%" y="863.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (21,914,443 samples, 0.01%)</title><rect x="88.7175%" y="805" width="0.0135%" height="15" fill="rgb(250,218,53)" fg:x="144375203409" fg:w="21914443"/><text x="88.9675%" y="815.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (21,914,443 samples, 0.01%)</title><rect x="88.7175%" y="789" width="0.0135%" height="15" fill="rgb(207,140,0)" fg:x="144375203409" fg:w="21914443"/><text x="88.9675%" y="799.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (53,727,920 samples, 0.03%)</title><rect x="88.7009%" y="821" width="0.0330%" height="15" fill="rgb(238,133,51)" fg:x="144348071925" fg:w="53727920"/><text x="88.9509%" y="831.50"></text></g><g><title>parking_lot_core::parking_lot::park (74,962,160 samples, 0.05%)</title><rect x="88.6969%" y="853" width="0.0461%" height="15" fill="rgb(218,203,53)" fg:x="144341536751" fg:w="74962160"/><text x="88.9469%" y="863.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (74,962,160 samples, 0.05%)</title><rect x="88.6969%" y="837" width="0.0461%" height="15" fill="rgb(226,184,25)" fg:x="144341536751" fg:w="74962160"/><text x="88.9469%" y="847.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (126,595,980 samples, 0.08%)</title><rect x="88.6725%" y="917" width="0.0778%" height="15" fill="rgb(231,121,21)" fg:x="144301882023" fg:w="126595980"/><text x="88.9225%" y="927.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (122,807,754 samples, 0.08%)</title><rect x="88.6748%" y="901" width="0.0755%" height="15" fill="rgb(251,14,34)" fg:x="144305670249" fg:w="122807754"/><text x="88.9248%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (122,807,754 samples, 0.08%)</title><rect x="88.6748%" y="885" width="0.0755%" height="15" fill="rgb(249,193,11)" fg:x="144305670249" fg:w="122807754"/><text x="88.9248%" y="895.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (105,355,811 samples, 0.06%)</title><rect x="88.6855%" y="869" width="0.0647%" height="15" fill="rgb(220,172,37)" fg:x="144323122192" fg:w="105355811"/><text x="88.9355%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (27,548,080 samples, 0.02%)</title><rect x="88.8345%" y="885" width="0.0169%" height="15" fill="rgb(231,229,43)" fg:x="144565569980" fg:w="27548080"/><text x="89.0845%" y="895.50"></text></g><g><title>&lt;tokio::sync::broadcast::Waiter as tokio::util::linked_list::Link&gt;::pointers (187,869,342 samples, 0.12%)</title><rect x="88.8529%" y="885" width="0.1154%" height="15" fill="rgb(250,161,5)" fg:x="144595427291" fg:w="187869342"/><text x="89.1029%" y="895.50"></text></g><g><title>tokio::sync::broadcast::Waiter::addr_of_pointers (149,512,040 samples, 0.09%)</title><rect x="88.8764%" y="869" width="0.0919%" height="15" fill="rgb(218,225,18)" fg:x="144633784593" fg:w="149512040"/><text x="89.1264%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (118,151,057 samples, 0.07%)</title><rect x="88.8957%" y="853" width="0.0726%" height="15" fill="rgb(245,45,42)" fg:x="144665145576" fg:w="118151057"/><text x="89.1457%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (21,019,533 samples, 0.01%)</title><rect x="88.9701%" y="885" width="0.0129%" height="15" fill="rgb(211,115,1)" fg:x="144786189440" fg:w="21019533"/><text x="89.2201%" y="895.50"></text></g><g><title>&lt;tokio::sync::broadcast::Waiter as tokio::util::linked_list::Link&gt;::pointers (64,003,473 samples, 0.04%)</title><rect x="89.0161%" y="869" width="0.0393%" height="15" fill="rgb(248,133,52)" fg:x="144861121580" fg:w="64003473"/><text x="89.2661%" y="879.50"></text></g><g><title>tokio::sync::broadcast::Waiter::addr_of_pointers (44,656,129 samples, 0.03%)</title><rect x="89.0280%" y="853" width="0.0274%" height="15" fill="rgb(238,100,21)" fg:x="144880468924" fg:w="44656129"/><text x="89.2780%" y="863.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (29,131,592 samples, 0.02%)</title><rect x="89.0376%" y="837" width="0.0179%" height="15" fill="rgb(247,144,11)" fg:x="144895993461" fg:w="29131592"/><text x="89.2876%" y="847.50"></text></g><g><title>core::cmp::PartialEq::ne (36,726,553 samples, 0.02%)</title><rect x="89.0566%" y="869" width="0.0226%" height="15" fill="rgb(206,164,16)" fg:x="144926890712" fg:w="36726553"/><text x="89.3066%" y="879.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (22,607,931 samples, 0.01%)</title><rect x="89.0652%" y="853" width="0.0139%" height="15" fill="rgb(222,34,3)" fg:x="144941009334" fg:w="22607931"/><text x="89.3152%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (20,855,591 samples, 0.01%)</title><rect x="89.0791%" y="869" width="0.0128%" height="15" fill="rgb(248,82,4)" fg:x="144963617265" fg:w="20855591"/><text x="89.3291%" y="879.50"></text></g><g><title>tokio::util::linked_list::GuardedLinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::tail (205,825,718 samples, 0.13%)</title><rect x="88.9830%" y="885" width="0.1265%" height="15" fill="rgb(228,81,46)" fg:x="144807208973" fg:w="205825718"/><text x="89.2330%" y="895.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::get_prev (28,561,835 samples, 0.02%)</title><rect x="89.0919%" y="869" width="0.0176%" height="15" fill="rgb(227,67,47)" fg:x="144984472856" fg:w="28561835"/><text x="89.3419%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (17,135,382 samples, 0.01%)</title><rect x="89.0990%" y="853" width="0.0105%" height="15" fill="rgb(215,93,53)" fg:x="144995899309" fg:w="17135382"/><text x="89.3490%" y="863.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_next (335,376,958 samples, 0.21%)</title><rect x="89.1173%" y="885" width="0.2061%" height="15" fill="rgb(248,194,39)" fg:x="145025694102" fg:w="335376958"/><text x="89.3673%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (50,875,035 samples, 0.03%)</title><rect x="89.2921%" y="869" width="0.0313%" height="15" fill="rgb(215,5,19)" fg:x="145310196025" fg:w="50875035"/><text x="89.5421%" y="879.50"></text></g><g><title>core::ptr::write (50,875,035 samples, 0.03%)</title><rect x="89.2921%" y="853" width="0.0313%" height="15" fill="rgb(226,215,51)" fg:x="145310196025" fg:w="50875035"/><text x="89.5421%" y="863.50"></text></g><g><title>tokio::sync::broadcast::WaitersList&lt;T&gt;::pop_back_locked (1,798,992,529 samples, 1.11%)</title><rect x="88.7535%" y="917" width="1.1055%" height="15" fill="rgb(225,56,26)" fg:x="144433736040" fg:w="1798992529"/><text x="89.0035%" y="927.50"></text></g><g><title>tokio::util::linked_list::GuardedLinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (1,774,204,514 samples, 1.09%)</title><rect x="88.7687%" y="901" width="1.0902%" height="15" fill="rgb(222,75,29)" fg:x="144458524055" fg:w="1774204514"/><text x="89.0187%" y="911.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_prev (871,657,509 samples, 0.54%)</title><rect x="89.3234%" y="885" width="0.5356%" height="15" fill="rgb(236,139,6)" fg:x="145361071060" fg:w="871657509"/><text x="89.5734%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (82,979,669 samples, 0.05%)</title><rect x="89.8080%" y="869" width="0.0510%" height="15" fill="rgb(223,137,36)" fg:x="146149748900" fg:w="82979669"/><text x="90.0580%" y="879.50"></text></g><g><title>core::ptr::write (82,979,669 samples, 0.05%)</title><rect x="89.8080%" y="853" width="0.0510%" height="15" fill="rgb(226,99,2)" fg:x="146149748900" fg:w="82979669"/><text x="90.0580%" y="863.50"></text></g><g><title>tokio::util::wake_list::WakeList::can_push (28,705,463 samples, 0.02%)</title><rect x="89.8590%" y="917" width="0.0176%" height="15" fill="rgb(206,133,23)" fg:x="146232728569" fg:w="28705463"/><text x="90.1090%" y="927.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (16,572,716 samples, 0.01%)</title><rect x="89.9150%" y="901" width="0.0102%" height="15" fill="rgb(243,173,15)" fg:x="146323967479" fg:w="16572716"/><text x="90.1650%" y="911.50"></text></g><g><title>tokio::util::wake_list::WakeList::push (80,764,586 samples, 0.05%)</title><rect x="89.8766%" y="917" width="0.0496%" height="15" fill="rgb(228,69,28)" fg:x="146261434032" fg:w="80764586"/><text x="90.1266%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::wake_list::WakeList::wake_all::DropGuard&gt; (16,783,173 samples, 0.01%)</title><rect x="89.9968%" y="901" width="0.0103%" height="15" fill="rgb(212,51,22)" fg:x="146457004663" fg:w="16783173"/><text x="90.2468%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (29,362,407 samples, 0.02%)</title><rect x="90.1069%" y="869" width="0.0180%" height="15" fill="rgb(227,113,0)" fg:x="146636147596" fg:w="29362407"/><text x="90.3569%" y="879.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::state (32,562,355 samples, 0.02%)</title><rect x="90.1847%" y="837" width="0.0200%" height="15" fill="rgb(252,84,27)" fg:x="146762796456" fg:w="32562355"/><text x="90.4347%" y="847.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (27,234,926 samples, 0.02%)</title><rect x="90.2247%" y="821" width="0.0167%" height="15" fill="rgb(223,145,39)" fg:x="146827882622" fg:w="27234926"/><text x="90.4747%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (42,104,224 samples, 0.03%)</title><rect x="90.2414%" y="821" width="0.0259%" height="15" fill="rgb(239,219,30)" fg:x="146855117548" fg:w="42104224"/><text x="90.4914%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (38,438,191 samples, 0.02%)</title><rect x="90.2437%" y="805" width="0.0236%" height="15" fill="rgb(224,196,39)" fg:x="146858783581" fg:w="38438191"/><text x="90.4937%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (154,938,311 samples, 0.10%)</title><rect x="90.1787%" y="853" width="0.0952%" height="15" fill="rgb(205,35,43)" fg:x="146752980685" fg:w="154938311"/><text x="90.4287%" y="863.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (112,560,185 samples, 0.07%)</title><rect x="90.2047%" y="837" width="0.0692%" height="15" fill="rgb(228,201,21)" fg:x="146795358811" fg:w="112560185"/><text x="90.4547%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::worker::with_current&lt;(),tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}}&gt;::{{closure}}&gt;&gt; (42,553,228 samples, 0.03%)</title><rect x="90.5537%" y="757" width="0.0261%" height="15" fill="rgb(237,118,16)" fg:x="147363252328" fg:w="42553228"/><text x="90.8037%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (21,631,631 samples, 0.01%)</title><rect x="90.5798%" y="757" width="0.0133%" height="15" fill="rgb(241,17,19)" fg:x="147405805556" fg:w="21631631"/><text x="90.8298%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (63,095,420 samples, 0.04%)</title><rect x="90.6323%" y="741" width="0.0388%" height="15" fill="rgb(214,10,25)" fg:x="147491131775" fg:w="63095420"/><text x="90.8823%" y="751.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (35,768,483 samples, 0.02%)</title><rect x="90.6491%" y="725" width="0.0220%" height="15" fill="rgb(238,37,29)" fg:x="147518458712" fg:w="35768483"/><text x="90.8991%" y="735.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (31,931,123 samples, 0.02%)</title><rect x="90.6514%" y="709" width="0.0196%" height="15" fill="rgb(253,83,25)" fg:x="147522296072" fg:w="31931123"/><text x="90.9014%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (17,779,944 samples, 0.01%)</title><rect x="90.6710%" y="741" width="0.0109%" height="15" fill="rgb(234,192,12)" fg:x="147554227195" fg:w="17779944"/><text x="90.9210%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (18,485,626 samples, 0.01%)</title><rect x="90.7293%" y="725" width="0.0114%" height="15" fill="rgb(241,216,45)" fg:x="147649040718" fg:w="18485626"/><text x="90.9793%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (42,063,307 samples, 0.03%)</title><rect x="90.7407%" y="725" width="0.0258%" height="15" fill="rgb(242,22,33)" fg:x="147667526344" fg:w="42063307"/><text x="90.9907%" y="735.50"></text></g><g><title>&lt;core::cell::RefMut&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (20,574,539 samples, 0.01%)</title><rect x="91.0115%" y="677" width="0.0126%" height="15" fill="rgb(231,105,49)" fg:x="148108361929" fg:w="20574539"/><text x="91.2615%" y="687.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (97,454,003 samples, 0.06%)</title><rect x="91.0242%" y="677" width="0.0599%" height="15" fill="rgb(218,204,15)" fg:x="148128936468" fg:w="97454003"/><text x="91.2742%" y="687.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (52,477,586 samples, 0.03%)</title><rect x="91.0518%" y="661" width="0.0322%" height="15" fill="rgb(235,138,41)" fg:x="148173912885" fg:w="52477586"/><text x="91.3018%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (39,066,884 samples, 0.02%)</title><rect x="91.0841%" y="677" width="0.0240%" height="15" fill="rgb(246,0,9)" fg:x="148226390471" fg:w="39066884"/><text x="91.3341%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (69,665,136 samples, 0.04%)</title><rect x="91.1081%" y="677" width="0.0428%" height="15" fill="rgb(210,74,4)" fg:x="148265457355" fg:w="69665136"/><text x="91.3581%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (42,824,934 samples, 0.03%)</title><rect x="91.1246%" y="661" width="0.0263%" height="15" fill="rgb(250,60,41)" fg:x="148292297557" fg:w="42824934"/><text x="91.3746%" y="671.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (23,339,902 samples, 0.01%)</title><rect x="91.1365%" y="645" width="0.0143%" height="15" fill="rgb(220,115,12)" fg:x="148311782589" fg:w="23339902"/><text x="91.3865%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (40,363,465 samples, 0.02%)</title><rect x="91.2843%" y="661" width="0.0248%" height="15" fill="rgb(237,100,13)" fg:x="148552181467" fg:w="40363465"/><text x="91.5343%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (18,184,604 samples, 0.01%)</title><rect x="91.3091%" y="661" width="0.0112%" height="15" fill="rgb(213,55,26)" fg:x="148592544932" fg:w="18184604"/><text x="91.5591%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (25,306,344 samples, 0.02%)</title><rect x="91.3202%" y="661" width="0.0156%" height="15" fill="rgb(216,17,4)" fg:x="148610729536" fg:w="25306344"/><text x="91.5702%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (47,122,188 samples, 0.03%)</title><rect x="91.4373%" y="645" width="0.0290%" height="15" fill="rgb(220,153,47)" fg:x="148801145372" fg:w="47122188"/><text x="91.6873%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (39,370,307 samples, 0.02%)</title><rect x="91.4420%" y="629" width="0.0242%" height="15" fill="rgb(215,131,9)" fg:x="148808897253" fg:w="39370307"/><text x="91.6920%" y="639.50"></text></g><g><title>tokio::loom::std::atomic_u32::AtomicU32::unsync_load (36,898,707 samples, 0.02%)</title><rect x="91.4662%" y="645" width="0.0227%" height="15" fill="rgb(233,46,42)" fg:x="148848267560" fg:w="36898707"/><text x="91.7162%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (19,452,447 samples, 0.01%)</title><rect x="91.5486%" y="629" width="0.0120%" height="15" fill="rgb(226,86,7)" fg:x="148982338853" fg:w="19452447"/><text x="91.7986%" y="639.50"></text></g><g><title>&lt;tokio::loom::std::atomic_u32::AtomicU32 as core::ops::deref::Deref&gt;::deref (17,715,203 samples, 0.01%)</title><rect x="91.5606%" y="629" width="0.0109%" height="15" fill="rgb(239,226,21)" fg:x="149001791300" fg:w="17715203"/><text x="91.8106%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::store (68,644,839 samples, 0.04%)</title><rect x="91.5714%" y="629" width="0.0422%" height="15" fill="rgb(244,137,22)" fg:x="149019506503" fg:w="68644839"/><text x="91.8214%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_store (59,934,842 samples, 0.04%)</title><rect x="91.5768%" y="613" width="0.0368%" height="15" fill="rgb(211,139,35)" fg:x="149028216500" fg:w="59934842"/><text x="91.8268%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_finish (276,951,537 samples, 0.17%)</title><rect x="91.4889%" y="645" width="0.1702%" height="15" fill="rgb(214,62,50)" fg:x="148885166267" fg:w="276951537"/><text x="91.7389%" y="655.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (73,966,462 samples, 0.05%)</title><rect x="91.6136%" y="629" width="0.0455%" height="15" fill="rgb(212,113,44)" fg:x="149088151342" fg:w="73966462"/><text x="91.8636%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_finish::_{{closure}} (44,209,413 samples, 0.03%)</title><rect x="91.6319%" y="613" width="0.0272%" height="15" fill="rgb(226,150,43)" fg:x="149117908391" fg:w="44209413"/><text x="91.8819%" y="623.50"></text></g><g><title>&lt;tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_overflow::BatchTaskIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (337,717,289 samples, 0.21%)</title><rect x="91.6849%" y="549" width="0.2075%" height="15" fill="rgb(250,71,37)" fg:x="149204096979" fg:w="337717289"/><text x="91.9349%" y="559.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (301,931,475 samples, 0.19%)</title><rect x="91.7069%" y="533" width="0.1855%" height="15" fill="rgb(219,76,19)" fg:x="149239882793" fg:w="301931475"/><text x="91.9569%" y="543.50"></text></g><g><title>&lt;tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_overflow::BatchTaskIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (291,285,131 samples, 0.18%)</title><rect x="91.7134%" y="517" width="0.1790%" height="15" fill="rgb(250,39,11)" fg:x="149250529137" fg:w="291285131"/><text x="91.9634%" y="527.50"></text></g><g><title>core::ptr::read (277,392,316 samples, 0.17%)</title><rect x="91.7219%" y="501" width="0.1705%" height="15" fill="rgb(230,64,31)" fg:x="149264421952" fg:w="277392316"/><text x="91.9719%" y="511.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::into_raw (44,964,697 samples, 0.03%)</title><rect x="91.9090%" y="501" width="0.0276%" height="15" fill="rgb(208,222,23)" fg:x="149568866510" fg:w="44964697"/><text x="92.1590%" y="511.50"></text></g><g><title>tokio::runtime::task::core::Header::set_next (108,068,368 samples, 0.07%)</title><rect x="91.9482%" y="485" width="0.0664%" height="15" fill="rgb(227,125,18)" fg:x="149632630063" fg:w="108068368"/><text x="92.1982%" y="495.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (102,997,600 samples, 0.06%)</title><rect x="91.9513%" y="469" width="0.0633%" height="15" fill="rgb(234,210,9)" fg:x="149637700831" fg:w="102997600"/><text x="92.2013%" y="479.50"></text></g><g><title>tokio::runtime::task::core::Header::set_next::_{{closure}} (101,420,053 samples, 0.06%)</title><rect x="91.9523%" y="453" width="0.0623%" height="15" fill="rgb(217,127,24)" fg:x="149639278378" fg:w="101420053"/><text x="92.2023%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (204,309,157 samples, 0.13%)</title><rect x="91.8936%" y="549" width="0.1255%" height="15" fill="rgb(239,141,48)" fg:x="149543759071" fg:w="204309157"/><text x="92.1436%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (191,671,966 samples, 0.12%)</title><rect x="91.9014%" y="533" width="0.1178%" height="15" fill="rgb(227,109,8)" fg:x="149556396262" fg:w="191671966"/><text x="92.1514%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::inject::rt_multi_thread::_&lt;impl tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;&gt;::push_batch::_{{closure}} (184,912,542 samples, 0.11%)</title><rect x="91.9055%" y="517" width="0.1136%" height="15" fill="rgb(235,184,23)" fg:x="149563155686" fg:w="184912542"/><text x="92.1555%" y="527.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::set_queue_next (134,237,021 samples, 0.08%)</title><rect x="91.9366%" y="501" width="0.0825%" height="15" fill="rgb(227,226,48)" fg:x="149613831207" fg:w="134237021"/><text x="92.1866%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (574,658,054 samples, 0.35%)</title><rect x="91.6696%" y="597" width="0.3531%" height="15" fill="rgb(206,150,11)" fg:x="149179230657" fg:w="574658054"/><text x="91.9196%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (574,658,054 samples, 0.35%)</title><rect x="91.6696%" y="581" width="0.3531%" height="15" fill="rgb(254,2,33)" fg:x="149179230657" fg:w="574658054"/><text x="91.9196%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (562,510,453 samples, 0.35%)</title><rect x="91.6771%" y="565" width="0.3457%" height="15" fill="rgb(243,160,20)" fg:x="149191378258" fg:w="562510453"/><text x="91.9271%" y="575.50"></text></g><g><title>tokio::runtime::scheduler::inject::rt_multi_thread::&lt;impl tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;&gt;::push_batch_inner (39,322,842 samples, 0.02%)</title><rect x="92.0227%" y="597" width="0.0242%" height="15" fill="rgb(218,208,30)" fg:x="149753888711" fg:w="39322842"/><text x="92.2727%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_overflow (632,733,518 samples, 0.39%)</title><rect x="91.6591%" y="645" width="0.3888%" height="15" fill="rgb(224,120,49)" fg:x="149162117804" fg:w="632733518"/><text x="91.9091%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::overflow::Overflow&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt; for tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_batch (622,016,419 samples, 0.38%)</title><rect x="91.6657%" y="629" width="0.3822%" height="15" fill="rgb(246,12,2)" fg:x="149172834903" fg:w="622016419"/><text x="91.9157%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::inject::rt_multi_thread::&lt;impl tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;&gt;::push_batch (622,016,419 samples, 0.38%)</title><rect x="91.6657%" y="613" width="0.3822%" height="15" fill="rgb(236,117,3)" fg:x="149172834903" fg:w="622016419"/><text x="91.9157%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (1,201,737,007 samples, 0.74%)</title><rect x="91.3358%" y="661" width="0.7385%" height="15" fill="rgb(216,128,52)" fg:x="148636035880" fg:w="1201737007"/><text x="91.5858%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (42,921,565 samples, 0.03%)</title><rect x="92.0479%" y="645" width="0.0264%" height="15" fill="rgb(246,145,19)" fg:x="149794851322" fg:w="42921565"/><text x="92.2979%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::inc_local_schedule_count (19,234,437 samples, 0.01%)</title><rect x="92.0743%" y="661" width="0.0118%" height="15" fill="rgb(222,11,46)" fg:x="149837772887" fg:w="19234437"/><text x="92.3243%" y="671.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (38,411,519 samples, 0.02%)</title><rect x="92.1790%" y="613" width="0.0236%" height="15" fill="rgb(245,82,36)" fg:x="150008295230" fg:w="38411519"/><text x="92.4290%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (146,779,551 samples, 0.09%)</title><rect x="92.2026%" y="613" width="0.0902%" height="15" fill="rgb(250,73,51)" fg:x="150046706749" fg:w="146779551"/><text x="92.4526%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (136,418,399 samples, 0.08%)</title><rect x="92.2090%" y="597" width="0.0838%" height="15" fill="rgb(221,189,23)" fg:x="150057067901" fg:w="136418399"/><text x="92.4590%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (289,552,246 samples, 0.18%)</title><rect x="92.1175%" y="645" width="0.1779%" height="15" fill="rgb(210,33,7)" fg:x="149908194605" fg:w="289552246"/><text x="92.3675%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (258,901,935 samples, 0.16%)</title><rect x="92.1364%" y="629" width="0.1591%" height="15" fill="rgb(210,107,22)" fg:x="149938844916" fg:w="258901935"/><text x="92.3864%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (3,092,698,592 samples, 1.90%)</title><rect x="90.3976%" y="821" width="1.9004%" height="15" fill="rgb(222,116,37)" fg:x="147109244316" fg:w="3092698592"/><text x="90.6476%" y="831.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (3,019,784,849 samples, 1.86%)</title><rect x="90.4424%" y="805" width="1.8556%" height="15" fill="rgb(254,17,48)" fg:x="147182158059" fg:w="3019784849"/><text x="90.6924%" y="815.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (2,976,305,013 samples, 1.83%)</title><rect x="90.4691%" y="789" width="1.8289%" height="15" fill="rgb(224,36,32)" fg:x="147225637895" fg:w="2976305013"/><text x="90.7191%" y="799.50">t..</text></g><g><title>tokio::runtime::context::with_scheduler (2,930,667,801 samples, 1.80%)</title><rect x="90.4972%" y="773" width="1.8009%" height="15" fill="rgb(232,90,46)" fg:x="147271275107" fg:w="2930667801"/><text x="90.7472%" y="783.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,774,505,721 samples, 1.70%)</title><rect x="90.5931%" y="757" width="1.7049%" height="15" fill="rgb(241,66,40)" fg:x="147427437187" fg:w="2774505721"/><text x="90.8431%" y="767.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (2,628,090,352 samples, 1.61%)</title><rect x="90.6831%" y="741" width="1.6149%" height="15" fill="rgb(249,184,29)" fg:x="147573852556" fg:w="2628090352"/><text x="90.9331%" y="751.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2,492,353,257 samples, 1.53%)</title><rect x="90.7665%" y="725" width="1.5315%" height="15" fill="rgb(231,181,1)" fg:x="147709589651" fg:w="2492353257"/><text x="91.0165%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (2,335,660,070 samples, 1.44%)</title><rect x="90.8628%" y="709" width="1.4352%" height="15" fill="rgb(224,94,2)" fg:x="147866282838" fg:w="2335660070"/><text x="91.1128%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (2,287,337,994 samples, 1.41%)</title><rect x="90.8925%" y="693" width="1.4056%" height="15" fill="rgb(229,170,15)" fg:x="147914604914" fg:w="2287337994"/><text x="91.1425%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1,860,740,778 samples, 1.14%)</title><rect x="91.1546%" y="677" width="1.1434%" height="15" fill="rgb(240,127,35)" fg:x="148341202130" fg:w="1860740778"/><text x="91.4046%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (344,935,584 samples, 0.21%)</title><rect x="92.0861%" y="661" width="0.2120%" height="15" fill="rgb(248,196,34)" fg:x="149857007324" fg:w="344935584"/><text x="92.3361%" y="671.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::from_raw (64,593,430 samples, 0.04%)</title><rect x="92.2980%" y="821" width="0.0397%" height="15" fill="rgb(236,137,7)" fg:x="150201942908" fg:w="64593430"/><text x="92.5480%" y="831.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::from_raw (19,460,759 samples, 0.01%)</title><rect x="92.3258%" y="805" width="0.0120%" height="15" fill="rgb(235,127,16)" fg:x="150247075579" fg:w="19460759"/><text x="92.5758%" y="815.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (3,414,840,449 samples, 2.10%)</title><rect x="90.2739%" y="853" width="2.0984%" height="15" fill="rgb(250,192,54)" fg:x="146907918996" fg:w="3414840449"/><text x="90.5239%" y="863.50">t..</text></g><g><title>tokio::runtime::task::raw::schedule (3,312,140,732 samples, 2.04%)</title><rect x="90.3370%" y="837" width="2.0353%" height="15" fill="rgb(218,98,20)" fg:x="147010618713" fg:w="3312140732"/><text x="90.5870%" y="847.50">t..</text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (56,223,107 samples, 0.03%)</title><rect x="92.3377%" y="821" width="0.0345%" height="15" fill="rgb(230,176,47)" fg:x="150266536338" fg:w="56223107"/><text x="92.5877%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (35,072,508 samples, 0.02%)</title><rect x="92.3507%" y="805" width="0.0216%" height="15" fill="rgb(244,2,33)" fg:x="150287686937" fg:w="35072508"/><text x="92.6007%" y="815.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::state (19,659,367 samples, 0.01%)</title><rect x="92.3723%" y="853" width="0.0121%" height="15" fill="rgb(231,100,17)" fg:x="150322759445" fg:w="19659367"/><text x="92.6223%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (117,318,845 samples, 0.07%)</title><rect x="92.4502%" y="821" width="0.0721%" height="15" fill="rgb(245,23,12)" fg:x="150449508326" fg:w="117318845"/><text x="92.7002%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (97,863,919 samples, 0.06%)</title><rect x="92.4621%" y="805" width="0.0601%" height="15" fill="rgb(249,55,22)" fg:x="150468963252" fg:w="97863919"/><text x="92.7121%" y="815.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (45,589,226 samples, 0.03%)</title><rect x="92.5401%" y="805" width="0.0280%" height="15" fill="rgb(207,134,9)" fg:x="150595837704" fg:w="45589226"/><text x="92.7901%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::load (1,013,675,826 samples, 0.62%)</title><rect x="92.5223%" y="821" width="0.6229%" height="15" fill="rgb(218,134,0)" fg:x="150566827171" fg:w="1013675826"/><text x="92.7723%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (939,076,067 samples, 0.58%)</title><rect x="92.5681%" y="805" width="0.5771%" height="15" fill="rgb(213,212,33)" fg:x="150641426930" fg:w="939076067"/><text x="92.8181%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (932,864,094 samples, 0.57%)</title><rect x="92.5719%" y="789" width="0.5732%" height="15" fill="rgb(252,106,18)" fg:x="150647638903" fg:w="932864094"/><text x="92.8219%" y="799.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_inc (23,549,995 samples, 0.01%)</title><rect x="93.1943%" y="805" width="0.0145%" height="15" fill="rgb(208,126,42)" fg:x="151660439631" fg:w="23549995"/><text x="93.4443%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (5,026,326,607 samples, 3.09%)</title><rect x="90.1249%" y="869" width="3.0886%" height="15" fill="rgb(246,175,29)" fg:x="146665510003" fg:w="5026326607"/><text x="90.3749%" y="879.50">tok..</text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1,349,417,798 samples, 0.83%)</title><rect x="92.3844%" y="853" width="0.8292%" height="15" fill="rgb(215,13,50)" fg:x="150342418812" fg:w="1349417798"/><text x="92.6344%" y="863.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1,304,693,246 samples, 0.80%)</title><rect x="92.4118%" y="837" width="0.8017%" height="15" fill="rgb(216,172,15)" fg:x="150387143364" fg:w="1304693246"/><text x="92.6618%" y="847.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val::_{{closure}} (111,333,613 samples, 0.07%)</title><rect x="93.1452%" y="821" width="0.0684%" height="15" fill="rgb(212,103,13)" fg:x="151580502997" fg:w="111333613"/><text x="93.3952%" y="831.50"></text></g><g><title>tokio::sync::broadcast::Sender&lt;T&gt;::send (7,942,590,979 samples, 4.88%)</title><rect x="88.3441%" y="949" width="4.8807%" height="15" fill="rgb(231,171,36)" fg:x="143767470691" fg:w="7942590979"/><text x="88.5941%" y="959.50">tokio:..</text></g><g><title>tokio::sync::broadcast::Shared&lt;T&gt;::notify_rx (7,915,726,233 samples, 4.86%)</title><rect x="88.3606%" y="933" width="4.8642%" height="15" fill="rgb(250,123,20)" fg:x="143794335437" fg:w="7915726233"/><text x="88.6106%" y="943.50">tokio:..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (5,367,863,052 samples, 3.30%)</title><rect x="89.9263%" y="917" width="3.2985%" height="15" fill="rgb(212,53,50)" fg:x="146342198618" fg:w="5367863052"/><text x="90.1763%" y="927.50">tok..</text></g><g><title>core::task::wake::Waker::wake (5,220,512,581 samples, 3.21%)</title><rect x="90.0168%" y="901" width="3.2080%" height="15" fill="rgb(243,54,12)" fg:x="146489549089" fg:w="5220512581"/><text x="90.2668%" y="911.50">cor..</text></g><g><title>tokio::runtime::task::waker::wake_by_val (5,155,334,175 samples, 3.17%)</title><rect x="90.0568%" y="885" width="3.1679%" height="15" fill="rgb(234,101,34)" fg:x="146554727495" fg:w="5155334175"/><text x="90.3068%" y="895.50">tok..</text></g><g><title>tokio::runtime::task::raw::RawTask::from_raw (18,225,060 samples, 0.01%)</title><rect x="93.2136%" y="869" width="0.0112%" height="15" fill="rgb(254,67,22)" fg:x="151691836610" fg:w="18225060"/><text x="93.4636%" y="879.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (135,531,780,999 samples, 83.28%)</title><rect x="10.0897%" y="997" width="83.2833%" height="15" fill="rgb(250,35,47)" fg:x="16419554774" fg:w="135531780999"/><text x="10.3397%" y="1007.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (135,324,935,110 samples, 83.16%)</title><rect x="10.2168%" y="981" width="83.1562%" height="15" fill="rgb(226,126,38)" fg:x="16626400663" fg:w="135324935110"/><text x="10.4668%" y="991.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>update_countdown::routes::websocket::_{{closure}}::_{{closure}} (126,550,782,448 samples, 77.76%)</title><rect x="15.6085%" y="965" width="77.7646%" height="15" fill="rgb(216,138,53)" fg:x="25400553325" fg:w="126550782448"/><text x="15.8585%" y="975.50">update_countdown::routes::websocket::_{{closure}}::_{{closure}}</text></g><g><title>tokio::time::interval::Interval::tick (241,274,103 samples, 0.15%)</title><rect x="93.2248%" y="949" width="0.1483%" height="15" fill="rgb(246,199,43)" fg:x="151710061670" fg:w="241274103"/><text x="93.4748%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (135,683,640,037 samples, 83.38%)</title><rect x="10.0170%" y="1013" width="83.3766%" height="15" fill="rgb(232,125,11)" fg:x="16301254825" fg:w="135683640037"/><text x="10.2670%" y="1023.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (33,559,089 samples, 0.02%)</title><rect x="93.3730%" y="997" width="0.0206%" height="15" fill="rgb(218,219,45)" fg:x="151951335773" fg:w="33559089"/><text x="93.6230%" y="1007.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (31,596,938 samples, 0.02%)</title><rect x="93.3742%" y="981" width="0.0194%" height="15" fill="rgb(216,102,54)" fg:x="151953297924" fg:w="31596938"/><text x="93.6242%" y="991.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (24,268,623 samples, 0.01%)</title><rect x="93.3787%" y="965" width="0.0149%" height="15" fill="rgb(250,228,7)" fg:x="151960626239" fg:w="24268623"/><text x="93.6287%" y="975.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::_{{closure}} (22,214,975 samples, 0.01%)</title><rect x="93.3800%" y="949" width="0.0137%" height="15" fill="rgb(226,125,25)" fg:x="151962679887" fg:w="22214975"/><text x="93.6300%" y="959.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (136,161,045,765 samples, 83.67%)</title><rect x="9.7265%" y="1045" width="83.6700%" height="15" fill="rgb(224,165,27)" fg:x="15828497688" fg:w="136161045765"/><text x="9.9765%" y="1055.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (135,962,732,247 samples, 83.55%)</title><rect x="9.8484%" y="1029" width="83.5481%" height="15" fill="rgb(233,86,3)" fg:x="16026811206" fg:w="135962732247"/><text x="10.0984%" y="1039.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>std::panicking::try::do_call (136,454,143,769 samples, 83.85%)</title><rect x="9.5912%" y="1061" width="83.8501%" height="15" fill="rgb(228,116,20)" fg:x="15608346909" fg:w="136454143769"/><text x="9.8412%" y="1071.50">std::panicking::try::do_call</text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::take (70,778,130 samples, 0.04%)</title><rect x="93.3978%" y="1045" width="0.0435%" height="15" fill="rgb(209,192,17)" fg:x="151991712548" fg:w="70778130"/><text x="93.6478%" y="1055.50"></text></g><g><title>core::ptr::read (70,778,130 samples, 0.04%)</title><rect x="93.3978%" y="1029" width="0.0435%" height="15" fill="rgb(224,88,34)" fg:x="151991712548" fg:w="70778130"/><text x="93.6478%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned (70,778,130 samples, 0.04%)</title><rect x="93.3978%" y="1013" width="0.0435%" height="15" fill="rgb(233,38,6)" fg:x="151991712548" fg:w="70778130"/><text x="93.6478%" y="1023.50"></text></g><g><title>__rust_try (136,569,831,698 samples, 83.92%)</title><rect x="9.5214%" y="1077" width="83.9212%" height="15" fill="rgb(212,59,30)" fg:x="15494676381" fg:w="136569831698"/><text x="9.7714%" y="1087.50">__rust_try</text></g><g><title>tokio::runtime::task::harness::poll_future (137,328,574,176 samples, 84.39%)</title><rect x="9.0871%" y="1125" width="84.3874%" height="15" fill="rgb(213,80,3)" fg:x="14787923012" fg:w="137328574176"/><text x="9.3371%" y="1135.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (136,856,544,866 samples, 84.10%)</title><rect x="9.3771%" y="1109" width="84.0974%" height="15" fill="rgb(251,178,7)" fg:x="15259952322" fg:w="136856544866"/><text x="9.6271%" y="1119.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (136,811,049,081 samples, 84.07%)</title><rect x="9.4051%" y="1093" width="84.0694%" height="15" fill="rgb(213,154,26)" fg:x="15305448107" fg:w="136811049081"/><text x="9.6551%" y="1103.50">std::panicking::try</text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (51,989,109 samples, 0.03%)</title><rect x="93.4426%" y="1077" width="0.0319%" height="15" fill="rgb(238,165,49)" fg:x="152064508079" fg:w="51989109"/><text x="93.6926%" y="1087.50"></text></g><g><title>__memmove_avx_unaligned (47,292,533 samples, 0.03%)</title><rect x="93.4455%" y="1061" width="0.0291%" height="15" fill="rgb(248,91,46)" fg:x="152069204655" fg:w="47292533"/><text x="93.6955%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (135,394,849 samples, 0.08%)</title><rect x="93.6566%" y="1093" width="0.0832%" height="15" fill="rgb(244,21,52)" fg:x="152412830786" fg:w="135394849"/><text x="93.9066%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (117,257,784 samples, 0.07%)</title><rect x="93.6678%" y="1077" width="0.0721%" height="15" fill="rgb(247,122,20)" fg:x="152430967851" fg:w="117257784"/><text x="93.9178%" y="1087.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (59,102,873 samples, 0.04%)</title><rect x="93.7892%" y="1077" width="0.0363%" height="15" fill="rgb(218,27,9)" fg:x="152628646583" fg:w="59102873"/><text x="94.0392%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::State::load (251,006,809 samples, 0.15%)</title><rect x="93.7398%" y="1093" width="0.1542%" height="15" fill="rgb(246,7,6)" fg:x="152548225635" fg:w="251006809"/><text x="93.9898%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (111,482,988 samples, 0.07%)</title><rect x="93.8255%" y="1077" width="0.0685%" height="15" fill="rgb(227,135,54)" fg:x="152687749456" fg:w="111482988"/><text x="94.0755%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (88,166,551 samples, 0.05%)</title><rect x="93.8399%" y="1061" width="0.0542%" height="15" fill="rgb(247,14,11)" fg:x="152711065893" fg:w="88166551"/><text x="94.0899%" y="1071.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_running (19,252,744 samples, 0.01%)</title><rect x="94.0234%" y="1077" width="0.0118%" height="15" fill="rgb(206,149,34)" fg:x="153009656879" fg:w="19252744"/><text x="94.2734%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_dec (117,283,730 samples, 0.07%)</title><rect x="94.0399%" y="1077" width="0.0721%" height="15" fill="rgb(227,228,4)" fg:x="153036506906" fg:w="117283730"/><text x="94.2899%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_count (20,187,986 samples, 0.01%)</title><rect x="94.0995%" y="1061" width="0.0124%" height="15" fill="rgb(238,218,28)" fg:x="153133602650" fg:w="20187986"/><text x="94.3495%" y="1071.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (1,061,128,644 samples, 0.65%)</title><rect x="93.4745%" y="1125" width="0.6521%" height="15" fill="rgb(252,86,40)" fg:x="152116497188" fg:w="1061128644"/><text x="93.7245%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (940,682,244 samples, 0.58%)</title><rect x="93.5485%" y="1109" width="0.5780%" height="15" fill="rgb(251,225,11)" fg:x="152236943588" fg:w="940682244"/><text x="93.7985%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::_{{closure}} (378,393,388 samples, 0.23%)</title><rect x="93.8941%" y="1093" width="0.2325%" height="15" fill="rgb(206,46,49)" fg:x="152799232444" fg:w="378393388"/><text x="94.1441%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::unset_running (23,835,196 samples, 0.01%)</title><rect x="94.1119%" y="1077" width="0.0146%" height="15" fill="rgb(245,128,24)" fg:x="153153790636" fg:w="23835196"/><text x="94.3619%" y="1087.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (29,011,654 samples, 0.02%)</title><rect x="94.2911%" y="1093" width="0.0178%" height="15" fill="rgb(219,177,34)" fg:x="153445360780" fg:w="29011654"/><text x="94.5411%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (145,908,915 samples, 0.09%)</title><rect x="94.3089%" y="1093" width="0.0897%" height="15" fill="rgb(218,60,48)" fg:x="153474372434" fg:w="145908915"/><text x="94.5589%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (118,291,489 samples, 0.07%)</title><rect x="94.3259%" y="1077" width="0.0727%" height="15" fill="rgb(221,11,5)" fg:x="153501989860" fg:w="118291489"/><text x="94.5759%" y="1087.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (35,616,080 samples, 0.02%)</title><rect x="94.4171%" y="1077" width="0.0219%" height="15" fill="rgb(220,148,13)" fg:x="153650397509" fg:w="35616080"/><text x="94.6671%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::State::load (154,701,518 samples, 0.10%)</title><rect x="94.3986%" y="1093" width="0.0951%" height="15" fill="rgb(210,16,3)" fg:x="153620281349" fg:w="154701518"/><text x="94.6486%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (88,969,278 samples, 0.05%)</title><rect x="94.4390%" y="1077" width="0.0547%" height="15" fill="rgb(236,80,2)" fg:x="153686013589" fg:w="88969278"/><text x="94.6890%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (74,034,647 samples, 0.05%)</title><rect x="94.4482%" y="1061" width="0.0455%" height="15" fill="rgb(239,129,19)" fg:x="153700948220" fg:w="74034647"/><text x="94.6982%" y="1071.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_cancelled (19,469,818 samples, 0.01%)</title><rect x="94.6192%" y="1077" width="0.0120%" height="15" fill="rgb(220,106,35)" fg:x="153979380122" fg:w="19469818"/><text x="94.8692%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_idle (38,227,964 samples, 0.02%)</title><rect x="94.6312%" y="1077" width="0.0235%" height="15" fill="rgb(252,139,45)" fg:x="153998849940" fg:w="38227964"/><text x="94.8812%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_notified (25,752,242 samples, 0.02%)</title><rect x="94.6547%" y="1077" width="0.0158%" height="15" fill="rgb(229,8,36)" fg:x="154037077904" fg:w="25752242"/><text x="94.9047%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::set_running (26,694,969 samples, 0.02%)</title><rect x="94.6705%" y="1077" width="0.0164%" height="15" fill="rgb(230,126,33)" fg:x="154062830146" fg:w="26694969"/><text x="94.9205%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (938,176,187 samples, 0.58%)</title><rect x="94.1266%" y="1125" width="0.5765%" height="15" fill="rgb(239,140,21)" fg:x="153177625832" fg:w="938176187"/><text x="94.3766%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (879,261,300 samples, 0.54%)</title><rect x="94.1628%" y="1109" width="0.5403%" height="15" fill="rgb(254,104,9)" fg:x="153236540719" fg:w="879261300"/><text x="94.4128%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::_{{closure}} (340,819,152 samples, 0.21%)</title><rect x="94.4936%" y="1093" width="0.2094%" height="15" fill="rgb(239,52,14)" fg:x="153774982867" fg:w="340819152"/><text x="94.7436%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::unset_notified (26,276,904 samples, 0.02%)</title><rect x="94.6869%" y="1077" width="0.0161%" height="15" fill="rgb(208,227,44)" fg:x="154089525115" fg:w="26276904"/><text x="94.9369%" y="1087.50"></text></g><g><title>core::task::wake::Waker::from_raw (48,017,026 samples, 0.03%)</title><rect x="94.7609%" y="1109" width="0.0295%" height="15" fill="rgb(246,18,19)" fg:x="154209910449" fg:w="48017026"/><text x="95.0109%" y="1119.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (141,715,552,561 samples, 87.08%)</title><rect x="7.7442%" y="1205" width="87.0832%" height="15" fill="rgb(235,228,25)" fg:x="12602657538" fg:w="141715552561"/><text x="7.9942%" y="1215.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (141,468,219,706 samples, 86.93%)</title><rect x="7.8962%" y="1189" width="86.9312%" height="15" fill="rgb(240,156,20)" fg:x="12849990393" fg:w="141468219706"/><text x="8.1462%" y="1199.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (141,261,802,426 samples, 86.80%)</title><rect x="8.0231%" y="1173" width="86.8044%" height="15" fill="rgb(224,8,20)" fg:x="13056407673" fg:w="141261802426"/><text x="8.2731%" y="1183.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (141,034,387,398 samples, 86.66%)</title><rect x="8.1628%" y="1157" width="86.6646%" height="15" fill="rgb(214,12,52)" fg:x="13283822701" fg:w="141034387398"/><text x="8.4128%" y="1167.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (140,742,832,164 samples, 86.49%)</title><rect x="8.3420%" y="1141" width="86.4855%" height="15" fill="rgb(211,220,47)" fg:x="13575377935" fg:w="140742832164"/><text x="8.5920%" y="1151.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::waker::waker_ref (202,408,080 samples, 0.12%)</title><rect x="94.7031%" y="1125" width="0.1244%" height="15" fill="rgb(250,173,5)" fg:x="154115802019" fg:w="202408080"/><text x="94.9531%" y="1135.50"></text></g><g><title>tokio::runtime::task::waker::raw_waker (60,282,624 samples, 0.04%)</title><rect x="94.7904%" y="1109" width="0.0370%" height="15" fill="rgb(250,125,52)" fg:x="154257927475" fg:w="60282624"/><text x="95.0404%" y="1119.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::assert_owner (17,834,965 samples, 0.01%)</title><rect x="94.8275%" y="1205" width="0.0110%" height="15" fill="rgb(209,133,18)" fg:x="154318210099" fg:w="17834965"/><text x="95.0775%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (147,277,927,876 samples, 90.50%)</title><rect x="4.3439%" y="1269" width="90.5013%" height="15" fill="rgb(216,173,22)" fg:x="7069041791" fg:w="147277927876"/><text x="4.5939%" y="1279.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::task::coop::budget (144,601,038,525 samples, 88.86%)</title><rect x="5.9888%" y="1253" width="88.8563%" height="15" fill="rgb(205,3,22)" fg:x="9745931142" fg:w="144601038525"/><text x="6.2388%" y="1263.50">tokio::task::coop::budget</text></g><g><title>tokio::task::coop::with_budget (144,509,914,281 samples, 88.80%)</title><rect x="6.0448%" y="1237" width="88.8003%" height="15" fill="rgb(248,22,20)" fg:x="9837055386" fg:w="144509914281"/><text x="6.2948%" y="1247.50">tokio::task::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (143,193,892,380 samples, 87.99%)</title><rect x="6.8535%" y="1221" width="87.9916%" height="15" fill="rgb(233,6,29)" fg:x="11153077287" fg:w="143193892380"/><text x="7.1035%" y="1231.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}}</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18,351,840 samples, 0.01%)</title><rect x="95.0131%" y="1253" width="0.0113%" height="15" fill="rgb(240,22,54)" fg:x="154620361317" fg:w="18351840"/><text x="95.2631%" y="1263.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33,574,052 samples, 0.02%)</title><rect x="95.0257%" y="1253" width="0.0206%" height="15" fill="rgb(231,133,32)" fg:x="154640832335" fg:w="33574052"/><text x="95.2757%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (29,731,174 samples, 0.02%)</title><rect x="95.0281%" y="1237" width="0.0183%" height="15" fill="rgb(248,193,4)" fg:x="154644675213" fg:w="29731174"/><text x="95.2781%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (28,520,115 samples, 0.02%)</title><rect x="95.0490%" y="1253" width="0.0175%" height="15" fill="rgb(211,178,46)" fg:x="154678680320" fg:w="28520115"/><text x="95.2990%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (102,488,233 samples, 0.06%)</title><rect x="95.0665%" y="1253" width="0.0630%" height="15" fill="rgb(224,5,42)" fg:x="154707200435" fg:w="102488233"/><text x="95.3165%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task::_{{closure}} (44,731,941 samples, 0.03%)</title><rect x="95.1020%" y="1237" width="0.0275%" height="15" fill="rgb(239,176,25)" fg:x="154764956727" fg:w="44731941"/><text x="95.3520%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (44,731,941 samples, 0.03%)</title><rect x="95.1020%" y="1221" width="0.0275%" height="15" fill="rgb(245,187,50)" fg:x="154764956727" fg:w="44731941"/><text x="95.3520%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (44,731,941 samples, 0.03%)</title><rect x="95.1020%" y="1205" width="0.0275%" height="15" fill="rgb(248,24,15)" fg:x="154764956727" fg:w="44731941"/><text x="95.3520%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (39,428,162 samples, 0.02%)</title><rect x="95.1052%" y="1189" width="0.0242%" height="15" fill="rgb(205,166,13)" fg:x="154770260506" fg:w="39428162"/><text x="95.3552%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (39,428,162 samples, 0.02%)</title><rect x="95.1052%" y="1173" width="0.0242%" height="15" fill="rgb(208,114,23)" fg:x="154770260506" fg:w="39428162"/><text x="95.3552%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (24,472,020 samples, 0.02%)</title><rect x="95.1295%" y="1253" width="0.0150%" height="15" fill="rgb(239,127,18)" fg:x="154809688668" fg:w="24472020"/><text x="95.3795%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (18,491,405 samples, 0.01%)</title><rect x="95.1331%" y="1237" width="0.0114%" height="15" fill="rgb(219,154,28)" fg:x="154815669283" fg:w="18491405"/><text x="95.3831%" y="1247.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (18,491,405 samples, 0.01%)</title><rect x="95.1331%" y="1221" width="0.0114%" height="15" fill="rgb(225,157,23)" fg:x="154815669283" fg:w="18491405"/><text x="95.3831%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (18,491,405 samples, 0.01%)</title><rect x="95.1331%" y="1205" width="0.0114%" height="15" fill="rgb(219,8,6)" fg:x="154815669283" fg:w="18491405"/><text x="95.3831%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (24,160,338 samples, 0.01%)</title><rect x="95.1445%" y="1253" width="0.0148%" height="15" fill="rgb(212,47,6)" fg:x="154834160688" fg:w="24160338"/><text x="95.3945%" y="1263.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (24,160,338 samples, 0.01%)</title><rect x="95.1445%" y="1237" width="0.0148%" height="15" fill="rgb(224,190,4)" fg:x="154834160688" fg:w="24160338"/><text x="95.3945%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (20,231,361 samples, 0.01%)</title><rect x="95.1469%" y="1221" width="0.0124%" height="15" fill="rgb(239,183,29)" fg:x="154838089665" fg:w="20231361"/><text x="95.3969%" y="1231.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (17,298,212 samples, 0.01%)</title><rect x="95.1487%" y="1205" width="0.0106%" height="15" fill="rgb(213,57,7)" fg:x="154841022814" fg:w="17298212"/><text x="95.3987%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (356,029,794 samples, 0.22%)</title><rect x="95.2067%" y="1189" width="0.2188%" height="15" fill="rgb(216,148,1)" fg:x="154935364959" fg:w="356029794"/><text x="95.4567%" y="1199.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::get_queue_next::_{{closure}} (356,029,794 samples, 0.22%)</title><rect x="95.2067%" y="1173" width="0.2188%" height="15" fill="rgb(236,182,29)" fg:x="154935364959" fg:w="356029794"/><text x="95.4567%" y="1183.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::get_queue_next (376,084,466 samples, 0.23%)</title><rect x="95.2045%" y="1205" width="0.2311%" height="15" fill="rgb(244,120,48)" fg:x="154931811421" fg:w="376084466"/><text x="95.4545%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::header (16,501,134 samples, 0.01%)</title><rect x="95.4255%" y="1189" width="0.0101%" height="15" fill="rgb(206,71,34)" fg:x="155291394753" fg:w="16501134"/><text x="95.6755%" y="1199.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (440,639,588 samples, 0.27%)</title><rect x="95.1760%" y="1237" width="0.2708%" height="15" fill="rgb(242,32,6)" fg:x="154885424991" fg:w="440639588"/><text x="95.4260%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (428,213,305 samples, 0.26%)</title><rect x="95.1836%" y="1221" width="0.2631%" height="15" fill="rgb(241,35,3)" fg:x="154897851274" fg:w="428213305"/><text x="95.4336%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::set_queue_next (18,168,692 samples, 0.01%)</title><rect x="95.4356%" y="1205" width="0.0112%" height="15" fill="rgb(222,62,19)" fg:x="155307895887" fg:w="18168692"/><text x="95.6856%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back (506,915,956 samples, 0.31%)</title><rect x="95.1646%" y="1253" width="0.3115%" height="15" fill="rgb(223,110,41)" fg:x="154866843335" fg:w="506915956"/><text x="95.4146%" y="1263.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (31,076,253 samples, 0.02%)</title><rect x="95.4570%" y="1237" width="0.0191%" height="15" fill="rgb(208,224,4)" fg:x="155342683038" fg:w="31076253"/><text x="95.7070%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back::_{{closure}} (24,516,935 samples, 0.02%)</title><rect x="95.4610%" y="1221" width="0.0151%" height="15" fill="rgb(241,137,19)" fg:x="155349242356" fg:w="24516935"/><text x="95.7110%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (22,370,029 samples, 0.01%)</title><rect x="95.4812%" y="1221" width="0.0137%" height="15" fill="rgb(244,24,17)" fg:x="155382148723" fg:w="22370029"/><text x="95.7312%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (22,370,029 samples, 0.01%)</title><rect x="95.4812%" y="1205" width="0.0137%" height="15" fill="rgb(245,178,49)" fg:x="155382148723" fg:w="22370029"/><text x="95.7312%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::remaining_slots (35,813,184 samples, 0.02%)</title><rect x="95.4761%" y="1253" width="0.0220%" height="15" fill="rgb(219,160,38)" fg:x="155373759291" fg:w="35813184"/><text x="95.7261%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::remaining_slots (32,210,090 samples, 0.02%)</title><rect x="95.4783%" y="1237" width="0.0198%" height="15" fill="rgb(228,137,14)" fg:x="155377362385" fg:w="32210090"/><text x="95.7283%" y="1247.50"></text></g><g><title>&lt;tokio::loom::std::parking_lot::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (32,543,921 samples, 0.02%)</title><rect x="95.5734%" y="1237" width="0.0200%" height="15" fill="rgb(237,134,11)" fg:x="155532182059" fg:w="32543921"/><text x="95.8234%" y="1247.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (16,296,982 samples, 0.01%)</title><rect x="95.5834%" y="1221" width="0.0100%" height="15" fill="rgb(211,126,44)" fg:x="155548428998" fg:w="16296982"/><text x="95.8334%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (80,940,797 samples, 0.05%)</title><rect x="95.6929%" y="1173" width="0.0497%" height="15" fill="rgb(226,171,33)" fg:x="155726558523" fg:w="80940797"/><text x="95.9429%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (57,823,710 samples, 0.04%)</title><rect x="95.7071%" y="1157" width="0.0355%" height="15" fill="rgb(253,99,13)" fg:x="155749675610" fg:w="57823710"/><text x="95.9571%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (44,177,719 samples, 0.03%)</title><rect x="95.7675%" y="1141" width="0.0271%" height="15" fill="rgb(244,48,7)" fg:x="155848031770" fg:w="44177719"/><text x="96.0175%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (42,293,127 samples, 0.03%)</title><rect x="95.7687%" y="1125" width="0.0260%" height="15" fill="rgb(244,217,54)" fg:x="155849916362" fg:w="42293127"/><text x="96.0187%" y="1135.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (42,293,127 samples, 0.03%)</title><rect x="95.7687%" y="1109" width="0.0260%" height="15" fill="rgb(224,15,18)" fg:x="155849916362" fg:w="42293127"/><text x="96.0187%" y="1119.50"></text></g><g><title>__vdso_clock_gettime (34,294,520 samples, 0.02%)</title><rect x="95.7736%" y="1093" width="0.0211%" height="15" fill="rgb(244,99,12)" fg:x="155857914969" fg:w="34294520"/><text x="96.0236%" y="1103.50"></text></g><g><title>[unknown] (34,294,520 samples, 0.02%)</title><rect x="95.7736%" y="1077" width="0.0211%" height="15" fill="rgb(233,226,8)" fg:x="155857914969" fg:w="34294520"/><text x="96.0236%" y="1087.50"></text></g><g><title>[unknown] (31,287,922 samples, 0.02%)</title><rect x="95.7754%" y="1061" width="0.0192%" height="15" fill="rgb(229,211,3)" fg:x="155860921567" fg:w="31287922"/><text x="96.0254%" y="1071.50"></text></g><g><title>[unknown] (28,975,936 samples, 0.02%)</title><rect x="95.7769%" y="1045" width="0.0178%" height="15" fill="rgb(216,140,21)" fg:x="155863233553" fg:w="28975936"/><text x="96.0269%" y="1055.50"></text></g><g><title>[unknown] (23,747,899 samples, 0.01%)</title><rect x="95.7801%" y="1029" width="0.0146%" height="15" fill="rgb(234,122,30)" fg:x="155868461590" fg:w="23747899"/><text x="96.0301%" y="1039.50"></text></g><g><title>[unknown] (19,432,095 samples, 0.01%)</title><rect x="95.7827%" y="1013" width="0.0119%" height="15" fill="rgb(236,25,46)" fg:x="155872777394" fg:w="19432095"/><text x="96.0327%" y="1023.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (103,471,620 samples, 0.06%)</title><rect x="95.7426%" y="1173" width="0.0636%" height="15" fill="rgb(217,52,54)" fg:x="155807499320" fg:w="103471620"/><text x="95.9926%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (99,456,236 samples, 0.06%)</title><rect x="95.7451%" y="1157" width="0.0611%" height="15" fill="rgb(222,29,26)" fg:x="155811514704" fg:w="99456236"/><text x="95.9951%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (354,111,907 samples, 0.22%)</title><rect x="95.5934%" y="1237" width="0.2176%" height="15" fill="rgb(216,177,29)" fg:x="155564725980" fg:w="354111907"/><text x="95.8434%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (323,912,646 samples, 0.20%)</title><rect x="95.6120%" y="1221" width="0.1990%" height="15" fill="rgb(247,136,51)" fg:x="155594925241" fg:w="323912646"/><text x="95.8620%" y="1231.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (281,869,673 samples, 0.17%)</title><rect x="95.6378%" y="1205" width="0.1732%" height="15" fill="rgb(231,47,47)" fg:x="155636968214" fg:w="281869673"/><text x="95.8878%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (239,698,022 samples, 0.15%)</title><rect x="95.6637%" y="1189" width="0.1473%" height="15" fill="rgb(211,192,36)" fg:x="155679139865" fg:w="239698022"/><text x="95.9137%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (200,222,785 samples, 0.12%)</title><rect x="95.8605%" y="1189" width="0.1230%" height="15" fill="rgb(229,156,32)" fg:x="155999274752" fg:w="200222785"/><text x="96.1105%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (175,364,958 samples, 0.11%)</title><rect x="95.8757%" y="1173" width="0.1078%" height="15" fill="rgb(248,213,20)" fg:x="156024132579" fg:w="175364958"/><text x="96.1257%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (23,119,154 samples, 0.01%)</title><rect x="95.9941%" y="1173" width="0.0142%" height="15" fill="rgb(217,64,7)" fg:x="156216728553" fg:w="23119154"/><text x="96.2441%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (20,138,763 samples, 0.01%)</title><rect x="95.9959%" y="1157" width="0.0124%" height="15" fill="rgb(232,142,8)" fg:x="156219708944" fg:w="20138763"/><text x="96.2459%" y="1167.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (24,772,220 samples, 0.02%)</title><rect x="96.0296%" y="1125" width="0.0152%" height="15" fill="rgb(224,92,44)" fg:x="156274492772" fg:w="24772220"/><text x="96.2796%" y="1135.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (21,707,985 samples, 0.01%)</title><rect x="96.0315%" y="1109" width="0.0133%" height="15" fill="rgb(214,169,17)" fg:x="156277557007" fg:w="21707985"/><text x="96.2815%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (18,602,948 samples, 0.01%)</title><rect x="96.0695%" y="1093" width="0.0114%" height="15" fill="rgb(210,59,37)" fg:x="156339496430" fg:w="18602948"/><text x="96.3195%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (18,602,948 samples, 0.01%)</title><rect x="96.0695%" y="1077" width="0.0114%" height="15" fill="rgb(214,116,48)" fg:x="156339496430" fg:w="18602948"/><text x="96.3195%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (62,538,083 samples, 0.04%)</title><rect x="96.0593%" y="1125" width="0.0384%" height="15" fill="rgb(244,191,6)" fg:x="156322814629" fg:w="62538083"/><text x="96.3093%" y="1135.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (49,489,777 samples, 0.03%)</title><rect x="96.0673%" y="1109" width="0.0304%" height="15" fill="rgb(241,50,52)" fg:x="156335862935" fg:w="49489777"/><text x="96.3173%" y="1119.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (27,253,334 samples, 0.02%)</title><rect x="96.0810%" y="1093" width="0.0167%" height="15" fill="rgb(236,75,39)" fg:x="156358099378" fg:w="27253334"/><text x="96.3310%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (141,087,842 samples, 0.09%)</title><rect x="96.0149%" y="1141" width="0.0867%" height="15" fill="rgb(236,99,0)" fg:x="156250529518" fg:w="141087842"/><text x="96.2649%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::park (167,278,123 samples, 0.10%)</title><rect x="96.0083%" y="1173" width="0.1028%" height="15" fill="rgb(207,202,15)" fg:x="156239847707" fg:w="167278123"/><text x="96.2583%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (167,278,123 samples, 0.10%)</title><rect x="96.0083%" y="1157" width="0.1028%" height="15" fill="rgb(233,207,14)" fg:x="156239847707" fg:w="167278123"/><text x="96.2583%" y="1167.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (63,519,183 samples, 0.04%)</title><rect x="96.1152%" y="1157" width="0.0390%" height="15" fill="rgb(226,27,51)" fg:x="156413779552" fg:w="63519183"/><text x="96.3652%" y="1167.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (36,276,720 samples, 0.02%)</title><rect x="96.1319%" y="1141" width="0.0223%" height="15" fill="rgb(206,104,42)" fg:x="156441022015" fg:w="36276720"/><text x="96.3819%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (27,771,481 samples, 0.02%)</title><rect x="96.1371%" y="1125" width="0.0171%" height="15" fill="rgb(212,225,4)" fg:x="156449527254" fg:w="27771481"/><text x="96.3871%" y="1135.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (18,604,176 samples, 0.01%)</title><rect x="96.1428%" y="1109" width="0.0114%" height="15" fill="rgb(233,96,42)" fg:x="156458694559" fg:w="18604176"/><text x="96.3928%" y="1119.50"></text></g><g><title>__sched_yield (40,568,922 samples, 0.02%)</title><rect x="96.1542%" y="1141" width="0.0249%" height="15" fill="rgb(229,21,32)" fg:x="156477298735" fg:w="40568922"/><text x="96.4042%" y="1151.50"></text></g><g><title>[unknown] (38,995,244 samples, 0.02%)</title><rect x="96.1552%" y="1125" width="0.0240%" height="15" fill="rgb(226,216,24)" fg:x="156478872413" fg:w="38995244"/><text x="96.4052%" y="1135.50"></text></g><g><title>[unknown] (38,995,244 samples, 0.02%)</title><rect x="96.1552%" y="1109" width="0.0240%" height="15" fill="rgb(221,163,17)" fg:x="156478872413" fg:w="38995244"/><text x="96.4052%" y="1119.50"></text></g><g><title>[unknown] (31,111,556 samples, 0.02%)</title><rect x="96.1600%" y="1093" width="0.0191%" height="15" fill="rgb(216,216,42)" fg:x="156486756101" fg:w="31111556"/><text x="96.4100%" y="1103.50"></text></g><g><title>[unknown] (26,980,221 samples, 0.02%)</title><rect x="96.1625%" y="1077" width="0.0166%" height="15" fill="rgb(240,118,7)" fg:x="156490887436" fg:w="26980221"/><text x="96.4125%" y="1087.50"></text></g><g><title>[unknown] (23,157,314 samples, 0.01%)</title><rect x="96.1649%" y="1061" width="0.0142%" height="15" fill="rgb(221,67,37)" fg:x="156494710343" fg:w="23157314"/><text x="96.4149%" y="1071.50"></text></g><g><title>[unknown] (17,316,252 samples, 0.01%)</title><rect x="96.1685%" y="1045" width="0.0106%" height="15" fill="rgb(241,32,44)" fg:x="156500551405" fg:w="17316252"/><text x="96.4185%" y="1055.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (324,663,833 samples, 0.20%)</title><rect x="95.9835%" y="1189" width="0.1995%" height="15" fill="rgb(235,204,43)" fg:x="156199497537" fg:w="324663833"/><text x="96.2335%" y="1199.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (113,342,295 samples, 0.07%)</title><rect x="96.1133%" y="1173" width="0.0696%" height="15" fill="rgb(213,116,10)" fg:x="156410819075" fg:w="113342295"/><text x="96.3633%" y="1183.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (46,862,635 samples, 0.03%)</title><rect x="96.1542%" y="1157" width="0.0288%" height="15" fill="rgb(239,15,48)" fg:x="156477298735" fg:w="46862635"/><text x="96.4042%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (570,726,202 samples, 0.35%)</title><rect x="95.8411%" y="1205" width="0.3507%" height="15" fill="rgb(207,123,36)" fg:x="155967759733" fg:w="570726202"/><text x="96.0911%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (647,156,866 samples, 0.40%)</title><rect x="95.8110%" y="1237" width="0.3977%" height="15" fill="rgb(209,103,30)" fg:x="155918837887" fg:w="647156866"/><text x="96.0610%" y="1247.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (642,117,141 samples, 0.39%)</title><rect x="95.8141%" y="1221" width="0.3946%" height="15" fill="rgb(238,100,19)" fg:x="155923877612" fg:w="642117141"/><text x="96.0641%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::make_guard_unchecked (27,508,818 samples, 0.02%)</title><rect x="96.1918%" y="1205" width="0.0169%" height="15" fill="rgb(244,30,14)" fg:x="156538485935" fg:w="27508818"/><text x="96.4418%" y="1215.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (27,585,426 samples, 0.02%)</title><rect x="96.2285%" y="1205" width="0.0170%" height="15" fill="rgb(249,174,6)" fg:x="156598163849" fg:w="27585426"/><text x="96.4785%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (152,739,798 samples, 0.09%)</title><rect x="96.2087%" y="1237" width="0.0939%" height="15" fill="rgb(235,213,41)" fg:x="156565994753" fg:w="152739798"/><text x="96.4587%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (134,225,500 samples, 0.08%)</title><rect x="96.2201%" y="1221" width="0.0825%" height="15" fill="rgb(213,118,6)" fg:x="156584509051" fg:w="134225500"/><text x="96.4701%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (92,985,276 samples, 0.06%)</title><rect x="96.2454%" y="1205" width="0.0571%" height="15" fill="rgb(235,44,51)" fg:x="156625749275" fg:w="92985276"/><text x="96.4954%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (90,792,673 samples, 0.06%)</title><rect x="96.2468%" y="1189" width="0.0558%" height="15" fill="rgb(217,9,53)" fg:x="156627941878" fg:w="90792673"/><text x="96.4968%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (22,509,850 samples, 0.01%)</title><rect x="96.3811%" y="1205" width="0.0138%" height="15" fill="rgb(237,172,34)" fg:x="156846582141" fg:w="22509850"/><text x="96.6311%" y="1215.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (39,341,407 samples, 0.02%)</title><rect x="96.4466%" y="1189" width="0.0242%" height="15" fill="rgb(206,206,11)" fg:x="156953182072" fg:w="39341407"/><text x="96.6966%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (18,272,430 samples, 0.01%)</title><rect x="96.4708%" y="1189" width="0.0112%" height="15" fill="rgb(214,149,29)" fg:x="156992523479" fg:w="18272430"/><text x="96.7208%" y="1199.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::from_raw (57,592,401 samples, 0.04%)</title><rect x="96.4820%" y="1189" width="0.0354%" height="15" fill="rgb(208,123,3)" fg:x="157010795909" fg:w="57592401"/><text x="96.7320%" y="1199.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::new (40,068,340 samples, 0.02%)</title><rect x="96.4928%" y="1173" width="0.0246%" height="15" fill="rgb(229,126,4)" fg:x="157028319970" fg:w="40068340"/><text x="96.7428%" y="1183.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (444,316,916 samples, 0.27%)</title><rect x="96.5443%" y="1173" width="0.2730%" height="15" fill="rgb(222,92,36)" fg:x="157112102287" fg:w="444316916"/><text x="96.7943%" y="1183.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::get_queue_next::_{{closure}} (430,187,118 samples, 0.26%)</title><rect x="96.5530%" y="1157" width="0.2643%" height="15" fill="rgb(216,39,41)" fg:x="157126232085" fg:w="430187118"/><text x="96.8030%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::get_queue_next (502,818,314 samples, 0.31%)</title><rect x="96.5174%" y="1189" width="0.3090%" height="15" fill="rgb(253,127,28)" fg:x="157068388310" fg:w="502818314"/><text x="96.7674%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::Header::set_next (46,658,206 samples, 0.03%)</title><rect x="96.8477%" y="1173" width="0.0287%" height="15" fill="rgb(249,152,51)" fg:x="157605874451" fg:w="46658206"/><text x="97.0977%" y="1183.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (28,804,590 samples, 0.02%)</title><rect x="96.8587%" y="1157" width="0.0177%" height="15" fill="rgb(209,123,42)" fg:x="157623728067" fg:w="28804590"/><text x="97.1087%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::Header::set_next::_{{closure}} (20,837,315 samples, 0.01%)</title><rect x="96.8636%" y="1141" width="0.0128%" height="15" fill="rgb(241,118,22)" fg:x="157631695342" fg:w="20837315"/><text x="97.1136%" y="1151.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (881,803,044 samples, 0.54%)</title><rect x="96.3369%" y="1221" width="0.5419%" height="15" fill="rgb(208,25,7)" fg:x="156774693733" fg:w="881803044"/><text x="96.5869%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (787,404,786 samples, 0.48%)</title><rect x="96.3950%" y="1205" width="0.4839%" height="15" fill="rgb(243,144,39)" fg:x="156869091991" fg:w="787404786"/><text x="96.6450%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::set_queue_next (85,290,153 samples, 0.05%)</title><rect x="96.8264%" y="1189" width="0.0524%" height="15" fill="rgb(250,50,5)" fg:x="157571206624" fg:w="85290153"/><text x="97.0764%" y="1199.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (65,775,751 samples, 0.04%)</title><rect x="96.9530%" y="1189" width="0.0404%" height="15" fill="rgb(207,67,11)" fg:x="157777303100" fg:w="65775751"/><text x="97.2030%" y="1199.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (47,724,695 samples, 0.03%)</title><rect x="96.9641%" y="1173" width="0.0293%" height="15" fill="rgb(245,204,40)" fg:x="157795354156" fg:w="47724695"/><text x="97.2141%" y="1183.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (37,261,698 samples, 0.02%)</title><rect x="96.9935%" y="1189" width="0.0229%" height="15" fill="rgb(238,228,24)" fg:x="157843078851" fg:w="37261698"/><text x="97.2435%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::by_ref (30,016,636 samples, 0.02%)</title><rect x="97.0164%" y="1189" width="0.0184%" height="15" fill="rgb(217,116,22)" fg:x="157880340549" fg:w="30016636"/><text x="97.2664%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (272,341,328 samples, 0.17%)</title><rect x="96.8788%" y="1221" width="0.1674%" height="15" fill="rgb(234,98,12)" fg:x="157656496777" fg:w="272341328"/><text x="97.1288%" y="1231.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (207,009,835 samples, 0.13%)</title><rect x="96.9190%" y="1205" width="0.1272%" height="15" fill="rgb(242,170,50)" fg:x="157721828270" fg:w="207009835"/><text x="97.1690%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (18,480,920 samples, 0.01%)</title><rect x="97.0348%" y="1189" width="0.0114%" height="15" fill="rgb(235,7,5)" fg:x="157910357185" fg:w="18480920"/><text x="97.2848%" y="1199.50"></text></g><g><title>core::cmp::min (76,468,975 samples, 0.05%)</title><rect x="97.0888%" y="1205" width="0.0470%" height="15" fill="rgb(241,114,28)" fg:x="157998147177" fg:w="76468975"/><text x="97.3388%" y="1215.50"></text></g><g><title>core::cmp::Ord::min (34,894,776 samples, 0.02%)</title><rect x="97.1143%" y="1189" width="0.0214%" height="15" fill="rgb(246,112,42)" fg:x="158039721376" fg:w="34894776"/><text x="97.3643%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (62,762,678 samples, 0.04%)</title><rect x="97.1357%" y="1205" width="0.0386%" height="15" fill="rgb(248,228,14)" fg:x="158074616152" fg:w="62762678"/><text x="97.3857%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_store (49,664,666 samples, 0.03%)</title><rect x="97.1438%" y="1189" width="0.0305%" height="15" fill="rgb(208,133,18)" fg:x="158087714164" fg:w="49664666"/><text x="97.3938%" y="1199.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::unsync_load (97,002,599 samples, 0.06%)</title><rect x="97.1743%" y="1205" width="0.0596%" height="15" fill="rgb(207,35,49)" fg:x="158137378830" fg:w="97002599"/><text x="97.4243%" y="1215.50"></text></g><g><title>core::ptr::read (37,098,303 samples, 0.02%)</title><rect x="97.2111%" y="1189" width="0.0228%" height="15" fill="rgb(205,68,36)" fg:x="158197283126" fg:w="37098303"/><text x="97.4611%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (2,860,149,571 samples, 1.76%)</title><rect x="95.4981%" y="1253" width="1.7575%" height="15" fill="rgb(245,62,40)" fg:x="155409572475" fg:w="2860149571"/><text x="95.7481%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::pop (1,550,987,495 samples, 0.95%)</title><rect x="96.3026%" y="1237" width="0.9531%" height="15" fill="rgb(228,27,24)" fg:x="156718734551" fg:w="1550987495"/><text x="96.5526%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::pop_n (340,883,941 samples, 0.21%)</title><rect x="97.0462%" y="1221" width="0.2095%" height="15" fill="rgb(253,19,12)" fg:x="157928838105" fg:w="340883941"/><text x="97.2962%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt;::new (35,340,617 samples, 0.02%)</title><rect x="97.2339%" y="1205" width="0.0217%" height="15" fill="rgb(232,28,20)" fg:x="158234381429" fg:w="35340617"/><text x="97.4839%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (29,768,342 samples, 0.02%)</title><rect x="97.3251%" y="1221" width="0.0183%" height="15" fill="rgb(218,35,51)" fg:x="158382835681" fg:w="29768342"/><text x="97.5751%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (96,425,944 samples, 0.06%)</title><rect x="97.5153%" y="1189" width="0.0593%" height="15" fill="rgb(212,90,40)" fg:x="158692235922" fg:w="96425944"/><text x="97.7653%" y="1199.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (40,904,011 samples, 0.03%)</title><rect x="97.5494%" y="1173" width="0.0251%" height="15" fill="rgb(220,172,12)" fg:x="158747757855" fg:w="40904011"/><text x="97.7994%" y="1183.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (40,904,011 samples, 0.03%)</title><rect x="97.5494%" y="1157" width="0.0251%" height="15" fill="rgb(226,159,20)" fg:x="158747757855" fg:w="40904011"/><text x="97.7994%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (181,928,080 samples, 0.11%)</title><rect x="97.5745%" y="1189" width="0.1118%" height="15" fill="rgb(234,205,16)" fg:x="158788661866" fg:w="181928080"/><text x="97.8245%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (161,123,252 samples, 0.10%)</title><rect x="97.5873%" y="1173" width="0.0990%" height="15" fill="rgb(207,9,39)" fg:x="158809466694" fg:w="161123252"/><text x="97.8373%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (109,593,618 samples, 0.07%)</title><rect x="97.6863%" y="1189" width="0.0673%" height="15" fill="rgb(249,143,15)" fg:x="158970589946" fg:w="109593618"/><text x="97.9363%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (87,998,206 samples, 0.05%)</title><rect x="97.6996%" y="1173" width="0.0541%" height="15" fill="rgb(253,133,29)" fg:x="158992185358" fg:w="87998206"/><text x="97.9496%" y="1183.50"></text></g><g><title>tokio::loom::std::atomic_u32::AtomicU32::unsync_load (60,395,146 samples, 0.04%)</title><rect x="97.7537%" y="1189" width="0.0371%" height="15" fill="rgb(221,187,0)" fg:x="159080183564" fg:w="60395146"/><text x="98.0037%" y="1199.50"></text></g><g><title>core::ptr::read (29,029,209 samples, 0.02%)</title><rect x="97.7729%" y="1173" width="0.0178%" height="15" fill="rgb(205,204,26)" fg:x="159111549501" fg:w="29029209"/><text x="98.0229%" y="1183.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (189,130,115 samples, 0.12%)</title><rect x="97.7908%" y="1189" width="0.1162%" height="15" fill="rgb(224,68,54)" fg:x="159140578710" fg:w="189130115"/><text x="98.0408%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop::_{{closure}} (171,823,428 samples, 0.11%)</title><rect x="97.8014%" y="1173" width="0.1056%" height="15" fill="rgb(209,67,4)" fg:x="159157885397" fg:w="171823428"/><text x="98.0514%" y="1183.50"></text></g><g><title>core::ptr::read (159,836,378 samples, 0.10%)</title><rect x="97.8088%" y="1157" width="0.0982%" height="15" fill="rgb(228,229,18)" fg:x="159169872447" fg:w="159836378"/><text x="98.0588%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::pack (55,499,508 samples, 0.03%)</title><rect x="97.9070%" y="1189" width="0.0341%" height="15" fill="rgb(231,89,13)" fg:x="159329708825" fg:w="55499508"/><text x="98.1570%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1,157,156,346 samples, 0.71%)</title><rect x="97.2853%" y="1237" width="0.7111%" height="15" fill="rgb(210,182,18)" fg:x="158318015407" fg:w="1157156346"/><text x="97.5353%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (1,062,567,730 samples, 0.65%)</title><rect x="97.3434%" y="1221" width="0.6529%" height="15" fill="rgb(240,105,2)" fg:x="158412604023" fg:w="1062567730"/><text x="97.5934%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (1,029,872,971 samples, 0.63%)</title><rect x="97.3635%" y="1205" width="0.6328%" height="15" fill="rgb(207,170,50)" fg:x="158445298782" fg:w="1029872971"/><text x="97.6135%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (89,963,420 samples, 0.06%)</title><rect x="97.9411%" y="1189" width="0.0553%" height="15" fill="rgb(232,133,24)" fg:x="159385208333" fg:w="89963420"/><text x="98.1911%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (1,245,079,100 samples, 0.77%)</title><rect x="97.2556%" y="1253" width="0.7651%" height="15" fill="rgb(235,166,27)" fg:x="158269722046" fg:w="1245079100"/><text x="97.5056%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (39,629,393 samples, 0.02%)</title><rect x="97.9964%" y="1237" width="0.0244%" height="15" fill="rgb(209,19,13)" fg:x="159475171753" fg:w="39629393"/><text x="98.2464%" y="1247.50"></text></g><g><title>core::num::&lt;impl u32&gt;::abs_diff (24,517,425 samples, 0.02%)</title><rect x="98.0627%" y="1237" width="0.0151%" height="15" fill="rgb(226,79,39)" fg:x="159583160960" fg:w="24517425"/><text x="98.3127%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (267,672,135 samples, 0.16%)</title><rect x="98.0207%" y="1253" width="0.1645%" height="15" fill="rgb(222,163,10)" fg:x="159514801146" fg:w="267672135"/><text x="98.2707%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (174,794,896 samples, 0.11%)</title><rect x="98.0778%" y="1237" width="0.1074%" height="15" fill="rgb(214,44,19)" fg:x="159607678385" fg:w="174794896"/><text x="98.3278%" y="1247.50"></text></g><g><title>core::cmp::Ord::clamp (85,903,972 samples, 0.05%)</title><rect x="98.1324%" y="1221" width="0.0528%" height="15" fill="rgb(210,217,13)" fg:x="159696569309" fg:w="85903972"/><text x="98.3824%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (5,440,017,962 samples, 3.34%)</title><rect x="94.8451%" y="1269" width="3.3429%" height="15" fill="rgb(237,61,54)" fg:x="154346969667" fg:w="5440017962"/><text x="95.0951%" y="1279.50">tok..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (37,492,506 samples, 0.02%)</title><rect x="98.2794%" y="1221" width="0.0230%" height="15" fill="rgb(226,184,24)" fg:x="159935697701" fg:w="37492506"/><text x="98.5294%" y="1231.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (36,267,027 samples, 0.02%)</title><rect x="98.2801%" y="1205" width="0.0223%" height="15" fill="rgb(223,226,4)" fg:x="159936923180" fg:w="36267027"/><text x="98.5301%" y="1215.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (25,193,158 samples, 0.02%)</title><rect x="98.2869%" y="1189" width="0.0155%" height="15" fill="rgb(210,26,41)" fg:x="159947997049" fg:w="25193158"/><text x="98.5369%" y="1199.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (21,194,776 samples, 0.01%)</title><rect x="98.2894%" y="1173" width="0.0130%" height="15" fill="rgb(220,221,6)" fg:x="159951995431" fg:w="21194776"/><text x="98.5394%" y="1183.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add::precondition_check (21,194,776 samples, 0.01%)</title><rect x="98.2894%" y="1157" width="0.0130%" height="15" fill="rgb(225,89,49)" fg:x="159951995431" fg:w="21194776"/><text x="98.5394%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (19,026,940 samples, 0.01%)</title><rect x="98.3063%" y="1221" width="0.0117%" height="15" fill="rgb(218,70,45)" fg:x="159979489006" fg:w="19026940"/><text x="98.5563%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17,848,972 samples, 0.01%)</title><rect x="98.3070%" y="1205" width="0.0110%" height="15" fill="rgb(238,166,21)" fg:x="159980666974" fg:w="17848972"/><text x="98.5570%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (24,211,132 samples, 0.01%)</title><rect x="98.3180%" y="1221" width="0.0149%" height="15" fill="rgb(224,141,44)" fg:x="159998515946" fg:w="24211132"/><text x="98.5680%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (24,211,132 samples, 0.01%)</title><rect x="98.3180%" y="1205" width="0.0149%" height="15" fill="rgb(230,12,49)" fg:x="159998515946" fg:w="24211132"/><text x="98.5680%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (36,906,864 samples, 0.02%)</title><rect x="98.3328%" y="1221" width="0.0227%" height="15" fill="rgb(212,174,12)" fg:x="160022727078" fg:w="36906864"/><text x="98.5828%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2::_{{closure}} (28,693,003 samples, 0.02%)</title><rect x="98.3379%" y="1205" width="0.0176%" height="15" fill="rgb(246,67,9)" fg:x="160030940939" fg:w="28693003"/><text x="98.5879%" y="1215.50"></text></g><g><title>core::ptr::read (18,072,589 samples, 0.01%)</title><rect x="98.3444%" y="1189" width="0.0111%" height="15" fill="rgb(239,35,23)" fg:x="160041561353" fg:w="18072589"/><text x="98.5944%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (18,016,440 samples, 0.01%)</title><rect x="98.3555%" y="1221" width="0.0111%" height="15" fill="rgb(211,167,0)" fg:x="160059633942" fg:w="18016440"/><text x="98.6055%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2::_{{closure}} (17,991,147 samples, 0.01%)</title><rect x="98.3555%" y="1205" width="0.0111%" height="15" fill="rgb(225,119,45)" fg:x="160059659235" fg:w="17991147"/><text x="98.6055%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (187,570,328 samples, 0.12%)</title><rect x="98.2544%" y="1237" width="0.1153%" height="15" fill="rgb(210,162,6)" fg:x="159895005075" fg:w="187570328"/><text x="98.5044%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (267,150,803 samples, 0.16%)</title><rect x="98.2131%" y="1253" width="0.1642%" height="15" fill="rgb(208,118,35)" fg:x="159827910386" fg:w="267150803"/><text x="98.4631%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (21,673,552 samples, 0.01%)</title><rect x="98.3814%" y="1253" width="0.0133%" height="15" fill="rgb(239,4,53)" fg:x="160101792538" fg:w="21673552"/><text x="98.6314%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (19,853,025 samples, 0.01%)</title><rect x="98.3825%" y="1237" width="0.0122%" height="15" fill="rgb(213,130,21)" fg:x="160103613065" fg:w="19853025"/><text x="98.6325%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (339,155,660 samples, 0.21%)</title><rect x="98.1880%" y="1269" width="0.2084%" height="15" fill="rgb(235,148,0)" fg:x="159786987629" fg:w="339155660"/><text x="98.4380%" y="1279.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (157,636,879,063 samples, 96.87%)</title><rect x="1.5691%" y="1461" width="96.8668%" height="15" fill="rgb(244,224,18)" fg:x="2553520753" fg:w="157636879063"/><text x="1.8191%" y="1471.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (157,636,879,063 samples, 96.87%)</title><rect x="1.5691%" y="1445" width="96.8668%" height="15" fill="rgb(211,214,4)" fg:x="2553520753" fg:w="157636879063"/><text x="1.8191%" y="1455.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (157,636,879,063 samples, 96.87%)</title><rect x="1.5691%" y="1429" width="96.8668%" height="15" fill="rgb(206,119,25)" fg:x="2553520753" fg:w="157636879063"/><text x="1.8191%" y="1439.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (157,636,879,063 samples, 96.87%)</title><rect x="1.5691%" y="1413" width="96.8668%" height="15" fill="rgb(243,93,47)" fg:x="2553520753" fg:w="157636879063"/><text x="1.8191%" y="1423.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (157,636,879,063 samples, 96.87%)</title><rect x="1.5691%" y="1397" width="96.8668%" height="15" fill="rgb(224,194,6)" fg:x="2553520753" fg:w="157636879063"/><text x="1.8191%" y="1407.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (157,636,879,063 samples, 96.87%)</title><rect x="1.5691%" y="1381" width="96.8668%" height="15" fill="rgb(243,229,6)" fg:x="2553520753" fg:w="157636879063"/><text x="1.8191%" y="1391.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (157,636,879,063 samples, 96.87%)</title><rect x="1.5691%" y="1365" width="96.8668%" height="15" fill="rgb(207,23,50)" fg:x="2553520753" fg:w="157636879063"/><text x="1.8191%" y="1375.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (157,636,879,063 samples, 96.87%)</title><rect x="1.5691%" y="1349" width="96.8668%" height="15" fill="rgb(253,192,32)" fg:x="2553520753" fg:w="157636879063"/><text x="1.8191%" y="1359.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (157,636,879,063 samples, 96.87%)</title><rect x="1.5691%" y="1333" width="96.8668%" height="15" fill="rgb(213,21,6)" fg:x="2553520753" fg:w="157636879063"/><text x="1.8191%" y="1343.50">tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (157,636,879,063 samples, 96.87%)</title><rect x="1.5691%" y="1317" width="96.8668%" height="15" fill="rgb(243,151,13)" fg:x="2553520753" fg:w="157636879063"/><text x="1.8191%" y="1327.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (157,636,879,063 samples, 96.87%)</title><rect x="1.5691%" y="1301" width="96.8668%" height="15" fill="rgb(233,165,41)" fg:x="2553520753" fg:w="157636879063"/><text x="1.8191%" y="1311.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (157,636,879,063 samples, 96.87%)</title><rect x="1.5691%" y="1285" width="96.8668%" height="15" fill="rgb(246,176,45)" fg:x="2553520753" fg:w="157636879063"/><text x="1.8191%" y="1295.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tick (64,256,527 samples, 0.04%)</title><rect x="98.3964%" y="1269" width="0.0395%" height="15" fill="rgb(217,170,52)" fg:x="160126143289" fg:w="64256527"/><text x="98.6464%" y="1279.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (157,637,075,444 samples, 96.87%)</title><rect x="1.5690%" y="1733" width="96.8669%" height="15" fill="rgb(214,203,54)" fg:x="2553338061" fg:w="157637075444"/><text x="1.8190%" y="1743.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (157,636,995,100 samples, 96.87%)</title><rect x="1.5691%" y="1717" width="96.8668%" height="15" fill="rgb(248,215,49)" fg:x="2553418405" fg:w="157636995100"/><text x="1.8191%" y="1727.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (157,636,995,100 samples, 96.87%)</title><rect x="1.5691%" y="1701" width="96.8668%" height="15" fill="rgb(208,46,10)" fg:x="2553418405" fg:w="157636995100"/><text x="1.8191%" y="1711.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (157,636,995,100 samples, 96.87%)</title><rect x="1.5691%" y="1685" width="96.8668%" height="15" fill="rgb(254,5,31)" fg:x="2553418405" fg:w="157636995100"/><text x="1.8191%" y="1695.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (157,636,995,099 samples, 96.87%)</title><rect x="1.5691%" y="1669" width="96.8668%" height="15" fill="rgb(222,104,33)" fg:x="2553418406" fg:w="157636995099"/><text x="1.8191%" y="1679.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (157,636,995,099 samples, 96.87%)</title><rect x="1.5691%" y="1653" width="96.8668%" height="15" fill="rgb(248,49,16)" fg:x="2553418406" fg:w="157636995099"/><text x="1.8191%" y="1663.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (157,636,995,099 samples, 96.87%)</title><rect x="1.5691%" y="1637" width="96.8668%" height="15" fill="rgb(232,198,41)" fg:x="2553418406" fg:w="157636995099"/><text x="1.8191%" y="1647.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (157,636,928,248 samples, 96.87%)</title><rect x="1.5691%" y="1621" width="96.8668%" height="15" fill="rgb(214,125,3)" fg:x="2553485257" fg:w="157636928248"/><text x="1.8191%" y="1631.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (157,636,928,248 samples, 96.87%)</title><rect x="1.5691%" y="1605" width="96.8668%" height="15" fill="rgb(229,220,28)" fg:x="2553485257" fg:w="157636928248"/><text x="1.8191%" y="1615.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (157,636,928,248 samples, 96.87%)</title><rect x="1.5691%" y="1589" width="96.8668%" height="15" fill="rgb(222,64,37)" fg:x="2553485257" fg:w="157636928248"/><text x="1.8191%" y="1599.50">std::panicking::try</text></g><g><title>__rust_try (157,636,928,248 samples, 96.87%)</title><rect x="1.5691%" y="1573" width="96.8668%" height="15" fill="rgb(249,184,13)" fg:x="2553485257" fg:w="157636928248"/><text x="1.8191%" y="1583.50">__rust_try</text></g><g><title>std::panicking::try::do_call (157,636,928,248 samples, 96.87%)</title><rect x="1.5691%" y="1557" width="96.8668%" height="15" fill="rgb(252,176,6)" fg:x="2553485257" fg:w="157636928248"/><text x="1.8191%" y="1567.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (157,636,928,248 samples, 96.87%)</title><rect x="1.5691%" y="1541" width="96.8668%" height="15" fill="rgb(228,153,7)" fg:x="2553485257" fg:w="157636928248"/><text x="1.8191%" y="1551.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (157,636,928,248 samples, 96.87%)</title><rect x="1.5691%" y="1525" width="96.8668%" height="15" fill="rgb(242,193,5)" fg:x="2553485257" fg:w="157636928248"/><text x="1.8191%" y="1535.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (157,636,928,248 samples, 96.87%)</title><rect x="1.5691%" y="1509" width="96.8668%" height="15" fill="rgb(232,140,9)" fg:x="2553485257" fg:w="157636928248"/><text x="1.8191%" y="1519.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (157,636,928,248 samples, 96.87%)</title><rect x="1.5691%" y="1493" width="96.8668%" height="15" fill="rgb(213,222,16)" fg:x="2553485257" fg:w="157636928248"/><text x="1.8191%" y="1503.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (157,636,928,248 samples, 96.87%)</title><rect x="1.5691%" y="1477" width="96.8668%" height="15" fill="rgb(222,75,50)" fg:x="2553485257" fg:w="157636928248"/><text x="1.8191%" y="1487.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (157,637,086,968 samples, 96.87%)</title><rect x="1.5690%" y="1909" width="96.8669%" height="15" fill="rgb(205,180,2)" fg:x="2553338061" fg:w="157637086968"/><text x="1.8190%" y="1919.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (157,637,086,968 samples, 96.87%)</title><rect x="1.5690%" y="1893" width="96.8669%" height="15" fill="rgb(216,34,7)" fg:x="2553338061" fg:w="157637086968"/><text x="1.8190%" y="1903.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (157,637,086,968 samples, 96.87%)</title><rect x="1.5690%" y="1877" width="96.8669%" height="15" fill="rgb(253,16,32)" fg:x="2553338061" fg:w="157637086968"/><text x="1.8190%" y="1887.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (157,637,086,968 samples, 96.87%)</title><rect x="1.5690%" y="1861" width="96.8669%" height="15" fill="rgb(208,97,28)" fg:x="2553338061" fg:w="157637086968"/><text x="1.8190%" y="1871.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (157,637,086,968 samples, 96.87%)</title><rect x="1.5690%" y="1845" width="96.8669%" height="15" fill="rgb(225,92,11)" fg:x="2553338061" fg:w="157637086968"/><text x="1.8190%" y="1855.50">std::panicking::try</text></g><g><title>__rust_try (157,637,086,968 samples, 96.87%)</title><rect x="1.5690%" y="1829" width="96.8669%" height="15" fill="rgb(243,38,12)" fg:x="2553338061" fg:w="157637086968"/><text x="1.8190%" y="1839.50">__rust_try</text></g><g><title>std::panicking::try::do_call (157,637,086,968 samples, 96.87%)</title><rect x="1.5690%" y="1813" width="96.8669%" height="15" fill="rgb(208,139,16)" fg:x="2553338061" fg:w="157637086968"/><text x="1.8190%" y="1823.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (157,637,086,968 samples, 96.87%)</title><rect x="1.5690%" y="1797" width="96.8669%" height="15" fill="rgb(227,24,9)" fg:x="2553338061" fg:w="157637086968"/><text x="1.8190%" y="1807.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (157,637,086,968 samples, 96.87%)</title><rect x="1.5690%" y="1781" width="96.8669%" height="15" fill="rgb(206,62,11)" fg:x="2553338061" fg:w="157637086968"/><text x="1.8190%" y="1791.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (157,637,086,968 samples, 96.87%)</title><rect x="1.5690%" y="1765" width="96.8669%" height="15" fill="rgb(228,134,27)" fg:x="2553338061" fg:w="157637086968"/><text x="1.8190%" y="1775.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (157,637,086,968 samples, 96.87%)</title><rect x="1.5690%" y="1749" width="96.8669%" height="15" fill="rgb(205,55,33)" fg:x="2553338061" fg:w="157637086968"/><text x="1.8190%" y="1759.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>__GI___clone3 (157,642,832,332 samples, 96.87%)</title><rect x="1.5666%" y="1941" width="96.8704%" height="15" fill="rgb(243,75,43)" fg:x="2549448444" fg:w="157642832332"/><text x="1.8166%" y="1951.50">__GI___clone3</text></g><g><title>start_thread (157,642,832,332 samples, 96.87%)</title><rect x="1.5666%" y="1925" width="96.8704%" height="15" fill="rgb(223,27,42)" fg:x="2549448444" fg:w="157642832332"/><text x="1.8166%" y="1935.50">start_thread</text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow::_{{closure}} (19,287,441 samples, 0.01%)</title><rect x="98.4558%" y="1941" width="0.0119%" height="15" fill="rgb(232,189,33)" fg:x="160222816597" fg:w="19287441"/><text x="98.7058%" y="1951.50"></text></g><g><title>__vdso_clock_gettime (19,287,441 samples, 0.01%)</title><rect x="98.4558%" y="1925" width="0.0119%" height="15" fill="rgb(210,9,39)" fg:x="160222816597" fg:w="19287441"/><text x="98.7058%" y="1935.50"></text></g><g><title>[unknown] (19,287,441 samples, 0.01%)</title><rect x="98.4558%" y="1909" width="0.0119%" height="15" fill="rgb(242,85,26)" fg:x="160222816597" fg:w="19287441"/><text x="98.7058%" y="1919.50"></text></g><g><title>tokio-runtime-w (160,288,213,508 samples, 98.50%)</title><rect x="0.0000%" y="1957" width="98.4960%" height="15" fill="rgb(248,44,4)" fg:x="0" fg:w="160288213508"/><text x="0.2500%" y="1967.50">tokio-runtime-w</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1941" width="0.0271%" height="15" fill="rgb(250,96,46)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1951.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1925" width="0.0271%" height="15" fill="rgb(229,116,26)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1935.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1909" width="0.0271%" height="15" fill="rgb(246,94,34)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1919.50"></text></g><g><title>std::panic::catch_unwind (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1893" width="0.0271%" height="15" fill="rgb(251,73,21)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1903.50"></text></g><g><title>std::panicking::try (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1877" width="0.0271%" height="15" fill="rgb(254,121,25)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1887.50"></text></g><g><title>__rust_try (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1861" width="0.0271%" height="15" fill="rgb(215,161,49)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1871.50"></text></g><g><title>std::panicking::try::do_call (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1845" width="0.0271%" height="15" fill="rgb(221,43,13)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1855.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1829" width="0.0271%" height="15" fill="rgb(249,5,37)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1839.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1813" width="0.0271%" height="15" fill="rgb(226,25,44)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1823.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1797" width="0.0271%" height="15" fill="rgb(238,189,16)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1807.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1781" width="0.0271%" height="15" fill="rgb(251,186,8)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1791.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1765" width="0.0271%" height="15" fill="rgb(254,34,31)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1775.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1749" width="0.0271%" height="15" fill="rgb(225,215,27)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1759.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1733" width="0.0271%" height="15" fill="rgb(221,192,48)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1743.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1717" width="0.0271%" height="15" fill="rgb(219,137,20)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1727.50"></text></g><g><title>tokio::runtime::task::raw::poll (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1701" width="0.0271%" height="15" fill="rgb(219,84,11)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1711.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1685" width="0.0271%" height="15" fill="rgb(224,10,23)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1669" width="0.0271%" height="15" fill="rgb(248,22,39)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1679.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1653" width="0.0271%" height="15" fill="rgb(212,154,20)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1663.50"></text></g><g><title>std::panic::catch_unwind (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1637" width="0.0271%" height="15" fill="rgb(236,199,50)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1647.50"></text></g><g><title>std::panicking::try (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1621" width="0.0271%" height="15" fill="rgb(211,9,17)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1631.50"></text></g><g><title>__rust_try (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1605" width="0.0271%" height="15" fill="rgb(243,216,36)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1615.50"></text></g><g><title>std::panicking::try::do_call (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1589" width="0.0271%" height="15" fill="rgb(250,2,10)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1599.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1573" width="0.0271%" height="15" fill="rgb(226,50,48)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1583.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1557" width="0.0271%" height="15" fill="rgb(243,81,16)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1567.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1541" width="0.0271%" height="15" fill="rgb(250,14,2)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1551.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1525" width="0.0271%" height="15" fill="rgb(233,135,29)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1535.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1509" width="0.0271%" height="15" fill="rgb(224,64,43)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1519.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1493" width="0.0271%" height="15" fill="rgb(238,84,13)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1503.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1477" width="0.0271%" height="15" fill="rgb(253,48,26)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1461" width="0.0271%" height="15" fill="rgb(205,223,31)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1471.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1445" width="0.0271%" height="15" fill="rgb(221,41,32)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1429" width="0.0271%" height="15" fill="rgb(213,158,31)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1439.50"></text></g><g><title>tokio::runtime::context::set_scheduler (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1413" width="0.0271%" height="15" fill="rgb(245,126,43)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1397" width="0.0271%" height="15" fill="rgb(227,7,22)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1407.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1381" width="0.0271%" height="15" fill="rgb(252,90,44)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1391.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1365" width="0.0271%" height="15" fill="rgb(253,91,0)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1375.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1349" width="0.0271%" height="15" fill="rgb(252,175,49)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1333" width="0.0271%" height="15" fill="rgb(246,150,1)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (44,032,729 samples, 0.03%)</title><rect x="98.4689%" y="1317" width="0.0271%" height="15" fill="rgb(241,192,25)" fg:x="160244180779" fg:w="44032729"/><text x="98.7189%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1301" width="0.0210%" height="15" fill="rgb(239,187,11)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1311.50"></text></g><g><title>tokio::task::coop::budget (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1285" width="0.0210%" height="15" fill="rgb(218,202,51)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1295.50"></text></g><g><title>tokio::task::coop::with_budget (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1269" width="0.0210%" height="15" fill="rgb(225,176,8)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1253" width="0.0210%" height="15" fill="rgb(219,122,41)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1263.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1237" width="0.0210%" height="15" fill="rgb(248,140,20)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1247.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1221" width="0.0210%" height="15" fill="rgb(245,41,37)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::poll (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1205" width="0.0210%" height="15" fill="rgb(235,82,39)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1189" width="0.0210%" height="15" fill="rgb(230,108,42)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1173" width="0.0210%" height="15" fill="rgb(215,150,50)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1157" width="0.0210%" height="15" fill="rgb(233,212,5)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1141" width="0.0210%" height="15" fill="rgb(245,80,22)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1151.50"></text></g><g><title>std::panicking::try (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1125" width="0.0210%" height="15" fill="rgb(238,129,16)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1135.50"></text></g><g><title>__rust_try (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1109" width="0.0210%" height="15" fill="rgb(240,19,0)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1093" width="0.0210%" height="15" fill="rgb(232,42,35)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1103.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1077" width="0.0210%" height="15" fill="rgb(223,130,24)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1061" width="0.0210%" height="15" fill="rgb(237,16,22)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1071.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1045" width="0.0210%" height="15" fill="rgb(248,192,20)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1055.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1029" width="0.0210%" height="15" fill="rgb(233,167,2)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1039.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (34,169,404 samples, 0.02%)</title><rect x="98.4750%" y="1013" width="0.0210%" height="15" fill="rgb(252,71,44)" fg:x="160254044104" fg:w="34169404"/><text x="98.7250%" y="1023.50"></text></g><g><title>update_countdown::routes::websocket::_{{closure}}::_{{closure}} (19,052,524 samples, 0.01%)</title><rect x="98.4843%" y="997" width="0.0117%" height="15" fill="rgb(238,37,47)" fg:x="160269160984" fg:w="19052524"/><text x="98.7343%" y="1007.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (36,265,275 samples, 0.02%)</title><rect x="98.5432%" y="1493" width="0.0223%" height="15" fill="rgb(214,202,54)" fg:x="160364985067" fg:w="36265275"/><text x="98.7932%" y="1503.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park (100,566,073 samples, 0.06%)</title><rect x="98.5050%" y="1669" width="0.0618%" height="15" fill="rgb(254,165,40)" fg:x="160302850069" fg:w="100566073"/><text x="98.7550%" y="1679.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current (100,566,073 samples, 0.06%)</title><rect x="98.5050%" y="1653" width="0.0618%" height="15" fill="rgb(246,173,38)" fg:x="160302850069" fg:w="100566073"/><text x="98.7550%" y="1663.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (96,983,691 samples, 0.06%)</title><rect x="98.5072%" y="1637" width="0.0596%" height="15" fill="rgb(215,3,27)" fg:x="160306432451" fg:w="96983691"/><text x="98.7572%" y="1647.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current::_{{closure}} (93,652,280 samples, 0.06%)</title><rect x="98.5092%" y="1621" width="0.0575%" height="15" fill="rgb(239,169,51)" fg:x="160309763862" fg:w="93652280"/><text x="98.7592%" y="1631.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park::_{{closure}} (93,648,038 samples, 0.06%)</title><rect x="98.5092%" y="1605" width="0.0575%" height="15" fill="rgb(212,5,25)" fg:x="160309768104" fg:w="93648038"/><text x="98.7592%" y="1615.50"></text></g><g><title>tokio::runtime::park::Inner::park (91,943,990 samples, 0.06%)</title><rect x="98.5103%" y="1589" width="0.0565%" height="15" fill="rgb(243,45,17)" fg:x="160311472152" fg:w="91943990"/><text x="98.7603%" y="1599.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (69,773,968 samples, 0.04%)</title><rect x="98.5239%" y="1573" width="0.0429%" height="15" fill="rgb(242,97,9)" fg:x="160333642174" fg:w="69773968"/><text x="98.7739%" y="1583.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (67,869,587 samples, 0.04%)</title><rect x="98.5251%" y="1557" width="0.0417%" height="15" fill="rgb(228,71,31)" fg:x="160335546555" fg:w="67869587"/><text x="98.7751%" y="1567.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (60,605,145 samples, 0.04%)</title><rect x="98.5295%" y="1541" width="0.0372%" height="15" fill="rgb(252,184,16)" fg:x="160342810997" fg:w="60605145"/><text x="98.7795%" y="1551.50"></text></g><g><title>parking_lot_core::parking_lot::park (47,766,607 samples, 0.03%)</title><rect x="98.5374%" y="1525" width="0.0294%" height="15" fill="rgb(236,169,46)" fg:x="160355649535" fg:w="47766607"/><text x="98.7874%" y="1535.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (47,766,607 samples, 0.03%)</title><rect x="98.5374%" y="1509" width="0.0294%" height="15" fill="rgb(207,17,47)" fg:x="160355649535" fg:w="47766607"/><text x="98.7874%" y="1519.50"></text></g><g><title>tokio::runtime::context::budget (21,040,057 samples, 0.01%)</title><rect x="98.5723%" y="1637" width="0.0129%" height="15" fill="rgb(206,201,28)" fg:x="160412446532" fg:w="21040057"/><text x="98.8223%" y="1647.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18,902,127 samples, 0.01%)</title><rect x="98.5736%" y="1621" width="0.0116%" height="15" fill="rgb(224,184,23)" fg:x="160414584462" fg:w="18902127"/><text x="98.8236%" y="1631.50"></text></g><g><title>mio::poll::Registry::register (23,792,353 samples, 0.01%)</title><rect x="98.6564%" y="1365" width="0.0146%" height="15" fill="rgb(208,139,48)" fg:x="160549344435" fg:w="23792353"/><text x="98.9064%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (68,778,078 samples, 0.04%)</title><rect x="98.6939%" y="1269" width="0.0423%" height="15" fill="rgb(208,130,10)" fg:x="160610252040" fg:w="68778078"/><text x="98.9439%" y="1279.50"></text></g><g><title>__rustc::__rdl_alloc (68,778,078 samples, 0.04%)</title><rect x="98.6939%" y="1253" width="0.0423%" height="15" fill="rgb(211,213,45)" fg:x="160610252040" fg:w="68778078"/><text x="98.9439%" y="1263.50"></text></g><g><title>__posix_memalign (68,778,078 samples, 0.04%)</title><rect x="98.6939%" y="1237" width="0.0423%" height="15" fill="rgb(235,100,30)" fg:x="160610252040" fg:w="68778078"/><text x="98.9439%" y="1247.50"></text></g><g><title>_mid_memalign.isra.0 (64,505,806 samples, 0.04%)</title><rect x="98.6965%" y="1221" width="0.0396%" height="15" fill="rgb(206,144,31)" fg:x="160614524312" fg:w="64505806"/><text x="98.9465%" y="1231.50"></text></g><g><title>_int_memalign (60,078,520 samples, 0.04%)</title><rect x="98.6992%" y="1205" width="0.0369%" height="15" fill="rgb(224,200,26)" fg:x="160618951598" fg:w="60078520"/><text x="98.9492%" y="1215.50"></text></g><g><title>_int_malloc (56,627,997 samples, 0.03%)</title><rect x="98.7013%" y="1189" width="0.0348%" height="15" fill="rgb(247,104,53)" fg:x="160622402121" fg:w="56627997"/><text x="98.9513%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76,590,873 samples, 0.05%)</title><rect x="98.6910%" y="1301" width="0.0471%" height="15" fill="rgb(220,14,17)" fg:x="160605592429" fg:w="76590873"/><text x="98.9410%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (76,590,873 samples, 0.05%)</title><rect x="98.6910%" y="1285" width="0.0471%" height="15" fill="rgb(230,140,40)" fg:x="160605592429" fg:w="76590873"/><text x="98.9410%" y="1295.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (87,258,105 samples, 0.05%)</title><rect x="98.6860%" y="1349" width="0.0536%" height="15" fill="rgb(229,2,41)" fg:x="160597410266" fg:w="87258105"/><text x="98.9360%" y="1359.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (85,187,493 samples, 0.05%)</title><rect x="98.6873%" y="1333" width="0.0523%" height="15" fill="rgb(232,89,16)" fg:x="160599480878" fg:w="85187493"/><text x="98.9373%" y="1343.50"></text></g><g><title>alloc::alloc::exchange_malloc (85,187,493 samples, 0.05%)</title><rect x="98.6873%" y="1317" width="0.0523%" height="15" fill="rgb(247,59,52)" fg:x="160599480878" fg:w="85187493"/><text x="98.9373%" y="1327.50"></text></g><g><title>tokio::runtime::io::driver::Handle::add_source (155,538,593 samples, 0.10%)</title><rect x="98.6504%" y="1381" width="0.0956%" height="15" fill="rgb(226,110,21)" fg:x="160539500438" fg:w="155538593"/><text x="98.9004%" y="1391.50"></text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::allocate (107,451,390 samples, 0.07%)</title><rect x="98.6799%" y="1365" width="0.0660%" height="15" fill="rgb(224,176,43)" fg:x="160587587641" fg:w="107451390"/><text x="98.9299%" y="1375.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest_and_handle (160,164,761 samples, 0.10%)</title><rect x="98.6488%" y="1413" width="0.0984%" height="15" fill="rgb(221,73,6)" fg:x="160536944167" fg:w="160164761"/><text x="98.8988%" y="1423.50"></text></g><g><title>tokio::runtime::io::registration::Registration::new_with_interest_and_handle (160,163,508 samples, 0.10%)</title><rect x="98.6488%" y="1397" width="0.0984%" height="15" fill="rgb(232,78,19)" fg:x="160536945420" fg:w="160163508"/><text x="98.8988%" y="1407.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::new (187,319,379 samples, 0.12%)</title><rect x="98.6431%" y="1461" width="0.1151%" height="15" fill="rgb(233,112,48)" fg:x="160527643078" fg:w="187319379"/><text x="98.8931%" y="1471.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new (184,114,322 samples, 0.11%)</title><rect x="98.6451%" y="1445" width="0.1131%" height="15" fill="rgb(243,131,47)" fg:x="160530848135" fg:w="184114322"/><text x="98.8951%" y="1455.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest (179,997,338 samples, 0.11%)</title><rect x="98.6476%" y="1429" width="0.1106%" height="15" fill="rgb(226,51,1)" fg:x="160534965119" fg:w="179997338"/><text x="98.8976%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (17,853,529 samples, 0.01%)</title><rect x="98.7472%" y="1413" width="0.0110%" height="15" fill="rgb(247,58,7)" fg:x="160697108928" fg:w="17853529"/><text x="98.9972%" y="1423.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (19,739,857 samples, 0.01%)</title><rect x="98.7931%" y="1365" width="0.0121%" height="15" fill="rgb(209,7,32)" fg:x="160771693510" fg:w="19739857"/><text x="99.0431%" y="1375.50"></text></g><g><title>mio::net::tcp::listener::TcpListener::accept::_{{closure}}::_{{closure}} (17,179,196 samples, 0.01%)</title><rect x="98.7946%" y="1349" width="0.0106%" height="15" fill="rgb(209,39,41)" fg:x="160774254171" fg:w="17179196"/><text x="99.0446%" y="1359.50"></text></g><g><title>tokio::net::tcp::listener::TcpListener::accept::_{{closure}}::_{{closure}} (58,897,587 samples, 0.04%)</title><rect x="98.7873%" y="1445" width="0.0362%" height="15" fill="rgb(226,182,46)" fg:x="160762356520" fg:w="58897587"/><text x="99.0373%" y="1455.50"></text></g><g><title>mio::net::tcp::listener::TcpListener::accept (53,170,949 samples, 0.03%)</title><rect x="98.7909%" y="1429" width="0.0327%" height="15" fill="rgb(230,219,10)" fg:x="160768083158" fg:w="53170949"/><text x="99.0409%" y="1439.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (53,170,949 samples, 0.03%)</title><rect x="98.7909%" y="1413" width="0.0327%" height="15" fill="rgb(227,175,30)" fg:x="160768083158" fg:w="53170949"/><text x="99.0409%" y="1423.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (53,170,949 samples, 0.03%)</title><rect x="98.7909%" y="1397" width="0.0327%" height="15" fill="rgb(217,2,50)" fg:x="160768083158" fg:w="53170949"/><text x="99.0409%" y="1407.50"></text></g><g><title>mio::net::tcp::listener::TcpListener::accept::_{{closure}} (49,560,597 samples, 0.03%)</title><rect x="98.7931%" y="1381" width="0.0305%" height="15" fill="rgb(229,160,0)" fg:x="160771693510" fg:w="49560597"/><text x="99.0431%" y="1391.50"></text></g><g><title>mio::sys::unix::tcp::accept (29,820,740 samples, 0.02%)</title><rect x="98.8052%" y="1365" width="0.0183%" height="15" fill="rgb(207,78,37)" fg:x="160791433367" fg:w="29820740"/><text x="99.0552%" y="1375.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (38,928,249 samples, 0.02%)</title><rect x="98.8474%" y="1413" width="0.0239%" height="15" fill="rgb(225,57,0)" fg:x="160860038041" fg:w="38928249"/><text x="99.0974%" y="1423.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (27,392,583 samples, 0.02%)</title><rect x="98.8739%" y="1397" width="0.0168%" height="15" fill="rgb(232,154,2)" fg:x="160903198162" fg:w="27392583"/><text x="99.1239%" y="1407.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (17,391,189 samples, 0.01%)</title><rect x="98.8800%" y="1381" width="0.0107%" height="15" fill="rgb(241,212,25)" fg:x="160913199556" fg:w="17391189"/><text x="99.1300%" y="1391.50"></text></g><g><title>&lt;tokio::net::tcp::listener::TcpListener as axum::serve::listener::Listener&gt;::accept::_{{closure}} (432,226,866 samples, 0.27%)</title><rect x="98.6294%" y="1493" width="0.2656%" height="15" fill="rgb(226,69,20)" fg:x="160505363176" fg:w="432226866"/><text x="98.8794%" y="1503.50"></text></g><g><title>tokio::net::tcp::listener::TcpListener::accept::_{{closure}} (412,083,673 samples, 0.25%)</title><rect x="98.6418%" y="1477" width="0.2532%" height="15" fill="rgb(247,184,54)" fg:x="160525506369" fg:w="412083673"/><text x="98.8918%" y="1487.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::_{{closure}} (218,211,846 samples, 0.13%)</title><rect x="98.7609%" y="1461" width="0.1341%" height="15" fill="rgb(210,145,0)" fg:x="160719378196" fg:w="218211846"/><text x="99.0109%" y="1471.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::_{{closure}} (103,350,445 samples, 0.06%)</title><rect x="98.8315%" y="1445" width="0.0635%" height="15" fill="rgb(253,82,12)" fg:x="160834239597" fg:w="103350445"/><text x="99.0815%" y="1455.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::_{{closure}} (89,333,470 samples, 0.05%)</title><rect x="98.8401%" y="1429" width="0.0549%" height="15" fill="rgb(245,42,11)" fg:x="160848256572" fg:w="89333470"/><text x="99.0901%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (36,275,618 samples, 0.02%)</title><rect x="98.8727%" y="1413" width="0.0223%" height="15" fill="rgb(219,147,32)" fg:x="160901314424" fg:w="36275618"/><text x="99.1227%" y="1423.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (52,507,793 samples, 0.03%)</title><rect x="98.9199%" y="1445" width="0.0323%" height="15" fill="rgb(246,12,7)" fg:x="160978056822" fg:w="52507793"/><text x="99.1699%" y="1455.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified (51,002,494 samples, 0.03%)</title><rect x="98.9208%" y="1429" width="0.0313%" height="15" fill="rgb(243,50,9)" fg:x="160979562121" fg:w="51002494"/><text x="99.1708%" y="1439.50"></text></g><g><title>tokio::sync::watch::Sender&lt;T&gt;::closed::_{{closure}}::_{{closure}} (66,240,693 samples, 0.04%)</title><rect x="98.9173%" y="1461" width="0.0407%" height="15" fill="rgb(219,149,6)" fg:x="160973870676" fg:w="66240693"/><text x="99.1673%" y="1471.50"></text></g><g><title>&lt;tokio::task::coop::Coop&lt;F&gt; as core::future::future::Future&gt;::poll (74,923,481 samples, 0.05%)</title><rect x="98.9168%" y="1477" width="0.0460%" height="15" fill="rgb(241,51,42)" fg:x="160972965880" fg:w="74923481"/><text x="99.1668%" y="1487.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (552,860,104 samples, 0.34%)</title><rect x="98.6241%" y="1525" width="0.3397%" height="15" fill="rgb(226,128,27)" fg:x="160496693465" fg:w="552860104"/><text x="98.8741%" y="1535.50"></text></g><g><title>axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt;::run::_{{closure}}::_{{closure}} (551,178,539 samples, 0.34%)</title><rect x="98.6251%" y="1509" width="0.3387%" height="15" fill="rgb(244,144,4)" fg:x="160498375030" fg:w="551178539"/><text x="98.8751%" y="1519.50"></text></g><g><title>tokio::sync::watch::Sender&lt;T&gt;::closed::_{{closure}} (89,673,008 samples, 0.06%)</title><rect x="98.9087%" y="1493" width="0.0551%" height="15" fill="rgb(221,4,13)" fg:x="160959880561" fg:w="89673008"/><text x="99.1587%" y="1503.50"></text></g><g><title>&lt;axum::routing::Fallback&lt;S,E&gt; as core::clone::Clone&gt;::clone (29,827,891 samples, 0.02%)</title><rect x="99.0068%" y="1461" width="0.0183%" height="15" fill="rgb(208,170,28)" fg:x="161119428985" fg:w="29827891"/><text x="99.2568%" y="1471.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (29,827,891 samples, 0.02%)</title><rect x="99.0068%" y="1445" width="0.0183%" height="15" fill="rgb(226,131,13)" fg:x="161119428985" fg:w="29827891"/><text x="99.2568%" y="1455.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (29,827,891 samples, 0.02%)</title><rect x="99.0068%" y="1429" width="0.0183%" height="15" fill="rgb(215,72,41)" fg:x="161119428985" fg:w="29827891"/><text x="99.2568%" y="1439.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (29,827,891 samples, 0.02%)</title><rect x="99.0068%" y="1413" width="0.0183%" height="15" fill="rgb(243,108,20)" fg:x="161119428985" fg:w="29827891"/><text x="99.2568%" y="1423.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (29,827,891 samples, 0.02%)</title><rect x="99.0068%" y="1397" width="0.0183%" height="15" fill="rgb(230,189,17)" fg:x="161119428985" fg:w="29827891"/><text x="99.2568%" y="1407.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as core::clone::Clone&gt;::clone (29,827,891 samples, 0.02%)</title><rect x="99.0068%" y="1381" width="0.0183%" height="15" fill="rgb(220,50,17)" fg:x="161119428985" fg:w="29827891"/><text x="99.2568%" y="1391.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as core::clone::Clone&gt;::clone (29,827,891 samples, 0.02%)</title><rect x="99.0068%" y="1365" width="0.0183%" height="15" fill="rgb(248,152,48)" fg:x="161119428985" fg:w="29827891"/><text x="99.2568%" y="1375.50"></text></g><g><title>&lt;tower_http::timeout::service::Timeout&lt;S&gt; as core::clone::Clone&gt;::clone (22,357,391 samples, 0.01%)</title><rect x="99.0113%" y="1349" width="0.0137%" height="15" fill="rgb(244,91,11)" fg:x="161126899485" fg:w="22357391"/><text x="99.2613%" y="1359.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (22,357,391 samples, 0.01%)</title><rect x="99.0113%" y="1333" width="0.0137%" height="15" fill="rgb(220,157,5)" fg:x="161126899485" fg:w="22357391"/><text x="99.2613%" y="1343.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (22,357,391 samples, 0.01%)</title><rect x="99.0113%" y="1317" width="0.0137%" height="15" fill="rgb(253,137,8)" fg:x="161126899485" fg:w="22357391"/><text x="99.2613%" y="1327.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (18,125,005 samples, 0.01%)</title><rect x="99.0139%" y="1301" width="0.0111%" height="15" fill="rgb(217,137,51)" fg:x="161131131871" fg:w="18125005"/><text x="99.2639%" y="1311.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (18,773,563 samples, 0.01%)</title><rect x="99.0586%" y="1141" width="0.0115%" height="15" fill="rgb(218,209,53)" fg:x="161203822660" fg:w="18773563"/><text x="99.3086%" y="1151.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (32,638,171 samples, 0.02%)</title><rect x="99.0545%" y="1253" width="0.0201%" height="15" fill="rgb(249,137,25)" fg:x="161197202724" fg:w="32638171"/><text x="99.3045%" y="1263.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as core::clone::Clone&gt;::clone (32,638,171 samples, 0.02%)</title><rect x="99.0545%" y="1237" width="0.0201%" height="15" fill="rgb(239,155,26)" fg:x="161197202724" fg:w="32638171"/><text x="99.3045%" y="1247.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as core::clone::Clone&gt;::clone (32,638,171 samples, 0.02%)</title><rect x="99.0545%" y="1221" width="0.0201%" height="15" fill="rgb(227,85,46)" fg:x="161197202724" fg:w="32638171"/><text x="99.3045%" y="1231.50"></text></g><g><title>&lt;tower_http::timeout::service::Timeout&lt;S&gt; as core::clone::Clone&gt;::clone (28,608,657 samples, 0.02%)</title><rect x="99.0570%" y="1205" width="0.0176%" height="15" fill="rgb(251,107,43)" fg:x="161201232238" fg:w="28608657"/><text x="99.3070%" y="1215.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (26,018,235 samples, 0.02%)</title><rect x="99.0586%" y="1189" width="0.0160%" height="15" fill="rgb(234,170,33)" fg:x="161203822660" fg:w="26018235"/><text x="99.3086%" y="1199.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (26,018,235 samples, 0.02%)</title><rect x="99.0586%" y="1173" width="0.0160%" height="15" fill="rgb(206,29,35)" fg:x="161203822660" fg:w="26018235"/><text x="99.3086%" y="1183.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (26,018,235 samples, 0.02%)</title><rect x="99.0586%" y="1157" width="0.0160%" height="15" fill="rgb(227,138,25)" fg:x="161203822660" fg:w="26018235"/><text x="99.3086%" y="1167.50"></text></g><g><title>&lt;axum::routing::Fallback&lt;S,E&gt; as core::clone::Clone&gt;::clone (48,545,184 samples, 0.03%)</title><rect x="99.0545%" y="1317" width="0.0298%" height="15" fill="rgb(249,131,35)" fg:x="161197202724" fg:w="48545184"/><text x="99.3045%" y="1327.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (48,545,184 samples, 0.03%)</title><rect x="99.0545%" y="1301" width="0.0298%" height="15" fill="rgb(239,6,40)" fg:x="161197202724" fg:w="48545184"/><text x="99.3045%" y="1311.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (48,545,184 samples, 0.03%)</title><rect x="99.0545%" y="1285" width="0.0298%" height="15" fill="rgb(246,136,47)" fg:x="161197202724" fg:w="48545184"/><text x="99.3045%" y="1295.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (48,545,184 samples, 0.03%)</title><rect x="99.0545%" y="1269" width="0.0298%" height="15" fill="rgb(253,58,26)" fg:x="161197202724" fg:w="48545184"/><text x="99.3045%" y="1279.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (25,088,172 samples, 0.02%)</title><rect x="99.0855%" y="1285" width="0.0154%" height="15" fill="rgb(237,141,10)" fg:x="161247625639" fg:w="25088172"/><text x="99.3355%" y="1295.50"></text></g><g><title>&lt;axum::routing::method_routing::AllowHeader as core::clone::Clone&gt;::clone (31,969,274 samples, 0.02%)</title><rect x="99.0844%" y="1317" width="0.0196%" height="15" fill="rgb(234,156,12)" fg:x="161245747908" fg:w="31969274"/><text x="99.3344%" y="1327.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::clone::Clone&gt;::clone (31,969,274 samples, 0.02%)</title><rect x="99.0844%" y="1301" width="0.0196%" height="15" fill="rgb(243,224,36)" fg:x="161245747908" fg:w="31969274"/><text x="99.3344%" y="1311.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (44,425,975 samples, 0.03%)</title><rect x="99.1543%" y="1077" width="0.0273%" height="15" fill="rgb(205,229,51)" fg:x="161359461224" fg:w="44425975"/><text x="99.4043%" y="1087.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (44,425,975 samples, 0.03%)</title><rect x="99.1543%" y="1061" width="0.0273%" height="15" fill="rgb(223,189,4)" fg:x="161359461224" fg:w="44425975"/><text x="99.4043%" y="1071.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (38,389,386 samples, 0.02%)</title><rect x="99.1580%" y="1045" width="0.0236%" height="15" fill="rgb(249,167,54)" fg:x="161365497813" fg:w="38389386"/><text x="99.4080%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (25,438,208 samples, 0.02%)</title><rect x="99.1659%" y="1029" width="0.0156%" height="15" fill="rgb(218,34,28)" fg:x="161378448991" fg:w="25438208"/><text x="99.4159%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (25,438,208 samples, 0.02%)</title><rect x="99.1659%" y="1013" width="0.0156%" height="15" fill="rgb(232,109,42)" fg:x="161378448991" fg:w="25438208"/><text x="99.4159%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25,438,208 samples, 0.02%)</title><rect x="99.1659%" y="997" width="0.0156%" height="15" fill="rgb(248,214,46)" fg:x="161378448991" fg:w="25438208"/><text x="99.4159%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25,438,208 samples, 0.02%)</title><rect x="99.1659%" y="981" width="0.0156%" height="15" fill="rgb(244,216,40)" fg:x="161378448991" fg:w="25438208"/><text x="99.4159%" y="991.50"></text></g><g><title>alloc::alloc::alloc (22,785,256 samples, 0.01%)</title><rect x="99.1676%" y="965" width="0.0140%" height="15" fill="rgb(231,226,31)" fg:x="161381101943" fg:w="22785256"/><text x="99.4176%" y="975.50"></text></g><g><title>malloc (16,726,293 samples, 0.01%)</title><rect x="99.1713%" y="949" width="0.0103%" height="15" fill="rgb(238,38,43)" fg:x="161387160906" fg:w="16726293"/><text x="99.4213%" y="959.50"></text></g><g><title>&lt;tower_http::compression::predicate::DefaultPredicate as core::clone::Clone&gt;::clone (17,701,635 samples, 0.01%)</title><rect x="99.1816%" y="1077" width="0.0109%" height="15" fill="rgb(208,88,43)" fg:x="161403887199" fg:w="17701635"/><text x="99.4316%" y="1087.50"></text></g><g><title>&lt;tower_http::compression::service::Compression&lt;S,P&gt; as core::clone::Clone&gt;::clone (85,911,974 samples, 0.05%)</title><rect x="99.1428%" y="1093" width="0.0528%" height="15" fill="rgb(205,136,37)" fg:x="161340865849" fg:w="85911974"/><text x="99.3928%" y="1103.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (91,307,209 samples, 0.06%)</title><rect x="99.1405%" y="1141" width="0.0561%" height="15" fill="rgb(237,34,14)" fg:x="161337129008" fg:w="91307209"/><text x="99.3905%" y="1151.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as core::clone::Clone&gt;::clone (89,605,773 samples, 0.06%)</title><rect x="99.1416%" y="1125" width="0.0551%" height="15" fill="rgb(236,193,44)" fg:x="161338830444" fg:w="89605773"/><text x="99.3916%" y="1135.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as core::clone::Clone&gt;::clone (89,605,773 samples, 0.06%)</title><rect x="99.1416%" y="1109" width="0.0551%" height="15" fill="rgb(231,48,10)" fg:x="161338830444" fg:w="89605773"/><text x="99.3916%" y="1119.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (122,479,791 samples, 0.08%)</title><rect x="99.1253%" y="1253" width="0.0753%" height="15" fill="rgb(213,141,34)" fg:x="161312337335" fg:w="122479791"/><text x="99.3753%" y="1263.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as core::clone::Clone&gt;::clone (122,479,791 samples, 0.08%)</title><rect x="99.1253%" y="1237" width="0.0753%" height="15" fill="rgb(249,130,34)" fg:x="161312337335" fg:w="122479791"/><text x="99.3753%" y="1247.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as core::clone::Clone&gt;::clone (118,596,593 samples, 0.07%)</title><rect x="99.1277%" y="1221" width="0.0729%" height="15" fill="rgb(219,42,41)" fg:x="161316220533" fg:w="118596593"/><text x="99.3777%" y="1231.50"></text></g><g><title>&lt;tower_http::timeout::service::Timeout&lt;S&gt; as core::clone::Clone&gt;::clone (112,380,301 samples, 0.07%)</title><rect x="99.1315%" y="1205" width="0.0691%" height="15" fill="rgb(224,100,54)" fg:x="161322436825" fg:w="112380301"/><text x="99.3815%" y="1215.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (102,907,803 samples, 0.06%)</title><rect x="99.1373%" y="1189" width="0.0632%" height="15" fill="rgb(229,200,27)" fg:x="161331909323" fg:w="102907803"/><text x="99.3873%" y="1199.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (102,907,803 samples, 0.06%)</title><rect x="99.1373%" y="1173" width="0.0632%" height="15" fill="rgb(217,118,10)" fg:x="161331909323" fg:w="102907803"/><text x="99.3873%" y="1183.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (100,014,145 samples, 0.06%)</title><rect x="99.1391%" y="1157" width="0.0615%" height="15" fill="rgb(206,22,3)" fg:x="161334802981" fg:w="100014145"/><text x="99.3891%" y="1167.50"></text></g><g><title>&lt;axum::routing::method_routing::MethodRouter&lt;S,E&gt; as core::clone::Clone&gt;::clone (258,949,965 samples, 0.16%)</title><rect x="99.0497%" y="1333" width="0.1591%" height="15" fill="rgb(232,163,46)" fg:x="161189339408" fg:w="258949965"/><text x="99.2997%" y="1343.50"></text></g><g><title>&lt;axum::routing::method_routing::MethodEndpoint&lt;S,E&gt; as core::clone::Clone&gt;::clone (170,572,191 samples, 0.10%)</title><rect x="99.1040%" y="1317" width="0.1048%" height="15" fill="rgb(206,95,13)" fg:x="161277717182" fg:w="170572191"/><text x="99.3540%" y="1327.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (157,271,983 samples, 0.10%)</title><rect x="99.1122%" y="1301" width="0.0966%" height="15" fill="rgb(253,154,18)" fg:x="161291017390" fg:w="157271983"/><text x="99.3622%" y="1311.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (154,245,397 samples, 0.09%)</title><rect x="99.1141%" y="1285" width="0.0948%" height="15" fill="rgb(219,32,23)" fg:x="161294043976" fg:w="154245397"/><text x="99.3641%" y="1295.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (143,603,882 samples, 0.09%)</title><rect x="99.1206%" y="1269" width="0.0882%" height="15" fill="rgb(230,191,45)" fg:x="161304685491" fg:w="143603882"/><text x="99.3706%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17,306,351 samples, 0.01%)</title><rect x="99.2513%" y="885" width="0.0106%" height="15" fill="rgb(229,64,36)" fg:x="161517326790" fg:w="17306351"/><text x="99.5013%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17,306,351 samples, 0.01%)</title><rect x="99.2513%" y="869" width="0.0106%" height="15" fill="rgb(205,129,25)" fg:x="161517326790" fg:w="17306351"/><text x="99.5013%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19,066,987 samples, 0.01%)</title><rect x="99.2513%" y="933" width="0.0117%" height="15" fill="rgb(254,112,7)" fg:x="161517326790" fg:w="19066987"/><text x="99.5013%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,066,987 samples, 0.01%)</title><rect x="99.2513%" y="917" width="0.0117%" height="15" fill="rgb(226,53,48)" fg:x="161517326790" fg:w="19066987"/><text x="99.5013%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (19,066,987 samples, 0.01%)</title><rect x="99.2513%" y="901" width="0.0117%" height="15" fill="rgb(214,153,38)" fg:x="161517326790" fg:w="19066987"/><text x="99.5013%" y="911.50"></text></g><g><title>&lt;axum::routing::method_routing::AllowHeader as core::clone::Clone&gt;::clone (22,587,779 samples, 0.01%)</title><rect x="99.2513%" y="981" width="0.0139%" height="15" fill="rgb(243,101,7)" fg:x="161517326790" fg:w="22587779"/><text x="99.5013%" y="991.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::clone::Clone&gt;::clone (22,587,779 samples, 0.01%)</title><rect x="99.2513%" y="965" width="0.0139%" height="15" fill="rgb(240,140,22)" fg:x="161517326790" fg:w="22587779"/><text x="99.5013%" y="975.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (22,587,779 samples, 0.01%)</title><rect x="99.2513%" y="949" width="0.0139%" height="15" fill="rgb(235,114,2)" fg:x="161517326790" fg:w="22587779"/><text x="99.5013%" y="959.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (57,300,188 samples, 0.04%)</title><rect x="99.2746%" y="917" width="0.0352%" height="15" fill="rgb(242,59,12)" fg:x="161555331871" fg:w="57300188"/><text x="99.5246%" y="927.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as core::clone::Clone&gt;::clone (57,300,188 samples, 0.04%)</title><rect x="99.2746%" y="901" width="0.0352%" height="15" fill="rgb(252,134,9)" fg:x="161555331871" fg:w="57300188"/><text x="99.5246%" y="911.50"></text></g><g><title>&lt;tower_http::services::fs::serve_dir::ServeDir&lt;F&gt; as core::clone::Clone&gt;::clone (57,300,188 samples, 0.04%)</title><rect x="99.2746%" y="885" width="0.0352%" height="15" fill="rgb(236,4,44)" fg:x="161555331871" fg:w="57300188"/><text x="99.5246%" y="895.50"></text></g><g><title>&lt;std::path::PathBuf as core::clone::Clone&gt;::clone (55,343,995 samples, 0.03%)</title><rect x="99.2758%" y="869" width="0.0340%" height="15" fill="rgb(254,172,41)" fg:x="161557288064" fg:w="55343995"/><text x="99.5258%" y="879.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::clone::Clone&gt;::clone (47,352,994 samples, 0.03%)</title><rect x="99.2807%" y="853" width="0.0291%" height="15" fill="rgb(244,63,20)" fg:x="161565279065" fg:w="47352994"/><text x="99.5307%" y="863.50"></text></g><g><title>&lt;std::sys::os_str::bytes::Buf as core::clone::Clone&gt;::clone (47,352,994 samples, 0.03%)</title><rect x="99.2807%" y="837" width="0.0291%" height="15" fill="rgb(250,73,31)" fg:x="161565279065" fg:w="47352994"/><text x="99.5307%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (47,352,994 samples, 0.03%)</title><rect x="99.2807%" y="821" width="0.0291%" height="15" fill="rgb(241,38,36)" fg:x="161565279065" fg:w="47352994"/><text x="99.5307%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31,771,875 samples, 0.02%)</title><rect x="99.2903%" y="805" width="0.0195%" height="15" fill="rgb(245,211,2)" fg:x="161580860184" fg:w="31771875"/><text x="99.5403%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (31,771,875 samples, 0.02%)</title><rect x="99.2903%" y="789" width="0.0195%" height="15" fill="rgb(206,120,28)" fg:x="161580860184" fg:w="31771875"/><text x="99.5403%" y="799.50"></text></g><g><title>&lt;axum::routing::method_routing::MethodRouter&lt;S,E&gt; as core::clone::Clone&gt;::clone (112,191,372 samples, 0.07%)</title><rect x="99.2475%" y="997" width="0.0689%" height="15" fill="rgb(211,59,34)" fg:x="161511147337" fg:w="112191372"/><text x="99.4975%" y="1007.50"></text></g><g><title>&lt;axum::routing::method_routing::MethodEndpoint&lt;S,E&gt; as core::clone::Clone&gt;::clone (83,424,140 samples, 0.05%)</title><rect x="99.2651%" y="981" width="0.0513%" height="15" fill="rgb(233,168,5)" fg:x="161539914569" fg:w="83424140"/><text x="99.5151%" y="991.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (73,228,313 samples, 0.04%)</title><rect x="99.2714%" y="965" width="0.0450%" height="15" fill="rgb(234,33,13)" fg:x="161550110396" fg:w="73228313"/><text x="99.5214%" y="975.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (73,228,313 samples, 0.04%)</title><rect x="99.2714%" y="949" width="0.0450%" height="15" fill="rgb(231,150,26)" fg:x="161550110396" fg:w="73228313"/><text x="99.5214%" y="959.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (68,006,838 samples, 0.04%)</title><rect x="99.2746%" y="933" width="0.0418%" height="15" fill="rgb(217,191,4)" fg:x="161555331871" fg:w="68006838"/><text x="99.5246%" y="943.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as core::clone::Clone&gt;::clone (129,949,264 samples, 0.08%)</title><rect x="99.2378%" y="1045" width="0.0799%" height="15" fill="rgb(246,198,38)" fg:x="161495369474" fg:w="129949264"/><text x="99.4878%" y="1055.50"></text></g><g><title>&lt;axum::routing::strip_prefix::StripPrefix&lt;S&gt; as core::clone::Clone&gt;::clone (125,027,614 samples, 0.08%)</title><rect x="99.2408%" y="1029" width="0.0768%" height="15" fill="rgb(245,64,37)" fg:x="161500291124" fg:w="125027614"/><text x="99.4908%" y="1039.50"></text></g><g><title>&lt;axum::extract::nested_path::SetNestedPath&lt;S&gt; as core::clone::Clone&gt;::clone (123,146,527 samples, 0.08%)</title><rect x="99.2419%" y="1013" width="0.0757%" height="15" fill="rgb(250,30,36)" fg:x="161502172211" fg:w="123146527"/><text x="99.4919%" y="1023.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (132,455,116 samples, 0.08%)</title><rect x="99.2378%" y="1061" width="0.0814%" height="15" fill="rgb(217,86,53)" fg:x="161495369474" fg:w="132455116"/><text x="99.4878%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18,311,167 samples, 0.01%)</title><rect x="99.3192%" y="1029" width="0.0113%" height="15" fill="rgb(228,157,16)" fg:x="161627824590" fg:w="18311167"/><text x="99.5692%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18,311,167 samples, 0.01%)</title><rect x="99.3192%" y="1013" width="0.0113%" height="15" fill="rgb(217,59,31)" fg:x="161627824590" fg:w="18311167"/><text x="99.5692%" y="1023.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (165,751,257 samples, 0.10%)</title><rect x="99.2301%" y="1109" width="0.1019%" height="15" fill="rgb(237,138,41)" fg:x="161482911142" fg:w="165751257"/><text x="99.4801%" y="1119.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (165,751,257 samples, 0.10%)</title><rect x="99.2301%" y="1093" width="0.1019%" height="15" fill="rgb(227,91,49)" fg:x="161482911142" fg:w="165751257"/><text x="99.4801%" y="1103.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (157,963,974 samples, 0.10%)</title><rect x="99.2349%" y="1077" width="0.0971%" height="15" fill="rgb(247,21,44)" fg:x="161490698425" fg:w="157963974"/><text x="99.4849%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (20,837,809 samples, 0.01%)</title><rect x="99.3192%" y="1061" width="0.0128%" height="15" fill="rgb(219,210,51)" fg:x="161627824590" fg:w="20837809"/><text x="99.5692%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (20,837,809 samples, 0.01%)</title><rect x="99.3192%" y="1045" width="0.0128%" height="15" fill="rgb(209,140,6)" fg:x="161627824590" fg:w="20837809"/><text x="99.5692%" y="1055.50"></text></g><g><title>&lt;tower_http::compression::predicate::DefaultPredicate as core::clone::Clone&gt;::clone (22,643,910 samples, 0.01%)</title><rect x="99.3320%" y="1109" width="0.0139%" height="15" fill="rgb(221,188,24)" fg:x="161648662399" fg:w="22643910"/><text x="99.5820%" y="1119.50"></text></g><g><title>&lt;tower_http::compression::predicate::And&lt;Lhs,Rhs&gt; as core::clone::Clone&gt;::clone (22,643,910 samples, 0.01%)</title><rect x="99.3320%" y="1093" width="0.0139%" height="15" fill="rgb(232,154,20)" fg:x="161648662399" fg:w="22643910"/><text x="99.5820%" y="1103.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as core::clone::Clone&gt;::clone (196,799,058 samples, 0.12%)</title><rect x="99.2264%" y="1141" width="0.1209%" height="15" fill="rgb(244,137,50)" fg:x="161476897119" fg:w="196799058"/><text x="99.4764%" y="1151.50"></text></g><g><title>&lt;tower_http::compression::service::Compression&lt;S,P&gt; as core::clone::Clone&gt;::clone (194,657,840 samples, 0.12%)</title><rect x="99.2277%" y="1125" width="0.1196%" height="15" fill="rgb(225,185,43)" fg:x="161479038337" fg:w="194657840"/><text x="99.4777%" y="1135.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as core::clone::Clone&gt;::clone (202,455,617 samples, 0.12%)</title><rect x="99.2252%" y="1157" width="0.1244%" height="15" fill="rgb(213,205,38)" fg:x="161474933767" fg:w="202455617"/><text x="99.4752%" y="1167.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (203,071,029 samples, 0.12%)</title><rect x="99.2252%" y="1173" width="0.1248%" height="15" fill="rgb(236,73,12)" fg:x="161474933767" fg:w="203071029"/><text x="99.4752%" y="1183.50"></text></g><g><title>&lt;tower_http::timeout::service::Timeout&lt;S&gt; as core::clone::Clone&gt;::clone (219,123,637 samples, 0.13%)</title><rect x="99.2219%" y="1237" width="0.1346%" height="15" fill="rgb(235,219,13)" fg:x="161469482762" fg:w="219123637"/><text x="99.4719%" y="1247.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (219,123,637 samples, 0.13%)</title><rect x="99.2219%" y="1221" width="0.1346%" height="15" fill="rgb(218,59,36)" fg:x="161469482762" fg:w="219123637"/><text x="99.4719%" y="1231.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (219,123,637 samples, 0.13%)</title><rect x="99.2219%" y="1205" width="0.1346%" height="15" fill="rgb(205,110,39)" fg:x="161469482762" fg:w="219123637"/><text x="99.4719%" y="1215.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (213,672,632 samples, 0.13%)</title><rect x="99.2252%" y="1189" width="0.1313%" height="15" fill="rgb(218,206,42)" fg:x="161474933767" fg:w="213672632"/><text x="99.4752%" y="1199.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (238,724,686 samples, 0.15%)</title><rect x="99.2112%" y="1285" width="0.1467%" height="15" fill="rgb(248,125,24)" fg:x="161452169358" fg:w="238724686"/><text x="99.4612%" y="1295.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as core::clone::Clone&gt;::clone (236,423,573 samples, 0.15%)</title><rect x="99.2126%" y="1269" width="0.1453%" height="15" fill="rgb(242,28,27)" fg:x="161454470471" fg:w="236423573"/><text x="99.4626%" y="1279.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as core::clone::Clone&gt;::clone (234,785,013 samples, 0.14%)</title><rect x="99.2136%" y="1253" width="0.1443%" height="15" fill="rgb(216,228,15)" fg:x="161456109031" fg:w="234785013"/><text x="99.4636%" y="1263.50"></text></g><g><title>&lt;axum::routing::Endpoint&lt;S&gt; as core::clone::Clone&gt;::clone (514,388,979 samples, 0.32%)</title><rect x="99.0483%" y="1349" width="0.3161%" height="15" fill="rgb(235,116,46)" fg:x="161187061160" fg:w="514388979"/><text x="99.2983%" y="1359.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (253,160,766 samples, 0.16%)</title><rect x="99.2088%" y="1333" width="0.1556%" height="15" fill="rgb(224,18,32)" fg:x="161448289373" fg:w="253160766"/><text x="99.4588%" y="1343.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (250,804,296 samples, 0.15%)</title><rect x="99.2103%" y="1317" width="0.1541%" height="15" fill="rgb(252,5,12)" fg:x="161450645843" fg:w="250804296"/><text x="99.4603%" y="1327.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (249,280,781 samples, 0.15%)</title><rect x="99.2112%" y="1301" width="0.1532%" height="15" fill="rgb(251,36,5)" fg:x="161452169358" fg:w="249280781"/><text x="99.4612%" y="1311.50"></text></g><g><title>core::clone::Clone::clone (533,730,067 samples, 0.33%)</title><rect x="99.0473%" y="1365" width="0.3280%" height="15" fill="rgb(217,53,14)" fg:x="161185424163" fg:w="533730067"/><text x="99.2973%" y="1375.50"></text></g><g><title>&lt;axum::routing::RouteId as core::clone::Clone&gt;::clone (17,704,091 samples, 0.01%)</title><rect x="99.3644%" y="1349" width="0.0109%" height="15" fill="rgb(215,86,45)" fg:x="161701450139" fg:w="17704091"/><text x="99.6144%" y="1359.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (570,490,857 samples, 0.35%)</title><rect x="99.0374%" y="1397" width="0.3506%" height="15" fill="rgb(242,169,11)" fg:x="161169333640" fg:w="570490857"/><text x="99.2874%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (570,490,857 samples, 0.35%)</title><rect x="99.0374%" y="1381" width="0.3506%" height="15" fill="rgb(211,213,45)" fg:x="161169333640" fg:w="570490857"/><text x="99.2874%" y="1391.50"></text></g><g><title>malloc_consolidate (74,190,510 samples, 0.05%)</title><rect x="99.4178%" y="1269" width="0.0456%" height="15" fill="rgb(205,88,11)" fg:x="161788318011" fg:w="74190510"/><text x="99.6678%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (99,662,062 samples, 0.06%)</title><rect x="99.4037%" y="1317" width="0.0612%" height="15" fill="rgb(252,69,26)" fg:x="161765448750" fg:w="99662062"/><text x="99.6537%" y="1327.50"></text></g><g><title>malloc (93,910,688 samples, 0.06%)</title><rect x="99.4073%" y="1301" width="0.0577%" height="15" fill="rgb(246,123,37)" fg:x="161771200124" fg:w="93910688"/><text x="99.6573%" y="1311.50"></text></g><g><title>_int_malloc (93,910,688 samples, 0.06%)</title><rect x="99.4073%" y="1285" width="0.0577%" height="15" fill="rgb(212,205,5)" fg:x="161771200124" fg:w="93910688"/><text x="99.6573%" y="1295.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (704,786,871 samples, 0.43%)</title><rect x="99.0360%" y="1413" width="0.4331%" height="15" fill="rgb(253,148,0)" fg:x="161167000699" fg:w="704786871"/><text x="99.2860%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (131,963,073 samples, 0.08%)</title><rect x="99.3880%" y="1397" width="0.0811%" height="15" fill="rgb(239,22,4)" fg:x="161739824497" fg:w="131963073"/><text x="99.6380%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (127,646,161 samples, 0.08%)</title><rect x="99.3906%" y="1381" width="0.0784%" height="15" fill="rgb(226,26,53)" fg:x="161744141409" fg:w="127646161"/><text x="99.6406%" y="1391.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (112,155,948 samples, 0.07%)</title><rect x="99.4002%" y="1365" width="0.0689%" height="15" fill="rgb(225,229,45)" fg:x="161759631622" fg:w="112155948"/><text x="99.6502%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (112,155,948 samples, 0.07%)</title><rect x="99.4002%" y="1349" width="0.0689%" height="15" fill="rgb(220,60,37)" fg:x="161759631622" fg:w="112155948"/><text x="99.6502%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (112,155,948 samples, 0.07%)</title><rect x="99.4002%" y="1333" width="0.0689%" height="15" fill="rgb(217,180,35)" fg:x="161759631622" fg:w="112155948"/><text x="99.6502%" y="1343.50"></text></g><g><title>&lt;axum::routing::path_router::PathRouter&lt;S,_&gt; as core::clone::Clone&gt;::clone (735,823,992 samples, 0.45%)</title><rect x="99.0251%" y="1461" width="0.4522%" height="15" fill="rgb(229,7,53)" fg:x="161149256876" fg:w="735823992"/><text x="99.2751%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (727,251,462 samples, 0.45%)</title><rect x="99.0304%" y="1445" width="0.4469%" height="15" fill="rgb(254,137,3)" fg:x="161157829406" fg:w="727251462"/><text x="99.2804%" y="1455.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (725,433,350 samples, 0.45%)</title><rect x="99.0315%" y="1429" width="0.4458%" height="15" fill="rgb(215,140,41)" fg:x="161159647518" fg:w="725433350"/><text x="99.2815%" y="1439.50"></text></g><g><title>axum::routing::Router&lt;S&gt;::into_inner (785,358,472 samples, 0.48%)</title><rect x="99.0057%" y="1477" width="0.4826%" height="15" fill="rgb(250,80,15)" fg:x="161117660159" fg:w="785358472"/><text x="99.2557%" y="1487.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,647,163 samples, 0.01%)</title><rect x="99.5351%" y="1317" width="0.0127%" height="15" fill="rgb(252,191,6)" fg:x="161979214996" fg:w="20647163"/><text x="99.7851%" y="1327.50"></text></g><g><title>axum::routing::path_router::PathRouter&lt;S,_&gt;::with_state::_{{closure}} (20,011,407 samples, 0.01%)</title><rect x="99.5583%" y="1301" width="0.0123%" height="15" fill="rgb(246,217,18)" fg:x="162016972843" fg:w="20011407"/><text x="99.8083%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (33,889,023 samples, 0.02%)</title><rect x="99.5769%" y="1253" width="0.0208%" height="15" fill="rgb(223,93,7)" fg:x="162047258000" fg:w="33889023"/><text x="99.8269%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (33,889,023 samples, 0.02%)</title><rect x="99.5769%" y="1237" width="0.0208%" height="15" fill="rgb(225,55,52)" fg:x="162047258000" fg:w="33889023"/><text x="99.8269%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (30,152,421 samples, 0.02%)</title><rect x="99.5792%" y="1221" width="0.0185%" height="15" fill="rgb(240,31,24)" fg:x="162050994602" fg:w="30152421"/><text x="99.8292%" y="1231.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (38,155,581 samples, 0.02%)</title><rect x="99.6004%" y="1221" width="0.0234%" height="15" fill="rgb(205,56,52)" fg:x="162085497321" fg:w="38155581"/><text x="99.8504%" y="1231.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (38,155,581 samples, 0.02%)</title><rect x="99.6004%" y="1205" width="0.0234%" height="15" fill="rgb(246,146,12)" fg:x="162085497321" fg:w="38155581"/><text x="99.8504%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (38,155,581 samples, 0.02%)</title><rect x="99.6004%" y="1189" width="0.0234%" height="15" fill="rgb(239,84,36)" fg:x="162085497321" fg:w="38155581"/><text x="99.8504%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29,487,808 samples, 0.02%)</title><rect x="99.6057%" y="1173" width="0.0181%" height="15" fill="rgb(207,41,40)" fg:x="162094165094" fg:w="29487808"/><text x="99.8557%" y="1183.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (19,887,340 samples, 0.01%)</title><rect x="99.6238%" y="1221" width="0.0122%" height="15" fill="rgb(241,179,25)" fg:x="162123652902" fg:w="19887340"/><text x="99.8738%" y="1231.50"></text></g><g><title>hashbrown::map::make_hash (98,119,587 samples, 0.06%)</title><rect x="99.5977%" y="1253" width="0.0603%" height="15" fill="rgb(210,0,34)" fg:x="162081147023" fg:w="98119587"/><text x="99.8477%" y="1263.50"></text></g><g><title>core::hash::BuildHasher::hash_one (98,119,587 samples, 0.06%)</title><rect x="99.5977%" y="1237" width="0.0603%" height="15" fill="rgb(225,217,29)" fg:x="162081147023" fg:w="98119587"/><text x="99.8477%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (35,726,368 samples, 0.02%)</title><rect x="99.6361%" y="1221" width="0.0220%" height="15" fill="rgb(216,191,38)" fg:x="162143540242" fg:w="35726368"/><text x="99.8861%" y="1231.50"></text></g><g><title>&lt;axum::routing::RouteId as core::hash::Hash&gt;::hash (28,303,806 samples, 0.02%)</title><rect x="99.6406%" y="1205" width="0.0174%" height="15" fill="rgb(232,140,52)" fg:x="162150962804" fg:w="28303806"/><text x="99.8906%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (24,598,546 samples, 0.02%)</title><rect x="99.6429%" y="1189" width="0.0151%" height="15" fill="rgb(223,158,51)" fg:x="162154668064" fg:w="24598546"/><text x="99.8929%" y="1199.50"></text></g><g><title>core::hash::Hasher::write_u32 (21,384,838 samples, 0.01%)</title><rect x="99.6449%" y="1173" width="0.0131%" height="15" fill="rgb(235,29,51)" fg:x="162157881772" fg:w="21384838"/><text x="99.8949%" y="1183.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (21,384,838 samples, 0.01%)</title><rect x="99.6449%" y="1157" width="0.0131%" height="15" fill="rgb(215,181,18)" fg:x="162157881772" fg:w="21384838"/><text x="99.8949%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (21,384,838 samples, 0.01%)</title><rect x="99.6449%" y="1141" width="0.0131%" height="15" fill="rgb(227,125,34)" fg:x="162157881772" fg:w="21384838"/><text x="99.8949%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21,384,838 samples, 0.01%)</title><rect x="99.6449%" y="1125" width="0.0131%" height="15" fill="rgb(230,197,49)" fg:x="162157881772" fg:w="21384838"/><text x="99.8949%" y="1135.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (190,416,909 samples, 0.12%)</title><rect x="99.5478%" y="1317" width="0.1170%" height="15" fill="rgb(239,141,16)" fg:x="161999862159" fg:w="190416909"/><text x="99.7978%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (153,294,818 samples, 0.09%)</title><rect x="99.5706%" y="1301" width="0.0942%" height="15" fill="rgb(225,105,43)" fg:x="162036984250" fg:w="153294818"/><text x="99.8206%" y="1311.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (151,179,861 samples, 0.09%)</title><rect x="99.5719%" y="1285" width="0.0929%" height="15" fill="rgb(214,131,14)" fg:x="162039099207" fg:w="151179861"/><text x="99.8219%" y="1295.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (146,480,331 samples, 0.09%)</title><rect x="99.5748%" y="1269" width="0.0900%" height="15" fill="rgb(229,177,11)" fg:x="162043798737" fg:w="146480331"/><text x="99.8248%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (236,592,507 samples, 0.15%)</title><rect x="99.5277%" y="1365" width="0.1454%" height="15" fill="rgb(231,180,14)" fg:x="161967156484" fg:w="236592507"/><text x="99.7777%" y="1375.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (229,261,511 samples, 0.14%)</title><rect x="99.5322%" y="1349" width="0.1409%" height="15" fill="rgb(232,88,2)" fg:x="161974487480" fg:w="229261511"/><text x="99.7822%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (229,261,511 samples, 0.14%)</title><rect x="99.5322%" y="1333" width="0.1409%" height="15" fill="rgb(205,220,8)" fg:x="161974487480" fg:w="229261511"/><text x="99.7822%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (251,559,452 samples, 0.15%)</title><rect x="99.5195%" y="1397" width="0.1546%" height="15" fill="rgb(225,23,53)" fg:x="161953911681" fg:w="251559452"/><text x="99.7695%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (249,506,796 samples, 0.15%)</title><rect x="99.5208%" y="1381" width="0.1533%" height="15" fill="rgb(213,62,29)" fg:x="161955964337" fg:w="249506796"/><text x="99.7708%" y="1391.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (319,344,677 samples, 0.20%)</title><rect x="99.5073%" y="1429" width="0.1962%" height="15" fill="rgb(227,75,7)" fg:x="161933961648" fg:w="319344677"/><text x="99.7573%" y="1439.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (319,344,677 samples, 0.20%)</title><rect x="99.5073%" y="1413" width="0.1962%" height="15" fill="rgb(207,105,14)" fg:x="161933961648" fg:w="319344677"/><text x="99.7573%" y="1423.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (47,835,192 samples, 0.03%)</title><rect x="99.6741%" y="1397" width="0.0294%" height="15" fill="rgb(245,62,29)" fg:x="162205471133" fg:w="47835192"/><text x="99.9241%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (47,835,192 samples, 0.03%)</title><rect x="99.6741%" y="1381" width="0.0294%" height="15" fill="rgb(236,202,4)" fg:x="162205471133" fg:w="47835192"/><text x="99.9241%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (45,153,457 samples, 0.03%)</title><rect x="99.6758%" y="1365" width="0.0277%" height="15" fill="rgb(250,67,1)" fg:x="162208152868" fg:w="45153457"/><text x="99.9258%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (45,153,457 samples, 0.03%)</title><rect x="99.6758%" y="1349" width="0.0277%" height="15" fill="rgb(253,115,44)" fg:x="162208152868" fg:w="45153457"/><text x="99.9258%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (43,117,629 samples, 0.03%)</title><rect x="99.6770%" y="1333" width="0.0265%" height="15" fill="rgb(251,139,18)" fg:x="162210188696" fg:w="43117629"/><text x="99.9270%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (19,568,155 samples, 0.01%)</title><rect x="99.6915%" y="1317" width="0.0120%" height="15" fill="rgb(218,22,32)" fg:x="162233738170" fg:w="19568155"/><text x="99.9415%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (17,508,965 samples, 0.01%)</title><rect x="99.6928%" y="1301" width="0.0108%" height="15" fill="rgb(243,53,5)" fg:x="162235797360" fg:w="17508965"/><text x="99.9428%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (343,029,363 samples, 0.21%)</title><rect x="99.5018%" y="1461" width="0.2108%" height="15" fill="rgb(227,56,16)" fg:x="161925001837" fg:w="343029363"/><text x="99.7518%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (343,029,363 samples, 0.21%)</title><rect x="99.5018%" y="1445" width="0.2108%" height="15" fill="rgb(245,53,0)" fg:x="161925001837" fg:w="343029363"/><text x="99.7518%" y="1455.50"></text></g><g><title>axum::routing::_::&lt;impl tower_service::Service&lt;axum::serve::IncomingStream&lt;L&gt;&gt; for axum::routing::Router&gt;::call (1,173,832,273 samples, 0.72%)</title><rect x="98.9927%" y="1509" width="0.7213%" height="15" fill="rgb(216,170,35)" fg:x="161096561017" fg:w="1173832273"/><text x="99.2427%" y="1519.50"></text></g><g><title>axum::routing::Router&lt;S&gt;::with_state (1,171,873,120 samples, 0.72%)</title><rect x="98.9939%" y="1493" width="0.7201%" height="15" fill="rgb(211,200,8)" fg:x="161098520170" fg:w="1171873120"/><text x="99.2439%" y="1503.50"></text></g><g><title>axum::routing::path_router::PathRouter&lt;S,_&gt;::with_state (367,374,659 samples, 0.23%)</title><rect x="99.4883%" y="1477" width="0.2257%" height="15" fill="rgb(228,204,44)" fg:x="161903018631" fg:w="367374659"/><text x="99.7383%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (44,480,661 samples, 0.03%)</title><rect x="99.7691%" y="1349" width="0.0273%" height="15" fill="rgb(214,121,17)" fg:x="162360021406" fg:w="44480661"/><text x="100.0191%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (44,480,661 samples, 0.03%)</title><rect x="99.7691%" y="1333" width="0.0273%" height="15" fill="rgb(233,64,38)" fg:x="162360021406" fg:w="44480661"/><text x="100.0191%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (39,591,545 samples, 0.02%)</title><rect x="99.7721%" y="1317" width="0.0243%" height="15" fill="rgb(253,54,19)" fg:x="162364910522" fg:w="39591545"/><text x="100.0221%" y="1327.50"></text></g><g><title>tokio::runtime::context::with_scheduler (37,787,706 samples, 0.02%)</title><rect x="99.7732%" y="1301" width="0.0232%" height="15" fill="rgb(253,94,18)" fg:x="162366714361" fg:w="37787706"/><text x="100.0232%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36,007,107 samples, 0.02%)</title><rect x="99.7743%" y="1285" width="0.0221%" height="15" fill="rgb(227,57,52)" fg:x="162368494960" fg:w="36007107"/><text x="100.0243%" y="1295.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (30,332,154 samples, 0.02%)</title><rect x="99.7778%" y="1269" width="0.0186%" height="15" fill="rgb(230,228,50)" fg:x="162374169913" fg:w="30332154"/><text x="100.0278%" y="1279.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (30,332,154 samples, 0.02%)</title><rect x="99.7778%" y="1253" width="0.0186%" height="15" fill="rgb(217,205,27)" fg:x="162374169913" fg:w="30332154"/><text x="100.0278%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (26,663,213 samples, 0.02%)</title><rect x="99.7800%" y="1237" width="0.0164%" height="15" fill="rgb(252,71,50)" fg:x="162377838854" fg:w="26663213"/><text x="100.0300%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (26,643,220 samples, 0.02%)</title><rect x="99.7801%" y="1221" width="0.0164%" height="15" fill="rgb(209,86,4)" fg:x="162377858847" fg:w="26643220"/><text x="100.0301%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_remote_task (21,505,497 samples, 0.01%)</title><rect x="99.7832%" y="1205" width="0.0132%" height="15" fill="rgb(229,94,0)" fg:x="162382996570" fg:w="21505497"/><text x="100.0332%" y="1215.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (18,179,026 samples, 0.01%)</title><rect x="99.8044%" y="1317" width="0.0112%" height="15" fill="rgb(252,223,21)" fg:x="162417532665" fg:w="18179026"/><text x="100.0544%" y="1327.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (46,942,988 samples, 0.03%)</title><rect x="99.7975%" y="1333" width="0.0288%" height="15" fill="rgb(230,210,4)" fg:x="162406180236" fg:w="46942988"/><text x="100.0475%" y="1343.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (17,411,533 samples, 0.01%)</title><rect x="99.8156%" y="1317" width="0.0107%" height="15" fill="rgb(240,149,38)" fg:x="162435711691" fg:w="17411533"/><text x="100.0656%" y="1327.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (20,882,111 samples, 0.01%)</title><rect x="99.8501%" y="1285" width="0.0128%" height="15" fill="rgb(254,105,20)" fg:x="162491863580" fg:w="20882111"/><text x="100.1001%" y="1295.50"></text></g><g><title>alloc::alloc::exchange_malloc (16,936,724 samples, 0.01%)</title><rect x="99.8525%" y="1269" width="0.0104%" height="15" fill="rgb(253,87,46)" fg:x="162495808967" fg:w="16936724"/><text x="100.1025%" y="1279.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::new (17,326,495 samples, 0.01%)</title><rect x="99.8629%" y="1285" width="0.0106%" height="15" fill="rgb(253,116,33)" fg:x="162512745691" fg:w="17326495"/><text x="100.1129%" y="1295.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new::check (19,568,368 samples, 0.01%)</title><rect x="99.8780%" y="1285" width="0.0120%" height="15" fill="rgb(229,198,5)" fg:x="162537288060" fg:w="19568368"/><text x="100.1280%" y="1295.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (92,365,513 samples, 0.06%)</title><rect x="99.8384%" y="1301" width="0.0568%" height="15" fill="rgb(242,38,37)" fg:x="162472740022" fg:w="92365513"/><text x="100.0884%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (243,573,683 samples, 0.15%)</title><rect x="99.7472%" y="1429" width="0.1497%" height="15" fill="rgb(242,69,53)" fg:x="162324352841" fg:w="243573683"/><text x="99.9972%" y="1439.50"></text></g><g><title>tokio::task::spawn::spawn_inner::_{{closure}} (240,790,052 samples, 0.15%)</title><rect x="99.7489%" y="1413" width="0.1480%" height="15" fill="rgb(249,80,16)" fg:x="162327136472" fg:w="240790052"/><text x="99.9989%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (232,914,797 samples, 0.14%)</title><rect x="99.7537%" y="1397" width="0.1431%" height="15" fill="rgb(206,128,11)" fg:x="162335011727" fg:w="232914797"/><text x="100.0037%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (227,362,580 samples, 0.14%)</title><rect x="99.7571%" y="1381" width="0.1397%" height="15" fill="rgb(212,35,20)" fg:x="162340563944" fg:w="227362580"/><text x="100.0071%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (227,362,580 samples, 0.14%)</title><rect x="99.7571%" y="1365" width="0.1397%" height="15" fill="rgb(236,79,13)" fg:x="162340563944" fg:w="227362580"/><text x="100.0071%" y="1375.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (163,424,457 samples, 0.10%)</title><rect x="99.7964%" y="1349" width="0.1004%" height="15" fill="rgb(233,123,3)" fg:x="162404502067" fg:w="163424457"/><text x="100.0464%" y="1359.50"></text></g><g><title>tokio::runtime::task::new_task (114,803,300 samples, 0.07%)</title><rect x="99.8263%" y="1333" width="0.0705%" height="15" fill="rgb(214,93,52)" fg:x="162453123224" fg:w="114803300"/><text x="100.0763%" y="1343.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (104,730,232 samples, 0.06%)</title><rect x="99.8325%" y="1317" width="0.0644%" height="15" fill="rgb(251,37,40)" fg:x="162463196292" fg:w="104730232"/><text x="100.0825%" y="1327.50"></text></g><g><title>tokio::runtime::context::current::with_current (264,979,518 samples, 0.16%)</title><rect x="99.7352%" y="1477" width="0.1628%" height="15" fill="rgb(227,80,54)" fg:x="162304815278" fg:w="264979518"/><text x="99.9852%" y="1487.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (262,624,238 samples, 0.16%)</title><rect x="99.7366%" y="1461" width="0.1614%" height="15" fill="rgb(254,48,11)" fg:x="162307170558" fg:w="262624238"/><text x="99.9866%" y="1471.50"></text></g><g><title>tokio::runtime::context::current::with_current::_{{closure}} (249,876,842 samples, 0.15%)</title><rect x="99.7444%" y="1445" width="0.1535%" height="15" fill="rgb(235,193,26)" fg:x="162319917954" fg:w="249876842"/><text x="99.9944%" y="1455.50"></text></g><g><title>tokio::task::spawn::spawn (295,833,316 samples, 0.18%)</title><rect x="99.7264%" y="1509" width="0.1818%" height="15" fill="rgb(229,99,21)" fg:x="162290506096" fg:w="295833316"/><text x="99.9764%" y="1519.50"></text></g><g><title>tokio::task::spawn::spawn_inner (289,143,985 samples, 0.18%)</title><rect x="99.7305%" y="1493" width="0.1777%" height="15" fill="rgb(211,140,41)" fg:x="162297195427" fg:w="289143985"/><text x="99.9805%" y="1503.50"></text></g><g><title>axum::serve::handle_connection::_{{closure}} (1,533,100,569 samples, 0.94%)</title><rect x="98.9721%" y="1525" width="0.9421%" height="15" fill="rgb(240,227,30)" fg:x="161063091553" fg:w="1533100569"/><text x="99.2221%" y="1535.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::ops::drop::Drop&gt;::drop (41,810,910 samples, 0.03%)</title><rect x="99.9158%" y="1445" width="0.0257%" height="15" fill="rgb(215,224,45)" fg:x="162598782269" fg:w="41810910"/><text x="100.1658%" y="1455.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (18,291,510 samples, 0.01%)</title><rect x="99.9303%" y="1429" width="0.0112%" height="15" fill="rgb(206,123,31)" fg:x="162622301669" fg:w="18291510"/><text x="100.1803%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&lt;tokio::net::tcp::listener::TcpListener as axum::serve::listener::Listener&gt;::accept::{{closure}},tokio::sync::watch::Sender&lt;()&gt;::closed::{{closure}})&gt; (61,049,114 samples, 0.04%)</title><rect x="99.9142%" y="1525" width="0.0375%" height="15" fill="rgb(210,138,16)" fg:x="162596192122" fg:w="61049114"/><text x="100.1642%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::watch::Sender&lt;()&gt;::closed::{{closure}}&gt; (58,458,967 samples, 0.04%)</title><rect x="99.9158%" y="1509" width="0.0359%" height="15" fill="rgb(228,57,28)" fg:x="162598782269" fg:w="58458967"/><text x="100.1658%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::Coop&lt;tokio::sync::watch::Sender&lt;()&gt;::closed::{{closure}}::{{closure}}&gt;&gt; (58,458,967 samples, 0.04%)</title><rect x="99.9158%" y="1493" width="0.0359%" height="15" fill="rgb(242,170,10)" fg:x="162598782269" fg:w="58458967"/><text x="100.1658%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::watch::Sender&lt;()&gt;::closed::{{closure}}::{{closure}}&gt; (58,458,967 samples, 0.04%)</title><rect x="99.9158%" y="1477" width="0.0359%" height="15" fill="rgb(228,214,39)" fg:x="162598782269" fg:w="58458967"/><text x="100.1658%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::notify::Notified&gt; (58,458,967 samples, 0.04%)</title><rect x="99.9158%" y="1461" width="0.0359%" height="15" fill="rgb(218,179,33)" fg:x="162598782269" fg:w="58458967"/><text x="100.1658%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::notify::Waiter&gt; (16,648,057 samples, 0.01%)</title><rect x="99.9415%" y="1445" width="0.0102%" height="15" fill="rgb(235,193,39)" fg:x="162640593179" fg:w="16648057"/><text x="100.1915%" y="1455.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::_{{closure}} (2,196,480,833 samples, 1.35%)</title><rect x="98.6036%" y="1557" width="1.3497%" height="15" fill="rgb(219,221,36)" fg:x="160463310840" fg:w="2196480833"/><text x="98.8536%" y="1567.50"></text></g><g><title>axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt;::run::_{{closure}} (2,184,482,515 samples, 1.34%)</title><rect x="98.6109%" y="1541" width="1.3423%" height="15" fill="rgb(248,218,19)" fg:x="160475309158" fg:w="2184482515"/><text x="98.8609%" y="1551.50"></text></g><g><title>&lt;axum::serve::private::ServeFuture as core::future::future::Future&gt;::poll (2,209,815,246 samples, 1.36%)</title><rect x="98.5989%" y="1573" width="1.3579%" height="15" fill="rgb(205,50,9)" fg:x="160455766303" fg:w="2209815246"/><text x="98.8489%" y="1583.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (36,609,126 samples, 0.02%)</title><rect x="99.9632%" y="1557" width="0.0225%" height="15" fill="rgb(238,81,28)" fg:x="162675942942" fg:w="36609126"/><text x="100.2132%" y="1567.50"></text></g><g><title>tokio::runtime::task::raw::try_read_output (30,310,511 samples, 0.02%)</title><rect x="99.9671%" y="1541" width="0.0186%" height="15" fill="rgb(235,110,19)" fg:x="162682241557" fg:w="30310511"/><text x="100.2171%" y="1551.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (28,422,867 samples, 0.02%)</title><rect x="99.9683%" y="1525" width="0.0175%" height="15" fill="rgb(214,7,14)" fg:x="162684129201" fg:w="28422867"/><text x="100.2183%" y="1535.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (54,713,964 samples, 0.03%)</title><rect x="99.9569%" y="1573" width="0.0336%" height="15" fill="rgb(211,77,3)" fg:x="162665581549" fg:w="54713964"/><text x="100.2069%" y="1583.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,277,113,209 samples, 1.40%)</title><rect x="98.5950%" y="1605" width="1.3993%" height="15" fill="rgb(229,5,9)" fg:x="160449321468" fg:w="2277113209"/><text x="98.8450%" y="1615.50"></text></g><g><title>update_countdown::main::_{{closure}}::_{{closure}} (2,277,113,209 samples, 1.40%)</title><rect x="98.5950%" y="1589" width="1.3993%" height="15" fill="rgb(225,90,11)" fg:x="160449321468" fg:w="2277113209"/><text x="98.8450%" y="1599.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (2,439,506,619 samples, 1.50%)</title><rect x="98.4990%" y="1925" width="1.4991%" height="15" fill="rgb(242,56,8)" fg:x="160293203985" fg:w="2439506619"/><text x="98.7490%" y="1935.50"></text></g><g><title>__libc_start_call_main (2,439,506,619 samples, 1.50%)</title><rect x="98.4990%" y="1909" width="1.4991%" height="15" fill="rgb(249,212,39)" fg:x="160293203985" fg:w="2439506619"/><text x="98.7490%" y="1919.50"></text></g><g><title>main (2,439,506,619 samples, 1.50%)</title><rect x="98.4990%" y="1893" width="1.4991%" height="15" fill="rgb(236,90,9)" fg:x="160293203985" fg:w="2439506619"/><text x="98.7490%" y="1903.50"></text></g><g><title>std::rt::lang_start (2,439,506,619 samples, 1.50%)</title><rect x="98.4990%" y="1877" width="1.4991%" height="15" fill="rgb(206,88,35)" fg:x="160293203985" fg:w="2439506619"/><text x="98.7490%" y="1887.50"></text></g><g><title>std::rt::lang_start_internal (2,439,506,619 samples, 1.50%)</title><rect x="98.4990%" y="1861" width="1.4991%" height="15" fill="rgb(205,126,30)" fg:x="160293203985" fg:w="2439506619"/><text x="98.7490%" y="1871.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (2,439,506,619 samples, 1.50%)</title><rect x="98.4990%" y="1845" width="1.4991%" height="15" fill="rgb(230,176,12)" fg:x="160293203985" fg:w="2439506619"/><text x="98.7490%" y="1855.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (2,439,506,619 samples, 1.50%)</title><rect x="98.4990%" y="1829" width="1.4991%" height="15" fill="rgb(243,19,9)" fg:x="160293203985" fg:w="2439506619"/><text x="98.7490%" y="1839.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2,439,506,619 samples, 1.50%)</title><rect x="98.4990%" y="1813" width="1.4991%" height="15" fill="rgb(245,171,17)" fg:x="160293203985" fg:w="2439506619"/><text x="98.7490%" y="1823.50"></text></g><g><title>update_countdown::main (2,439,506,619 samples, 1.50%)</title><rect x="98.4990%" y="1797" width="1.4991%" height="15" fill="rgb(227,52,21)" fg:x="160293203985" fg:w="2439506619"/><text x="98.7490%" y="1807.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (2,438,002,649 samples, 1.50%)</title><rect x="98.5000%" y="1781" width="1.4981%" height="15" fill="rgb(238,69,14)" fg:x="160294707955" fg:w="2438002649"/><text x="98.7500%" y="1791.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on_inner (2,438,002,649 samples, 1.50%)</title><rect x="98.5000%" y="1765" width="1.4981%" height="15" fill="rgb(241,156,39)" fg:x="160294707955" fg:w="2438002649"/><text x="98.7500%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (2,438,002,649 samples, 1.50%)</title><rect x="98.5000%" y="1749" width="1.4981%" height="15" fill="rgb(212,227,28)" fg:x="160294707955" fg:w="2438002649"/><text x="98.7500%" y="1759.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (2,438,002,649 samples, 1.50%)</title><rect x="98.5000%" y="1733" width="1.4981%" height="15" fill="rgb(209,118,27)" fg:x="160294707955" fg:w="2438002649"/><text x="98.7500%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (2,438,002,649 samples, 1.50%)</title><rect x="98.5000%" y="1717" width="1.4981%" height="15" fill="rgb(226,102,5)" fg:x="160294707955" fg:w="2438002649"/><text x="98.7500%" y="1727.50"></text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (2,438,002,649 samples, 1.50%)</title><rect x="98.5000%" y="1701" width="1.4981%" height="15" fill="rgb(223,34,3)" fg:x="160294707955" fg:w="2438002649"/><text x="98.7500%" y="1711.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (2,438,002,649 samples, 1.50%)</title><rect x="98.5000%" y="1685" width="1.4981%" height="15" fill="rgb(221,81,38)" fg:x="160294707955" fg:w="2438002649"/><text x="98.7500%" y="1695.50"></text></g><g><title>tokio::task::coop::budget (2,329,294,462 samples, 1.43%)</title><rect x="98.5668%" y="1669" width="1.4313%" height="15" fill="rgb(236,219,28)" fg:x="160403416142" fg:w="2329294462"/><text x="98.8168%" y="1679.50"></text></g><g><title>tokio::task::coop::with_budget (2,324,259,068 samples, 1.43%)</title><rect x="98.5699%" y="1653" width="1.4282%" height="15" fill="rgb(213,200,14)" fg:x="160408451536" fg:w="2324259068"/><text x="98.8199%" y="1663.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (2,299,224,015 samples, 1.41%)</title><rect x="98.5852%" y="1637" width="1.4129%" height="15" fill="rgb(240,33,19)" fg:x="160433486589" fg:w="2299224015"/><text x="98.8352%" y="1647.50"></text></g><g><title>update_countdown::main::_{{closure}} (2,299,224,015 samples, 1.41%)</title><rect x="98.5852%" y="1621" width="1.4129%" height="15" fill="rgb(233,113,27)" fg:x="160433486589" fg:w="2299224015"/><text x="98.8352%" y="1631.50"></text></g><g><title>_start (2,439,709,293 samples, 1.50%)</title><rect x="98.4990%" y="1941" width="1.4992%" height="15" fill="rgb(220,221,18)" fg:x="160293203984" fg:w="2439709293"/><text x="98.7490%" y="1951.50"></text></g><g><title>all (162,735,792,218 samples, 100%)</title><rect x="0.0000%" y="1973" width="100.0000%" height="15" fill="rgb(238,92,8)" fg:x="0" fg:w="162735792218"/><text x="0.2500%" y="1983.50"></text></g><g><title>update-countdow (2,447,578,710 samples, 1.50%)</title><rect x="98.4960%" y="1957" width="1.5040%" height="15" fill="rgb(222,164,16)" fg:x="160288213508" fg:w="2447578710"/><text x="98.7460%" y="1967.50"></text></g></svg></svg>