:root {
    --gray-50: hsl(240, 9%, 6%);
    --gray-100: hsl(240, 9.8%, 8%);
    --gray-150: hsl(240, 9%, 10%);
    --gray-300: hsl(240, 9%, 25%);
    --gray-500: hsl(240, 10%, 46%);
    --gray-600: hsl(240, 10%, 52%);
    --gray-700: hsl(240, 10%, 68%);

    --white-50: hsl(240, 100%, 96%);
    --white-100: hsl(240, 20%, 92%);
    --white-150: hsl(240, 20%, 89%);
    --white-300: hsl(240, 19%, 82%);
    --white-500: hsl(240, 20%, 71%);
    --white-600: hsl(240, 15%, 50%);
    --white-700: hsl(240, 20%, 60%);
}

[data-theme="dark"] {
    --bg-100: var(--gray-100);
    --bg-150: var(--gray-150);
    --bg-300: var(--gray-300);
    --bg-500: var(--gray-500);
    --bg-600: var(--gray-600);
    --bg-700: var(--gray-700);
    --fg-50: var(--white-50);
    --bg-opposite: var(--white-100);
    --github-color: hsl(0, 0%, 100%);
}

[data-theme="light"] {
    --bg-100: var(--white-100);
    --bg-150: var(--white-150);
    --bg-300: var(--white-300);
    --bg-500: var(--white-500);
    --bg-600: var(--white-600);
    --bg-700: var(--white-700);
    --fg-50: var(--gray-50);
    --bg-opposite: var(--gray-100);
    --github-color: hsl(212.7, 13.3%, 16.3%);
}

::selection {
    color: var(--bg-100);
    background: var(--bg-opposite);
}

*:focus-visible {
    outline-width: 2px;
    outline-offset: 5px;
    outline-color: var(--bg-opposite);
    outline-style: solid;
}

* {
    padding: 0px;
    margin: 0px;
    border: none;
}

button {
    background-color: transparent;
    cursor: pointer;
}

/* Stop the parent from being a few pixels bigger than the actual svg */
svg,
button {
    display: block;
}

body {
    background-color: var(--bg-100);
    overflow-y: scroll;
}

.main-fg-color {
    color: var(--fg-50);
}

.dim-fg-color {
    color: var(--bg-600);
}

.font-roboto-mono {
    font-family: "Roboto Mono", monospace;
    font-optical-sizing: auto;
}

.font-roboto {
    font-family: "Roboto", sans-serif;
}

.text-regular {
    font-weight: 400;
}

.text-title {
    font-weight: 800;
}

.text-caption {
    font-weight: 600;
}

.text-bold {
    font-weight: 700;
    font-style: bold;
}

.inline {
    display: inline;
}

.inline * {
    display: inline;
}

.blocky {
    display: grid;
    grid-template-columns: 1fr auto;
}

.blocky>* {
    justify-self: end;
}

.wrapper {
    min-height: 100vh;
    min-height: 100svh;
    max-width: 1920px;
    margin: auto;
    display: grid;
    grid-template-rows: auto 1fr auto;
}

.primary-header {
    display: flex;
    padding: clamp(1em, 3vw, 2em);
    padding-bottom: 1.5em;
    justify-content: end;
    gap: clamp(1.2em, 2vw, 1.5em);
}

#navbar {
    list-style-type: none;
    justify-content: end;
    display: flex;
    align-items: center;
    gap: clamp(1.2em, 2vw, 1.5em);
}

#navbar-toggle-button[aria-expanded="true"]>.open {
    display: none;
}

#navbar-toggle-button[aria-expanded="false"]>.close,
#navbar-toggle-button[aria-expanded="false"]+nav {
    display: none;
}

#navbar-toggle-button>svg {
    fill: var(--bg-600);
}

#info-button {
    color: var(--fg-50);
    font-size: 1em;
}

.nav-spacer {
    user-select: none;
    color: var(--bg-300);
}

#github-link {
    padding: 3px;
    display: block;
}

#github-link>svg {
    fill: var(--github-color);
}

#theme-toggle>svg {
    fill: var(--fg-50);
}

#theme-toggle>.light {
    padding: 1px;
}

[data-theme="light"] #theme-toggle>.light {
    display: none;
}

[data-theme="dark"] #theme-toggle>.dark {
    display: none;
}

.content {
    display: flex;
    height: 100%;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.display-container {
    align-self: center;
    margin: clamp(1.25em, 3vh, 3em) 0 clamp(0.8em, 1.5vh, 3em);
    display: grid;
    row-gap: 1.5em;
}

.display-container>* {
    width: fit-content;
    align-self: center;
    justify-self: center;
}

.datetime-container {
    display: grid;
    justify-items: center;
}

.datetime-container>* {
    width: fit-content;
    height: fit-content;
}

.caption-container {
    align-self: center;
    justify-self: center;
    margin: 0 clamp(1.5em, 8vw, 15em);
    font-size: clamp(0.8em, min(5vh, 2.2vw), 1.35em)
}

#countdown,
#datetime {
    white-space: nowrap;
}

#countdown {
    line-height: 0.8em;
}

.spacer {
    color: var(--bg-150);
}

.button-refresh-container {
    display: flex;
    width: 100%;
    align-self: flex-end;
    justify-content: center;
    align-items: center;
    bottom: 0;
    padding-top: 1vh;
    padding-bottom: 0.8vh;
}

#refresh>svg {
    fill: var(--fg-50);
}

#refresh:disabled {
    cursor: unset;
}

/* Matches devices that are using mouse/stylus */
@media (hover: hover) and (pointer: fine) {

    #countdown,
    #datetime,
    #theme-toggle,
    #refresh {
        transition: filter 150ms ease-in;
    }

    #refresh>svg {
        transition: fill 150ms ease-in;
    }

    #refresh:disabled>svg {
        fill: var(--bg-300);
        transition: fill 150ms ease-out;
    }

    /* On `Blocky` display, only select the actual countdown numbers and not
     * the spacers. */
    #countdown:hover [id^="countdown-"],
    #countdown:hover span {
        filter: brightness(85%);
        transition: filter 75ms ease-out;
    }

    #datetime:hover,
    #theme-toggle:hover {
        filter: brightness(80%);
        transition: filter 75ms ease-out;
    }

    #refresh:hover:enabled>svg {
        filter: brightness(75%);
        transition: filter 50ms linear, fill 150ms ease-out;
    }
}

.bottom-container {
    padding: 2em;
    padding-top: 0.5em;
    display: flex;
}

.bottom-container>svg {
    fill: var(--bg-600);
}

#user-count {
    padding-top: 1px;
}

#info-modal {
    position: relative;
    margin: 8em;
    padding: 3em;
}

#info-modal-contents {
    display: grid;
    row-gap: 1em;
}

#info-modal-close-button {
    position: absolute;
    top: 1em;
    right: 1em;
}

::backdrop {
    background-color: black;
    opacity: 25%
}
