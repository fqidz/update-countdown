:root {
    --gray-100: hsl(240, 9.8%, 8%);
    --gray-150: hsl(240, 9%, 10%);
    --gray-300: hsl(240, 9%, 25%);
    --gray-500: hsl(240, 10%, 46%);
    --gray-600: hsl(240, 10%, 52%);
    --gray-700: hsl(240, 10%, 68%);

    --white-50: hsl(240, 100%, 96%);
    --white-100: hsl(240, 20%, 92%);
    --white-150: hsl(240, 20%, 89%);
    --white-300: hsl(240, 19%, 82%);
    --white-500: hsl(240, 20%, 71%);
    --white-600: hsl(240, 20%, 65%);
    --white-700: hsl(240, 20%, 60%);

    @media (prefers-color-scheme: dark) {
        /* --opposite-bg-color: hsl(240, 33%, 97%); */
        /* --main-bg-color: hsl(240, 8%, 10%); */
        /* --main-fg-color: hsl(243, 100%, 96%); */
        /* --dim-fg-color: hsl(243, 9%, 60%); */
        /* --spacer-fg-color: hsl(240, 6%, 12%); */
        /* --github-color: hsl(0, 0%, 100%); */
    }

    @media (prefers-color-scheme: light) {
        /* --opposite-bg-color: hsl(240, 8%, 10%); */
        /* --main-bg-color: hsl(240, 33%, 97%); */
        /* --main-fg-color: hsl(240, 20%, 5%); */
        /* --dim-fg-color: hsl(240, 2%, 47%); */
        /* --spacer-fg-color: hsl(240, 14%, 93%); */
        /* --github-color: hsl(213, 13%, 16%); */
    }
}

[data-theme="dark"] {
    --bg-100: var(--gray-100);
    --bg-150: var(--gray-150);
    --bg-300: var(--gray-300);
    --bg-500: var(--gray-500);
    --bg-600: var(--gray-600);
    --bg-700: var(--gray-700);
    --fg-50: var(--white-50);
    --bg-opposite: var(--white-100);
    --github-color: hsl(0, 0%, 100%);
}

[data-theme="light"] {
    --bg-100: var(--white-100);
    --bg-150: var(--white-150);
    --bg-300: var(--white-300);
    --bg-500: var(--white-500);
    --bg-600: var(--white-600);
    --bg-700: var(--white-700);
    --fg-100: var(--gray-100);
    --bg-opposite: var(--gray-100);
    --github-color: hsl(212.7,13.3%,16.3%);
}

::selection {
    color: var(--bg-100);
    background: var(--bg-opposite);
}

*:focus-visible {
    outline-width: 2px;
    outline-offset: 5px;
    outline-color: var(--bg-opposite);
    outline-style: solid;
}

* {
    padding: 0px;
    margin: 0px;
    border: none;
}

.main-fg-color {
    color: var(--fg-50);
}

.dim-fg-color {
    color: var(--bg-600);
}

body {
    background-color: var(--bg-100);
    overflow-y: scroll;
}

.font-roboto-mono {
    font-family: "Roboto Mono", monospace;
    font-optical-sizing: auto;
}

.font-roboto {
    font-family: "Roboto", sans-serif;
}

.font-title {
    font-weight: 800;
    font-style: normal;
}

.font-caption {
    font-weight: 600;
    font-style: normal;
}

.font-bold {
    font-weight: 700;
    font-style: bold;
}

.font-normal {
    font-weight: 400;
    font-style: normal;
}

.inline {
    display: inline;
}

.inline * {
    display: inline;
}

.blocky {
    display: grid;
    grid-template-columns: 1fr auto;
}

.blocky>* {
    justify-self: end;
}

.wrapper {
    min-height: 100vh;
    min-height: 100svh;
    max-width: 1920px;
    margin: auto;
    /* margin-right: auto; */
    /* margin-left: auto; */
    display: grid;
    grid-template-rows: auto 1fr auto;
}

.primary-header {
    display: flex;
    padding: clamp(1em, 3vw, 2em);
    padding-bottom: 1.5em;
    justify-content: end;
    gap: clamp(1.2em, 2vw, 1.5em);
}

#navbar {
    list-style-type: none;
    justify-content: end;
    display: flex;
    align-items: center;
    gap: clamp(1.2em, 2vw, 1.5em);
}

.navbar-toggle-button[aria-expanded="true"]>.close {
    display: none;
}

.navbar-toggle-button[aria-expanded="false"]>.open {
    display: none;
}

/* @media (min-width: 600px){ */
/*     #navbar-button { */
/*         display: none; */
/*     } */
/* } */

.navbar-toggle-button svg {
    fill: var(--bg-600);
}

.info-button {
    color: var(--fg-50);
    font-size: 1em;
}

.nav-spacer {
    user-select: none;
    color: var(--bg-300);
}

#github-link {
    padding: 6px;
    display: block;
}

#github-link>svg>path {
    fill: var(--github-color);
}

.theme-toggle>svg {
    fill: var(--fg-50);
}

[data-theme="light"] .theme-toggle>.light {
    display: none;
}

[data-theme="dark"] .theme-toggle>.dark {
    display: none;
}

.content {
    display: flex;
    height: 100%;
    /* min-height: 100vh; */
    /* min-height: 100svh; */
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.display-container {
    align-self: center;
    margin: clamp(1.25em, 3vh, 3em) 0 clamp(0.8em, 1.5vh, 3em);
    display: grid;
    row-gap: 1.5em;
}

.display-container>* {
    width: fit-content;
    align-self: center;
    justify-self: center;
}

.datetime-container {
    display: grid;
    justify-items: center;
}

.datetime-container>* {
    width: fit-content;
    height: fit-content;
}

.caption-container {
    align-self: center;
    justify-self: center;
    margin: 0 clamp(1.5em, 8vw, 15em);
    font-size: clamp(0.8em, min(5vh, 2.2vw), 1.35em)
}

#countdown,
#datetime {
    white-space: nowrap;
}

#countdown {
    line-height: 0.8em;
}

.spacer {
    color: var(--bg-150);
}

.button-refresh-container {
    display: flex;
    width: 100%;
    align-self: flex-end;
    justify-content: center;
    align-items: center;
    bottom: 0;
    padding-top: 1vh;
    padding-bottom: 0.8vh;
}

button {
    background-color: transparent;
    cursor: pointer;
}

/* Stop the parent from being a few pixels bigger than the actual svg */
svg, button {
    display: block;
}


/* Matches devices that are using mouse/stylus */
@media (hover: hover) and (pointer: fine) {

    #countdown,
    #datetime,
    #refresh {
        transition: filter 150ms ease-in;
    }

    /* On `Blocky` display, only select the actual countdown numbers and not
     * the spacers. */
    #countdown:hover [id^="countdown-"],
    #countdown:hover span {
        filter: brightness(85%);
        transition: filter 75ms ease-out;
    }

    #datetime:hover {
        filter: brightness(80%);
        transition: filter 75ms ease-out;
    }


    /* button#refresh>svg { */
    /*     transition: rotate 75ms ease-in, filter 50ms linear; */
    /* } */

    #refresh:hover>svg {
        filter: brightness(75%);
        transition: filter 50ms linear;
        /* rotate: 15deg; */
        /* transition: rotate 75ms ease-out, filter 150ms linear; */
    }
}

/* Matches touchscreens */
/* @media not ((hover: hover) and (pointer: fine)) { */
/* } */

.bottom-container {
    padding: 2em;
    padding-top: 0.5em;
    display: flex;
}

.bottom-container>svg {
    fill: var(--bg-600);
}

#user-count {
    padding-top: 1px;
}

